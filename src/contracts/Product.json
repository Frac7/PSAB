{
  "contractName": "Product",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        }
      ],
      "name": "certify",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getByCertifier",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "portion",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "registeredBy",
              "type": "address"
            }
          ],
          "internalType": "struct Recordable.Data",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_item",
          "type": "uint256"
        }
      ],
      "name": "getByItem",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getByOperator",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getByPortion",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getCertificationById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "certifier",
              "type": "address"
            }
          ],
          "internalType": "struct Certifiable.Certification",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getTotal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_source",
          "type": "address"
        }
      ],
      "name": "register",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "register",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        }
      ],
      "name": "certifyProduct",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"certify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"certifyProduct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getByCertifier\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getById\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"portion\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"registeredBy\",\"type\":\"address\"}],\"internalType\":\"struct Recordable.Data\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_item\",\"type\":\"uint256\"}],\"name\":\"getByItem\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getByOperator\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getByPortion\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getCertificationById\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"certifier\",\"type\":\"address\"}],\"internalType\":\"struct Certifiable.Certification\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_source\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"certify(uint256,string)\":{\"params\":{\"_description\":\"Certification description\",\"_id\":\"Item to be certified\"}},\"certifyProduct(uint256,string)\":{\"params\":{\"_description\":\"Description of certification\",\"_id\":\"Product ID\"}},\"getByCertifier(address)\":{\"params\":{\"_address\":\"Certifier address for which to retrieve certifications\"},\"returns\":{\"_0\":\"the array containing all the certifications perfomed by a specific certifier\"}},\"getById(uint256)\":{\"params\":{\"_id\":\"Item ID\"},\"returns\":{\"_0\":\"the item data only if the item exists\"}},\"getByItem(uint256)\":{\"params\":{\"_item\":\"Item ID for which to retrieve certifications\"},\"returns\":{\"_0\":\"the array containing all the certifications related to a specific item\"}},\"getByOperator(address)\":{\"params\":{\"_address\":\"Operator's address\"},\"returns\":{\"_0\":\"the array containing all the item IDs registered by a specific operator\"}},\"getByPortion(uint256)\":{\"params\":{\"_id\":\"Portion ID\"},\"returns\":{\"_0\":\"the array containing all the the item IDs registered in a specific portion\"}},\"getCertificationById(uint256)\":{\"params\":{\"_id\":\"Item for which to retrieve certifications\"},\"returns\":{\"_0\":\"the related certification\"}},\"getTotal()\":{\"returns\":{\"_0\":\"the number of registerd items\"}},\"register(string,uint256)\":{\"params\":{\"_description\":\"Item description\",\"_id\":\"Related portion ID\"}},\"register(string,uint256,address)\":{\"params\":{\"_description\":\"Item description\",\"_id\":\"Related portion ID\",\"_source\":\"Original sender\"}}},\"title\":\"Product item contract. A product is recordable by an operator and certifiable by a certifier.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/francesca/WebstormProjects/APT/contracts/Product.sol\":\"Product\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/francesca/WebstormProjects/APT/contracts/Certifiable.sol\":{\"keccak256\":\"0x0f998b01c9e900b06f0e4b97d87e7fd5500d6ade67fd7c5c1da9bec02f022c6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ccec4f4ebebba600239fc9935caa021fa03f871639abec8faa3eb54e9aa5b32\",\"dweb:/ipfs/QmNe4mqn7Rgbdegx5Rphzrvf8yM3rBMHgus5EULkjdSBV4\"]},\"/home/francesca/WebstormProjects/APT/contracts/Product.sol\":{\"keccak256\":\"0x3da67592e938ea30ab1b485e30aa591fa543bf2113736609a95176889d65a444\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93aad7b0519c6367619f33be12f495a12d8a78f851046029e289b57321e583af\",\"dweb:/ipfs/QmawS9cvvJtF5omRCfQreLcgv9eFAe1SB38LvshkCctDHg\"]},\"/home/francesca/WebstormProjects/APT/contracts/Recordable.sol\":{\"keccak256\":\"0x7ac87c35a7b744a984d5508d0ea99158d22e9243df2700844cc37ffaea963de4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4008d8af1a6f0058e277021edc73b5dd007ebdcd1fd44376f5f0c1f5a2890494\",\"dweb:/ipfs/QmQ1DZ4WEUzCrVE7pRp7Kyj7g5bz9V8mfjtLG81M8FjTzC\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506113db806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80635dc1aad3116100715780635dc1aad31461019e57806365b6f987146101ba578063775a25e3146101d6578063ea87152b146101f4578063f4f4d23714610210578063f7475edf14610240576100a9565b806304d6e3f6146100ae57806327225077146100de57806337b2b5ad1461010e5780634a4d72e11461013e57806352acbb581461016e575b600080fd5b6100c860048036038101906100c39190610ecd565b61025c565b6040516100d59190611124565b60405180910390f35b6100f860048036038101906100f39190610ecd565b6102c7565b6040516101059190611198565b60405180910390f35b61012860048036038101906101239190610d9f565b6103ec565b6040516101359190611124565b60405180910390f35b61015860048036038101906101539190610d9f565b610483565b6040516101659190611124565b60405180910390f35b61018860048036038101906101839190610ecd565b61051a565b6040516101959190611124565b60405180910390f35b6101b860048036038101906101b39190610e20565b610585565b005b6101d460048036038101906101cf9190610ef6565b6106b8565b005b6101de6107ee565b6040516101eb91906111dc565b60405180910390f35b61020e60048036038101906102099190610dc8565b6107f8565b005b61022a60048036038101906102259190610ecd565b61088e565b60405161023791906111ba565b60405180910390f35b61025a60048036038101906102559190610ef6565b6109bc565b005b6060600260008381526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156102bb57602002820191906000526020600020905b8154815260200190600101908083116102a7575b50505050509050919050565b6102cf610b31565b60056000838152602001908152602001600020604051806040016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103865780601f1061035b57610100808354040283529160200191610386565b820191906000526020600020905b81548152906001019060200180831161036957829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b6060600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561047757602002820191906000526020600020905b815481526020019060010190808311610463575b50505050509050919050565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561050e57602002820191906000526020600020905b8154815260200190600101908083116104fa575b50505050509050919050565b60606007600083815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561057957602002820191906000526020600020905b815481526020019060010190808311610565575b50505050509050919050565b80600080600354815260200190815260200160002060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060035490806001815401808255809150506001900390600052602060002001600090919091909150553073ffffffffffffffffffffffffffffffffffffffff1663ea87152b8585856040518463ffffffff1660e01b815260040161068093929190611146565b600060405180830381600087803b15801561069a57600080fd5b505af11580156106ae573d6000803e3d6000fd5b5050505050505050565b818160056000600454815260200190815260200160002060000191906106df929190610b61565b503360056000600454815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060076000848152602001908152602001600020839080600181540180825580915050600190039060005260206000200160009091909190915055600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020839080600181540180825580915050600190039060005260206000200160009091909190915055600460008154809291906001019190505550505050565b6000600354905090565b82826000806003548152602001908152602001600020600001919061081e929190610b61565b5080600080600354815260200190815260200160002060010181905550600260008281526020019081526020016000206003549080600181540180825580915050600190039060005260206000200160009091909190915055600360008154809291906001019190505550505050565b610896610be1565b600080838152602001908152602001600020604051806060016040529081600082018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561094c5780601f106109215761010080835404028352916020019161094c565b820191906000526020600020905b81548152906001019060200180831161092f57829003601f168201915b50505050508152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b600073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1663f4f4d237856040518263ffffffff1660e01b8152600401610a0d91906111dc565b60006040518083038186803b158015610a2557600080fd5b505afa158015610a39573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610a629190610e8c565b6040015173ffffffffffffffffffffffffffffffffffffffff161415610abd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab490611178565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff166365b6f9878484846040518463ffffffff1660e01b8152600401610afa939291906111f7565b600060405180830381600087803b158015610b1457600080fd5b505af1158015610b28573d6000803e3d6000fd5b50505050505050565b604051806040016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610ba257803560ff1916838001178555610bd0565b82800160010185558215610bd0579182015b82811115610bcf578235825591602001919060010190610bb4565b5b509050610bdd9190610c18565b5090565b60405180606001604052806060815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b5b80821115610c31576000816000905550600101610c19565b5090565b600081359050610c4481611377565b92915050565b600081519050610c5981611377565b92915050565b60008083601f840112610c7157600080fd5b8235905067ffffffffffffffff811115610c8a57600080fd5b602083019150836001820283011115610ca257600080fd5b9250929050565b600082601f830112610cba57600080fd5b8151610ccd610cc882611256565b611229565b91508082526020830160208301858383011115610ce957600080fd5b610cf4838284611333565b50505092915050565b600060608284031215610d0f57600080fd5b610d196060611229565b9050600082015167ffffffffffffffff811115610d3557600080fd5b610d4184828501610ca9565b6000830152506020610d5584828501610d8a565b6020830152506040610d6984828501610c4a565b60408301525092915050565b600081359050610d848161138e565b92915050565b600081519050610d998161138e565b92915050565b600060208284031215610db157600080fd5b6000610dbf84828501610c35565b91505092915050565b600080600060408486031215610ddd57600080fd5b600084013567ffffffffffffffff811115610df757600080fd5b610e0386828701610c5f565b93509350506020610e1686828701610d75565b9150509250925092565b60008060008060608587031215610e3657600080fd5b600085013567ffffffffffffffff811115610e5057600080fd5b610e5c87828801610c5f565b94509450506020610e6f87828801610d75565b9250506040610e8087828801610c35565b91505092959194509250565b600060208284031215610e9e57600080fd5b600082015167ffffffffffffffff811115610eb857600080fd5b610ec484828501610cfd565b91505092915050565b600060208284031215610edf57600080fd5b6000610eed84828501610d75565b91505092915050565b600080600060408486031215610f0b57600080fd5b6000610f1986828701610d75565b935050602084013567ffffffffffffffff811115610f3657600080fd5b610f4286828701610c5f565b92509250509250925092565b6000610f5a8383611106565b60208301905092915050565b610f6f816112e8565b82525050565b6000610f8082611292565b610f8a81856112b5565b9350610f9583611282565b8060005b83811015610fc6578151610fad8882610f4e565b9750610fb8836112a8565b925050600181019050610f99565b5085935050505092915050565b6000610fdf83856112d7565b9350610fec838584611324565b610ff583611366565b840190509392505050565b600061100b8261129d565b61101581856112c6565b9350611025818560208601611333565b61102e81611366565b840191505092915050565b60006110466016836112d7565b91507f456c656d656e7420646f6573206e6f74206578697374000000000000000000006000830152602082019050919050565b600060408301600083015184820360008601526110968282611000565b91505060208301516110ab6020860182610f66565b508091505092915050565b600060608301600083015184820360008601526110d38282611000565b91505060208301516110e86020860182611106565b5060408301516110fb6040860182610f66565b508091505092915050565b61110f8161131a565b82525050565b61111e8161131a565b82525050565b6000602082019050818103600083015261113e8184610f75565b905092915050565b60006040820190508181036000830152611161818587610fd3565b90506111706020830184611115565b949350505050565b6000602082019050818103600083015261119181611039565b9050919050565b600060208201905081810360008301526111b28184611079565b905092915050565b600060208201905081810360008301526111d481846110b6565b905092915050565b60006020820190506111f16000830184611115565b92915050565b600060408201905061120c6000830186611115565b818103602083015261121f818486610fd3565b9050949350505050565b6000604051905081810181811067ffffffffffffffff8211171561124c57600080fd5b8060405250919050565b600067ffffffffffffffff82111561126d57600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006112f3826112fa565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611351578082015181840152602081019050611336565b83811115611360576000848401525b50505050565b6000601f19601f8301169050919050565b611380816112e8565b811461138b57600080fd5b50565b6113978161131a565b81146113a257600080fd5b5056fea26469706673582212204cc709e73ce2629c00e087de31255344db6b628e3b3e5b6c4282f22b44d166a964736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c80635dc1aad3116100715780635dc1aad31461019e57806365b6f987146101ba578063775a25e3146101d6578063ea87152b146101f4578063f4f4d23714610210578063f7475edf14610240576100a9565b806304d6e3f6146100ae57806327225077146100de57806337b2b5ad1461010e5780634a4d72e11461013e57806352acbb581461016e575b600080fd5b6100c860048036038101906100c39190610ecd565b61025c565b6040516100d59190611124565b60405180910390f35b6100f860048036038101906100f39190610ecd565b6102c7565b6040516101059190611198565b60405180910390f35b61012860048036038101906101239190610d9f565b6103ec565b6040516101359190611124565b60405180910390f35b61015860048036038101906101539190610d9f565b610483565b6040516101659190611124565b60405180910390f35b61018860048036038101906101839190610ecd565b61051a565b6040516101959190611124565b60405180910390f35b6101b860048036038101906101b39190610e20565b610585565b005b6101d460048036038101906101cf9190610ef6565b6106b8565b005b6101de6107ee565b6040516101eb91906111dc565b60405180910390f35b61020e60048036038101906102099190610dc8565b6107f8565b005b61022a60048036038101906102259190610ecd565b61088e565b60405161023791906111ba565b60405180910390f35b61025a60048036038101906102559190610ef6565b6109bc565b005b6060600260008381526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156102bb57602002820191906000526020600020905b8154815260200190600101908083116102a7575b50505050509050919050565b6102cf610b31565b60056000838152602001908152602001600020604051806040016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103865780601f1061035b57610100808354040283529160200191610386565b820191906000526020600020905b81548152906001019060200180831161036957829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b6060600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561047757602002820191906000526020600020905b815481526020019060010190808311610463575b50505050509050919050565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561050e57602002820191906000526020600020905b8154815260200190600101908083116104fa575b50505050509050919050565b60606007600083815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561057957602002820191906000526020600020905b815481526020019060010190808311610565575b50505050509050919050565b80600080600354815260200190815260200160002060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060035490806001815401808255809150506001900390600052602060002001600090919091909150553073ffffffffffffffffffffffffffffffffffffffff1663ea87152b8585856040518463ffffffff1660e01b815260040161068093929190611146565b600060405180830381600087803b15801561069a57600080fd5b505af11580156106ae573d6000803e3d6000fd5b5050505050505050565b818160056000600454815260200190815260200160002060000191906106df929190610b61565b503360056000600454815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060076000848152602001908152602001600020839080600181540180825580915050600190039060005260206000200160009091909190915055600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020839080600181540180825580915050600190039060005260206000200160009091909190915055600460008154809291906001019190505550505050565b6000600354905090565b82826000806003548152602001908152602001600020600001919061081e929190610b61565b5080600080600354815260200190815260200160002060010181905550600260008281526020019081526020016000206003549080600181540180825580915050600190039060005260206000200160009091909190915055600360008154809291906001019190505550505050565b610896610be1565b600080838152602001908152602001600020604051806060016040529081600082018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561094c5780601f106109215761010080835404028352916020019161094c565b820191906000526020600020905b81548152906001019060200180831161092f57829003601f168201915b50505050508152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b600073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1663f4f4d237856040518263ffffffff1660e01b8152600401610a0d91906111dc565b60006040518083038186803b158015610a2557600080fd5b505afa158015610a39573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610a629190610e8c565b6040015173ffffffffffffffffffffffffffffffffffffffff161415610abd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab490611178565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff166365b6f9878484846040518463ffffffff1660e01b8152600401610afa939291906111f7565b600060405180830381600087803b158015610b1457600080fd5b505af1158015610b28573d6000803e3d6000fd5b50505050505050565b604051806040016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610ba257803560ff1916838001178555610bd0565b82800160010185558215610bd0579182015b82811115610bcf578235825591602001919060010190610bb4565b5b509050610bdd9190610c18565b5090565b60405180606001604052806060815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b5b80821115610c31576000816000905550600101610c19565b5090565b600081359050610c4481611377565b92915050565b600081519050610c5981611377565b92915050565b60008083601f840112610c7157600080fd5b8235905067ffffffffffffffff811115610c8a57600080fd5b602083019150836001820283011115610ca257600080fd5b9250929050565b600082601f830112610cba57600080fd5b8151610ccd610cc882611256565b611229565b91508082526020830160208301858383011115610ce957600080fd5b610cf4838284611333565b50505092915050565b600060608284031215610d0f57600080fd5b610d196060611229565b9050600082015167ffffffffffffffff811115610d3557600080fd5b610d4184828501610ca9565b6000830152506020610d5584828501610d8a565b6020830152506040610d6984828501610c4a565b60408301525092915050565b600081359050610d848161138e565b92915050565b600081519050610d998161138e565b92915050565b600060208284031215610db157600080fd5b6000610dbf84828501610c35565b91505092915050565b600080600060408486031215610ddd57600080fd5b600084013567ffffffffffffffff811115610df757600080fd5b610e0386828701610c5f565b93509350506020610e1686828701610d75565b9150509250925092565b60008060008060608587031215610e3657600080fd5b600085013567ffffffffffffffff811115610e5057600080fd5b610e5c87828801610c5f565b94509450506020610e6f87828801610d75565b9250506040610e8087828801610c35565b91505092959194509250565b600060208284031215610e9e57600080fd5b600082015167ffffffffffffffff811115610eb857600080fd5b610ec484828501610cfd565b91505092915050565b600060208284031215610edf57600080fd5b6000610eed84828501610d75565b91505092915050565b600080600060408486031215610f0b57600080fd5b6000610f1986828701610d75565b935050602084013567ffffffffffffffff811115610f3657600080fd5b610f4286828701610c5f565b92509250509250925092565b6000610f5a8383611106565b60208301905092915050565b610f6f816112e8565b82525050565b6000610f8082611292565b610f8a81856112b5565b9350610f9583611282565b8060005b83811015610fc6578151610fad8882610f4e565b9750610fb8836112a8565b925050600181019050610f99565b5085935050505092915050565b6000610fdf83856112d7565b9350610fec838584611324565b610ff583611366565b840190509392505050565b600061100b8261129d565b61101581856112c6565b9350611025818560208601611333565b61102e81611366565b840191505092915050565b60006110466016836112d7565b91507f456c656d656e7420646f6573206e6f74206578697374000000000000000000006000830152602082019050919050565b600060408301600083015184820360008601526110968282611000565b91505060208301516110ab6020860182610f66565b508091505092915050565b600060608301600083015184820360008601526110d38282611000565b91505060208301516110e86020860182611106565b5060408301516110fb6040860182610f66565b508091505092915050565b61110f8161131a565b82525050565b61111e8161131a565b82525050565b6000602082019050818103600083015261113e8184610f75565b905092915050565b60006040820190508181036000830152611161818587610fd3565b90506111706020830184611115565b949350505050565b6000602082019050818103600083015261119181611039565b9050919050565b600060208201905081810360008301526111b28184611079565b905092915050565b600060208201905081810360008301526111d481846110b6565b905092915050565b60006020820190506111f16000830184611115565b92915050565b600060408201905061120c6000830186611115565b818103602083015261121f818486610fd3565b9050949350505050565b6000604051905081810181811067ffffffffffffffff8211171561124c57600080fd5b8060405250919050565b600067ffffffffffffffff82111561126d57600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006112f3826112fa565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611351578082015181840152602081019050611336565b83811115611360576000848401525b50505050565b6000601f19601f8301169050919050565b611380816112e8565b811461138b57600080fd5b50565b6113978161131a565b81146113a257600080fd5b5056fea26469706673582212204cc709e73ce2629c00e087de31255344db6b628e3b3e5b6c4282f22b44d166a964736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "388:360:5:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "388:360:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2141:120:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1542:131:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1855:143;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1878:132:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2161:127:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1311:239:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1050:379:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2317:82:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;940:243;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1637:100;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;530:216:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2141:120:7;2199:16;2234:15;:20;2250:3;2234:20;;;;;;;;;;;2227:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2141:120;;;:::o;1542:131:0:-;1608:20;;:::i;:::-;1647:14;:19;1662:3;1647:19;;;;;;;;;;;1640:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1542:131;;;:::o;1855:143::-;1920:16;1955:26;:36;1982:8;1955:36;;;;;;;;;;;;;;;1948:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1855:143;;;:::o;1878:132:7:-;1942:16;1977;:26;1994:8;1977:26;;;;;;;;;;;;;;;1970:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1878:132;;;:::o;2161:127:0:-;2218:16;2253:21;:28;2275:5;2253:28;;;;;;;;;;;2246:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2161:127;;;:::o;1311:239:7:-;1437:7;1408:5;:13;1414:6;;1408:13;;;;;;;;;;;:26;;;:36;;;;;;;;;;;;;;;;;;1454:16;:25;1471:7;1454:25;;;;;;;;;;;;;;;1485:6;;1454:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1503:4;:13;;;1517:12;;1531:3;1503:32;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1311:239;;;;:::o;1050:379:0:-;1179:12;;1129:14;:35;1144:19;;1129:35;;;;;;;;;;;:47;;:62;;;;;;;:::i;:::-;;1249:10;1201:14;:35;1216:19;;1201:35;;;;;;;;;;;:45;;;:58;;;;;;;;;;;;;;;;;;1278:21;:26;1300:3;1278:26;;;;;;;;;;;1310:3;1278:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1333:26;:38;1360:10;1333:38;;;;;;;;;;;;;;;1377:3;1333:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1400:19;;:22;;;;;;;;;;;;;1050:379;;;:::o;2317:82:7:-;2360:7;2386:6;;2379:13;;2317:82;:::o;940:243::-;1048:12;;1020:5;:13;1026:6;;1020:13;;;;;;;;;;;:25;;:40;;;;;;;:::i;:::-;;1094:3;1070:5;:13;1076:6;;1070:13;;;;;;;;;;;:21;;:27;;;;1116:15;:20;1132:3;1116:20;;;;;;;;;;;1142:6;;1116:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1168:6;;:8;;;;;;;;;;;;;940:243;;;:::o;1637:100::-;1690:11;;:::i;:::-;1720:5;:10;1726:3;1720:10;;;;;;;;;;;1713:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1637:100;;;:::o;530:216:5:-;662:1;620:44;;:4;:12;;;633:3;620:17;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:30;;;:44;;;616:82;;;666:32;;;;;;;;;;:::i;:::-;;;;;;;;616:82;708:4;:12;;;721:3;726:12;;708:31;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;530:216;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;5:130::-;;85:6;72:20;63:29;;97:33;124:5;97:33;:::i;:::-;57:78;;;;:::o;142:134::-;;226:6;220:13;211:22;;238:33;265:5;238:33;:::i;:::-;205:71;;;;:::o;298:337::-;;;413:3;406:4;398:6;394:17;390:27;380:2;;431:1;428;421:12;380:2;464:6;451:20;441:30;;491:18;483:6;480:30;477:2;;;523:1;520;513:12;477:2;557:4;549:6;545:17;533:29;;608:3;600:4;592:6;588:17;578:8;574:32;571:41;568:2;;;625:1;622;615:12;568:2;373:262;;;;;:::o;644:444::-;;757:3;750:4;742:6;738:17;734:27;724:2;;775:1;772;765:12;724:2;805:6;799:13;827:65;842:49;884:6;842:49;:::i;:::-;827:65;:::i;:::-;818:74;;912:6;905:5;898:21;948:4;940:6;936:17;981:4;974:5;970:16;1016:3;1007:6;1002:3;998:16;995:25;992:2;;;1033:1;1030;1023:12;992:2;1043:39;1075:6;1070:3;1065;1043:39;:::i;:::-;717:371;;;;;;;:::o;1125:758::-;;1246:4;1234:9;1229:3;1225:19;1221:30;1218:2;;;1264:1;1261;1254:12;1218:2;1282:20;1297:4;1282:20;:::i;:::-;1273:29;;1380:1;1369:9;1365:17;1359:24;1403:18;1395:6;1392:30;1389:2;;;1435:1;1432;1425:12;1389:2;1470:70;1536:3;1527:6;1516:9;1512:22;1470:70;:::i;:::-;1463:4;1456:5;1452:16;1445:96;1312:240;1605:2;1638:60;1694:3;1685:6;1674:9;1670:22;1638:60;:::i;:::-;1631:4;1624:5;1620:16;1613:86;1562:148;1768:2;1801:60;1857:3;1848:6;1837:9;1833:22;1801:60;:::i;:::-;1794:4;1787:5;1783:16;1776:86;1720:153;1212:671;;;;:::o;1890:130::-;;1970:6;1957:20;1948:29;;1982:33;2009:5;1982:33;:::i;:::-;1942:78;;;;:::o;2027:134::-;;2111:6;2105:13;2096:22;;2123:33;2150:5;2123:33;:::i;:::-;2090:71;;;;:::o;2168:241::-;;2272:2;2260:9;2251:7;2247:23;2243:32;2240:2;;;2288:1;2285;2278:12;2240:2;2323:1;2340:53;2385:7;2376:6;2365:9;2361:22;2340:53;:::i;:::-;2330:63;;2302:97;2234:175;;;;:::o;2416:492::-;;;;2557:2;2545:9;2536:7;2532:23;2528:32;2525:2;;;2573:1;2570;2563:12;2525:2;2636:1;2625:9;2621:17;2608:31;2659:18;2651:6;2648:30;2645:2;;;2691:1;2688;2681:12;2645:2;2719:65;2776:7;2767:6;2756:9;2752:22;2719:65;:::i;:::-;2701:83;;;;2587:203;2821:2;2839:53;2884:7;2875:6;2864:9;2860:22;2839:53;:::i;:::-;2829:63;;2800:98;2519:389;;;;;:::o;2915:617::-;;;;;3073:2;3061:9;3052:7;3048:23;3044:32;3041:2;;;3089:1;3086;3079:12;3041:2;3152:1;3141:9;3137:17;3124:31;3175:18;3167:6;3164:30;3161:2;;;3207:1;3204;3197:12;3161:2;3235:65;3292:7;3283:6;3272:9;3268:22;3235:65;:::i;:::-;3217:83;;;;3103:203;3337:2;3355:53;3400:7;3391:6;3380:9;3376:22;3355:53;:::i;:::-;3345:63;;3316:98;3445:2;3463:53;3508:7;3499:6;3488:9;3484:22;3463:53;:::i;:::-;3453:63;;3424:98;3035:497;;;;;;;:::o;3539:384::-;;3675:2;3663:9;3654:7;3650:23;3646:32;3643:2;;;3691:1;3688;3681:12;3643:2;3747:1;3736:9;3732:17;3726:24;3770:18;3762:6;3759:30;3756:2;;;3802:1;3799;3792:12;3756:2;3822:85;3899:7;3890:6;3879:9;3875:22;3822:85;:::i;:::-;3812:95;;3705:208;3637:286;;;;:::o;3930:241::-;;4034:2;4022:9;4013:7;4009:23;4005:32;4002:2;;;4050:1;4047;4040:12;4002:2;4085:1;4102:53;4147:7;4138:6;4127:9;4123:22;4102:53;:::i;:::-;4092:63;;4064:97;3996:175;;;;:::o;4178:492::-;;;;4319:2;4307:9;4298:7;4294:23;4290:32;4287:2;;;4335:1;4332;4325:12;4287:2;4370:1;4387:53;4432:7;4423:6;4412:9;4408:22;4387:53;:::i;:::-;4377:63;;4349:97;4505:2;4494:9;4490:18;4477:32;4529:18;4521:6;4518:30;4515:2;;;4561:1;4558;4551:12;4515:2;4589:65;4646:7;4637:6;4626:9;4622:22;4589:65;:::i;:::-;4571:83;;;;4456:204;4281:389;;;;;:::o;4678:173::-;;4765:46;4807:3;4799:6;4765:46;:::i;:::-;4840:4;4835:3;4831:14;4817:28;;4758:93;;;;:::o;4859:103::-;4932:24;4950:5;4932:24;:::i;:::-;4927:3;4920:37;4914:48;;:::o;5000:690::-;;5145:54;5193:5;5145:54;:::i;:::-;5212:86;5291:6;5286:3;5212:86;:::i;:::-;5205:93;;5319:56;5369:5;5319:56;:::i;:::-;5395:7;5423:1;5408:260;5433:6;5430:1;5427:13;5408:260;;;5500:6;5494:13;5521:63;5580:3;5565:13;5521:63;:::i;:::-;5514:70;;5601:60;5654:6;5601:60;:::i;:::-;5591:70;;5465:203;5455:1;5452;5448:9;5443:14;;5408:260;;;5412:14;5681:3;5674:10;;5124:566;;;;;;;:::o;5723:300::-;;5839:71;5903:6;5898:3;5839:71;:::i;:::-;5832:78;;5922:43;5958:6;5953:3;5946:5;5922:43;:::i;:::-;5987:29;6009:6;5987:29;:::i;:::-;5982:3;5978:39;5971:46;;5825:198;;;;;:::o;6031:327::-;;6133:39;6166:5;6133:39;:::i;:::-;6184:61;6238:6;6233:3;6184:61;:::i;:::-;6177:68;;6250:52;6295:6;6290:3;6283:4;6276:5;6272:16;6250:52;:::i;:::-;6323:29;6345:6;6323:29;:::i;:::-;6318:3;6314:39;6307:46;;6113:245;;;;;:::o;6366:322::-;;6526:67;6590:2;6585:3;6526:67;:::i;:::-;6519:74;;6626:24;6622:1;6617:3;6613:11;6606:45;6679:2;6674:3;6670:12;6663:19;;6512:176;;;:::o;6771:591::-;;6930:4;6925:3;6921:14;7020:4;7013:5;7009:16;7003:23;7072:3;7066:4;7062:14;7055:4;7050:3;7046:14;7039:38;7092:73;7160:4;7146:12;7092:73;:::i;:::-;7084:81;;6950:227;7255:4;7248:5;7244:16;7238:23;7267:63;7324:4;7319:3;7315:14;7301:12;7267:63;:::i;:::-;7187:149;7353:4;7346:11;;6903:459;;;;;:::o;7424:735::-;;7567:4;7562:3;7558:14;7657:4;7650:5;7646:16;7640:23;7709:3;7703:4;7699:14;7692:4;7687:3;7683:14;7676:38;7729:73;7797:4;7783:12;7729:73;:::i;:::-;7721:81;;7587:227;7890:4;7883:5;7879:16;7873:23;7902:63;7959:4;7954:3;7950:14;7936:12;7902:63;:::i;:::-;7824:147;8052:4;8045:5;8041:16;8035:23;8064:63;8121:4;8116:3;8112:14;8098:12;8064:63;:::i;:::-;7981:152;8150:4;8143:11;;7540:619;;;;;:::o;8166:103::-;8239:24;8257:5;8239:24;:::i;:::-;8234:3;8227:37;8221:48;;:::o;8276:113::-;8359:24;8377:5;8359:24;:::i;:::-;8354:3;8347:37;8341:48;;:::o;8396:370::-;;8573:2;8562:9;8558:18;8550:26;;8623:9;8617:4;8613:20;8609:1;8598:9;8594:17;8587:47;8648:108;8751:4;8742:6;8648:108;:::i;:::-;8640:116;;8544:222;;;;:::o;8773:441::-;;8958:2;8947:9;8943:18;8935:26;;9008:9;9002:4;8998:20;8994:1;8983:9;8979:17;8972:47;9033:88;9116:4;9107:6;9099;9033:88;:::i;:::-;9025:96;;9132:72;9200:2;9189:9;9185:18;9176:6;9132:72;:::i;:::-;8929:285;;;;;;:::o;9221:416::-;;9421:2;9410:9;9406:18;9398:26;;9471:9;9465:4;9461:20;9457:1;9446:9;9442:17;9435:47;9496:131;9622:4;9496:131;:::i;:::-;9488:139;;9392:245;;;:::o;9644:386::-;;9829:2;9818:9;9814:18;9806:26;;9879:9;9873:4;9869:20;9865:1;9854:9;9850:17;9843:47;9904:116;10015:4;10006:6;9904:116;:::i;:::-;9896:124;;9800:230;;;;:::o;10037:354::-;;10206:2;10195:9;10191:18;10183:26;;10256:9;10250:4;10246:20;10242:1;10231:9;10227:17;10220:47;10281:100;10376:4;10367:6;10281:100;:::i;:::-;10273:108;;10177:214;;;;:::o;10398:222::-;;10525:2;10514:9;10510:18;10502:26;;10539:71;10607:1;10596:9;10592:17;10583:6;10539:71;:::i;:::-;10496:124;;;;:::o;10627:441::-;;10812:2;10801:9;10797:18;10789:26;;10826:71;10894:1;10883:9;10879:17;10870:6;10826:71;:::i;:::-;10945:9;10939:4;10935:20;10930:2;10919:9;10915:18;10908:48;10970:88;11053:4;11044:6;11036;10970:88;:::i;:::-;10962:96;;10783:285;;;;;;:::o;11075:256::-;;11137:2;11131:9;11121:19;;11175:4;11167:6;11163:17;11274:6;11262:10;11259:22;11238:18;11226:10;11223:34;11220:62;11217:2;;;11295:1;11292;11285:12;11217:2;11315:10;11311:2;11304:22;11115:216;;;;:::o;11338:322::-;;11482:18;11474:6;11471:30;11468:2;;;11514:1;11511;11504:12;11468:2;11581:4;11577:9;11570:4;11562:6;11558:17;11554:33;11546:41;;11645:4;11639;11635:15;11627:23;;11405:255;;;:::o;11667:151::-;;11753:3;11745:11;;11791:4;11786:3;11782:14;11774:22;;11739:79;;;:::o;11825:137::-;;11934:5;11928:12;11918:22;;11899:63;;;:::o;11969:122::-;;12063:5;12057:12;12047:22;;12028:63;;;:::o;12098:108::-;;12196:4;12191:3;12187:14;12179:22;;12173:33;;;:::o;12214:178::-;;12344:6;12339:3;12332:19;12381:4;12376:3;12372:14;12357:29;;12325:67;;;;:::o;12401:153::-;;12506:6;12501:3;12494:19;12543:4;12538:3;12534:14;12519:29;;12487:67;;;;:::o;12563:163::-;;12678:6;12673:3;12666:19;12715:4;12710:3;12706:14;12691:29;;12659:67;;;;:::o;12734:91::-;;12796:24;12814:5;12796:24;:::i;:::-;12785:35;;12779:46;;;:::o;12832:121::-;;12905:42;12898:5;12894:54;12883:65;;12877:76;;;:::o;12960:72::-;;13022:5;13011:16;;13005:27;;;:::o;13040:145::-;13121:6;13116:3;13111;13098:30;13177:1;13168:6;13163:3;13159:16;13152:27;13091:94;;;:::o;13194:268::-;13259:1;13266:101;13280:6;13277:1;13274:13;13266:101;;;13356:1;13351:3;13347:11;13341:18;13337:1;13332:3;13328:11;13321:39;13302:2;13299:1;13295:10;13290:15;;13266:101;;;13382:6;13379:1;13376:13;13373:2;;;13447:1;13438:6;13433:3;13429:16;13422:27;13373:2;13243:219;;;;:::o;13470:97::-;;13558:2;13554:7;13549:2;13542:5;13538:14;13534:28;13524:38;;13518:49;;;:::o;13575:117::-;13644:24;13662:5;13644:24;:::i;:::-;13637:5;13634:35;13624:2;;13683:1;13680;13673:12;13624:2;13618:74;:::o;13699:117::-;13768:24;13786:5;13768:24;:::i;:::-;13761:5;13758:35;13748:2;;13807:1;13804;13797:12;13748:2;13742:74;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\npragma experimental ABIEncoderV2;\n\n//import '../../OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol';\nimport '@openzeppelin/contracts/math/SafeMath.sol';\n\nimport './Recordable.sol';\nimport './Certifiable.sol';\n\n/// @title Product item contract. A product is recordable by an operator and certifiable by a certifier.\ncontract Product is Recordable, Certifiable {\n    \n    /// @param _id Product ID\n    /// @param _description Description of certification\n    function certifyProduct(uint256 _id, string calldata _description) external {\n        if (this.getById(_id).registeredBy == address(0)) revert('Element does not exist');\n        this.certify(_id, _description);\n    }\n}\n",
  "sourcePath": "/home/francesca/WebstormProjects/APT/contracts/Product.sol",
  "ast": {
    "absolutePath": "/home/francesca/WebstormProjects/APT/contracts/Product.sol",
    "exportedSymbols": {
      "Product": [
        937
      ]
    },
    "id": 938,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 896,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:5"
      },
      {
        "id": 897,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "57:33:5"
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 898,
        "nodeType": "ImportDirective",
        "scope": 938,
        "sourceUnit": 1385,
        "src": "174:51:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/francesca/WebstormProjects/APT/contracts/Recordable.sol",
        "file": "./Recordable.sol",
        "id": 899,
        "nodeType": "ImportDirective",
        "scope": 938,
        "sourceUnit": 1132,
        "src": "227:26:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/francesca/WebstormProjects/APT/contracts/Certifiable.sol",
        "file": "./Certifiable.sol",
        "id": 900,
        "nodeType": "ImportDirective",
        "scope": 938,
        "sourceUnit": 117,
        "src": "254:27:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 902,
              "name": "Recordable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1131,
              "src": "408:10:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Recordable_$1131",
                "typeString": "contract Recordable"
              }
            },
            "id": 903,
            "nodeType": "InheritanceSpecifier",
            "src": "408:10:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 904,
              "name": "Certifiable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 116,
              "src": "420:11:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Certifiable_$116",
                "typeString": "contract Certifiable"
              }
            },
            "id": 905,
            "nodeType": "InheritanceSpecifier",
            "src": "420:11:5"
          }
        ],
        "contractDependencies": [
          116,
          1131
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 901,
          "nodeType": "StructuredDocumentation",
          "src": "283:105:5",
          "text": "@title Product item contract. A product is recordable by an operator and certifiable by a certifier."
        },
        "fullyImplemented": true,
        "id": 937,
        "linearizedBaseContracts": [
          937,
          116,
          1131
        ],
        "name": "Product",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 935,
              "nodeType": "Block",
              "src": "606:140:5",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 915,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 908,
                            "src": "633:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 913,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "620:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Product_$937",
                              "typeString": "contract Product"
                            }
                          },
                          "id": 914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getById",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1093,
                          "src": "620:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Data_$995_memory_ptr_$",
                            "typeString": "function (uint256) view external returns (struct Recordable.Data memory)"
                          }
                        },
                        "id": 916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "620:17:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$995_memory_ptr",
                          "typeString": "struct Recordable.Data memory"
                        }
                      },
                      "id": 917,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "registeredBy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 994,
                      "src": "620:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "662:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "654:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 918,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "654:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 921,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "654:10:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "620:44:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 927,
                  "nodeType": "IfStatement",
                  "src": "616:82:5",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "456c656d656e7420646f6573206e6f74206578697374",
                          "id": 924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "673:24:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_85bd8aa9bbad5d1356ae87fc0afd52bcc36dc096b5dcf85163e4bf0a2b08cac5",
                            "typeString": "literal_string \"Element does not exist\""
                          },
                          "value": "Element does not exist"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_85bd8aa9bbad5d1356ae87fc0afd52bcc36dc096b5dcf85163e4bf0a2b08cac5",
                            "typeString": "literal_string \"Element does not exist\""
                          }
                        ],
                        "id": 923,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "666:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) pure"
                        }
                      },
                      "id": 925,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "666:32:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 926,
                    "nodeType": "ExpressionStatement",
                    "src": "666:32:5"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 931,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 908,
                        "src": "721:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 932,
                        "name": "_description",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 910,
                        "src": "726:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 928,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "708:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Product_$937",
                          "typeString": "contract Product"
                        }
                      },
                      "id": 930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "certify",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "708:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory) external"
                      }
                    },
                    "id": 933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "708:31:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 934,
                  "nodeType": "ExpressionStatement",
                  "src": "708:31:5"
                }
              ]
            },
            "documentation": {
              "id": 906,
              "nodeType": "StructuredDocumentation",
              "src": "443:82:5",
              "text": "@param _id Product ID\n @param _description Description of certification"
            },
            "functionSelector": "f7475edf",
            "id": 936,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "certifyProduct",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 908,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 936,
                  "src": "554:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 907,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "554:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 910,
                  "mutability": "mutable",
                  "name": "_description",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 936,
                  "src": "567:28:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 909,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "567:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "553:43:5"
            },
            "returnParameters": {
              "id": 912,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "606:0:5"
            },
            "scope": 937,
            "src": "530:216:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 938,
        "src": "388:360:5"
      }
    ],
    "src": "33:716:5"
  },
  "legacyAST": {
    "absolutePath": "/home/francesca/WebstormProjects/APT/contracts/Product.sol",
    "exportedSymbols": {
      "Product": [
        937
      ]
    },
    "id": 938,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 896,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:5"
      },
      {
        "id": 897,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "57:33:5"
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 898,
        "nodeType": "ImportDirective",
        "scope": 938,
        "sourceUnit": 1385,
        "src": "174:51:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/francesca/WebstormProjects/APT/contracts/Recordable.sol",
        "file": "./Recordable.sol",
        "id": 899,
        "nodeType": "ImportDirective",
        "scope": 938,
        "sourceUnit": 1132,
        "src": "227:26:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/francesca/WebstormProjects/APT/contracts/Certifiable.sol",
        "file": "./Certifiable.sol",
        "id": 900,
        "nodeType": "ImportDirective",
        "scope": 938,
        "sourceUnit": 117,
        "src": "254:27:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 902,
              "name": "Recordable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1131,
              "src": "408:10:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Recordable_$1131",
                "typeString": "contract Recordable"
              }
            },
            "id": 903,
            "nodeType": "InheritanceSpecifier",
            "src": "408:10:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 904,
              "name": "Certifiable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 116,
              "src": "420:11:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Certifiable_$116",
                "typeString": "contract Certifiable"
              }
            },
            "id": 905,
            "nodeType": "InheritanceSpecifier",
            "src": "420:11:5"
          }
        ],
        "contractDependencies": [
          116,
          1131
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 901,
          "nodeType": "StructuredDocumentation",
          "src": "283:105:5",
          "text": "@title Product item contract. A product is recordable by an operator and certifiable by a certifier."
        },
        "fullyImplemented": true,
        "id": 937,
        "linearizedBaseContracts": [
          937,
          116,
          1131
        ],
        "name": "Product",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 935,
              "nodeType": "Block",
              "src": "606:140:5",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 915,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 908,
                            "src": "633:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 913,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "620:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Product_$937",
                              "typeString": "contract Product"
                            }
                          },
                          "id": 914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getById",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1093,
                          "src": "620:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Data_$995_memory_ptr_$",
                            "typeString": "function (uint256) view external returns (struct Recordable.Data memory)"
                          }
                        },
                        "id": 916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "620:17:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$995_memory_ptr",
                          "typeString": "struct Recordable.Data memory"
                        }
                      },
                      "id": 917,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "registeredBy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 994,
                      "src": "620:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "662:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "654:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 918,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "654:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 921,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "654:10:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "620:44:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 927,
                  "nodeType": "IfStatement",
                  "src": "616:82:5",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "456c656d656e7420646f6573206e6f74206578697374",
                          "id": 924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "673:24:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_85bd8aa9bbad5d1356ae87fc0afd52bcc36dc096b5dcf85163e4bf0a2b08cac5",
                            "typeString": "literal_string \"Element does not exist\""
                          },
                          "value": "Element does not exist"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_85bd8aa9bbad5d1356ae87fc0afd52bcc36dc096b5dcf85163e4bf0a2b08cac5",
                            "typeString": "literal_string \"Element does not exist\""
                          }
                        ],
                        "id": 923,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "666:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) pure"
                        }
                      },
                      "id": 925,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "666:32:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 926,
                    "nodeType": "ExpressionStatement",
                    "src": "666:32:5"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 931,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 908,
                        "src": "721:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 932,
                        "name": "_description",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 910,
                        "src": "726:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 928,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "708:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Product_$937",
                          "typeString": "contract Product"
                        }
                      },
                      "id": 930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "certify",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "708:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory) external"
                      }
                    },
                    "id": 933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "708:31:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 934,
                  "nodeType": "ExpressionStatement",
                  "src": "708:31:5"
                }
              ]
            },
            "documentation": {
              "id": 906,
              "nodeType": "StructuredDocumentation",
              "src": "443:82:5",
              "text": "@param _id Product ID\n @param _description Description of certification"
            },
            "functionSelector": "f7475edf",
            "id": 936,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "certifyProduct",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 908,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 936,
                  "src": "554:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 907,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "554:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 910,
                  "mutability": "mutable",
                  "name": "_description",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 936,
                  "src": "567:28:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 909,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "567:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "553:43:5"
            },
            "returnParameters": {
              "id": 912,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "606:0:5"
            },
            "scope": 937,
            "src": "530:216:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 938,
        "src": "388:360:5"
      }
    ],
    "src": "33:716:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x3Cb3F5F567c7100Ba33559624537fd1285A51069",
      "transactionHash": "0xa87a7c339d9d9d5f7407f48388feeeade293edc31884e0239406cba40d8f6932"
    }
  },
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-10-01T14:27:29.450Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "certify(uint256,string)": {
        "params": {
          "_description": "Certification description",
          "_id": "Item to be certified"
        }
      },
      "certifyProduct(uint256,string)": {
        "params": {
          "_description": "Description of certification",
          "_id": "Product ID"
        }
      },
      "getByCertifier(address)": {
        "params": {
          "_address": "Certifier address for which to retrieve certifications"
        },
        "returns": {
          "_0": "the array containing all the certifications perfomed by a specific certifier"
        }
      },
      "getById(uint256)": {
        "params": {
          "_id": "Item ID"
        },
        "returns": {
          "_0": "the item data only if the item exists"
        }
      },
      "getByItem(uint256)": {
        "params": {
          "_item": "Item ID for which to retrieve certifications"
        },
        "returns": {
          "_0": "the array containing all the certifications related to a specific item"
        }
      },
      "getByOperator(address)": {
        "params": {
          "_address": "Operator's address"
        },
        "returns": {
          "_0": "the array containing all the item IDs registered by a specific operator"
        }
      },
      "getByPortion(uint256)": {
        "params": {
          "_id": "Portion ID"
        },
        "returns": {
          "_0": "the array containing all the the item IDs registered in a specific portion"
        }
      },
      "getCertificationById(uint256)": {
        "params": {
          "_id": "Item for which to retrieve certifications"
        },
        "returns": {
          "_0": "the related certification"
        }
      },
      "getTotal()": {
        "returns": {
          "_0": "the number of registerd items"
        }
      },
      "register(string,uint256)": {
        "params": {
          "_description": "Item description",
          "_id": "Related portion ID"
        }
      },
      "register(string,uint256,address)": {
        "params": {
          "_description": "Item description",
          "_id": "Related portion ID",
          "_source": "Original sender"
        }
      }
    },
    "title": "Product item contract. A product is recordable by an operator and certifiable by a certifier.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}