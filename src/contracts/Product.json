{
  "contractName": "Product",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_source",
          "type": "address"
        }
      ],
      "name": "certify",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        }
      ],
      "name": "certify",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getByCertifier",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "portion",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "registeredBy",
              "type": "address"
            }
          ],
          "internalType": "struct Recordable.Data",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_item",
          "type": "uint256"
        }
      ],
      "name": "getByItem",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getByOperator",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getByPortion",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getCertificationById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "certifier",
              "type": "address"
            }
          ],
          "internalType": "struct Certifiable.Certification",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getTotal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_source",
          "type": "address"
        }
      ],
      "name": "register",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "register",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        }
      ],
      "name": "certifyProduct",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_source\",\"type\":\"address\"}],\"name\":\"certify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"certify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"certifyProduct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getByCertifier\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getById\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"portion\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"registeredBy\",\"type\":\"address\"}],\"internalType\":\"struct Recordable.Data\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_item\",\"type\":\"uint256\"}],\"name\":\"getByItem\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getByOperator\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getByPortion\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getCertificationById\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"certifier\",\"type\":\"address\"}],\"internalType\":\"struct Certifiable.Certification\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_source\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"certify(uint256,string)\":{\"params\":{\"_description\":\"Certification description\",\"_id\":\"Item to be certified\"}},\"certify(uint256,string,address)\":{\"params\":{\"_description\":\"Certification description\",\"_id\":\"Item to be certified\",\"_source\":\"Original sender\"}},\"certifyProduct(uint256,string)\":{\"params\":{\"_description\":\"Description of certification\",\"_id\":\"Product ID\"}},\"getByCertifier(address)\":{\"params\":{\"_address\":\"Certifier address for which to retrieve certifications\"},\"returns\":{\"_0\":\"the array containing all the certifications perfomed by a specific certifier\"}},\"getById(uint256)\":{\"params\":{\"_id\":\"Item ID\"},\"returns\":{\"_0\":\"the item data only if the item exists\"}},\"getByItem(uint256)\":{\"params\":{\"_item\":\"Item ID for which to retrieve certifications\"},\"returns\":{\"_0\":\"the array containing all the certifications related to a specific item\"}},\"getByOperator(address)\":{\"params\":{\"_address\":\"Operator's address\"},\"returns\":{\"_0\":\"the array containing all the item IDs registered by a specific operator\"}},\"getByPortion(uint256)\":{\"params\":{\"_id\":\"Portion ID\"},\"returns\":{\"_0\":\"the array containing all the the item IDs registered in a specific portion\"}},\"getCertificationById(uint256)\":{\"params\":{\"_id\":\"Item for which to retrieve certifications\"},\"returns\":{\"_0\":\"the related certification\"}},\"getTotal()\":{\"returns\":{\"_0\":\"the number of registerd items\"}},\"register(string,uint256)\":{\"params\":{\"_description\":\"Item description\",\"_id\":\"Related portion ID\"}},\"register(string,uint256,address)\":{\"params\":{\"_description\":\"Item description\",\"_id\":\"Related portion ID\",\"_source\":\"Original sender\"}}},\"title\":\"Product item contract. A product is recordable by an operator and certifiable by a certifier.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/francesca/WebstormProjects/PSAB-Contracts/contracts/Product.sol\":\"Product\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/francesca/WebstormProjects/PSAB-Contracts/contracts/Certifiable.sol\":{\"keccak256\":\"0x1f43ce696a5771c1a6766063e565f2c350dc7aacf1aafb18f9ee7739117a659b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21576ef790c728f96672c077f86360c47ded97282b8e6abb7de5f4f32fd43567\",\"dweb:/ipfs/QmYcivTxVYeFXMJvL4K2m6ayhGrntT18wmDaL51MSevH9D\"]},\"/home/francesca/WebstormProjects/PSAB-Contracts/contracts/Product.sol\":{\"keccak256\":\"0x8aca1d7703bbed1d5b283ad427ba9218b565cc203fb8b7c80609be9c9583fd22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://944178d6a967f593fec959ca061b43cbce34f231e6269fa02a084d6458cda0a5\",\"dweb:/ipfs/QmYvGi6yJ28a9zfV7dcp39HssjdYQ1Jtt7RsiyyHZjHPYS\"]},\"/home/francesca/WebstormProjects/PSAB-Contracts/contracts/Recordable.sol\":{\"keccak256\":\"0x428cc2d473549ce1b945bc846f439747c437c8c74bd1b63455de6ffb63b71acf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93163915c2d6aa1954b7770131c36f12e923b298c1a3fc899cd4e04d78b00768\",\"dweb:/ipfs/QmfMwNTzxquxwyEPNJ3tA1UtRpHBdGbdQbAzZppiMogrhi\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611696806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80635dc1aad3116100715780635dc1aad3146101c557806365b6f987146101e1578063775a25e3146101fd578063ea87152b1461021b578063f4f4d23714610237578063f7475edf14610267576100b4565b806304d6e3f6146100b957806327225077146100e957806331f5ff0d1461011957806337b2b5ad146101355780634a4d72e11461016557806352acbb5814610195575b600080fd5b6100d360048036038101906100ce9190611043565b610283565b6040516100e09190611369565b60405180910390f35b61010360048036038101906100fe9190611043565b6102ee565b60405161011091906113dd565b60405180910390f35b610133600480360381019061012e91906110c4565b610413565b005b61014f600480360381019061014a9190610f15565b610545565b60405161015c9190611369565b60405180910390f35b61017f600480360381019061017a9190610f15565b6105dc565b60405161018c9190611369565b60405180910390f35b6101af60048036038101906101aa9190611043565b610673565b6040516101bc9190611369565b60405180910390f35b6101df60048036038101906101da9190610f96565b6106de565b005b6101fb60048036038101906101f69190611130565b610811565b005b61020561088e565b6040516102129190611421565b60405180910390f35b61023560048036038101906102309190610f3e565b610898565b005b610251600480360381019061024c9190611043565b61092e565b60405161025e91906113ff565b60405180910390f35b610281600480360381019061027c919061106c565b610a5c565b005b6060600260008381526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156102e257602002820191906000526020600020905b8154815260200190600101908083116102ce575b50505050509050919050565b6102f6610bd3565b60056000838152602001908152602001600020604051806040016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103ad5780601f10610382576101008083540402835291602001916103ad565b820191906000526020600020905b81548152906001019060200180831161039057829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b8060056000600454815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208490806001815401808255809150506001900390600052602060002001600090919091909150553073ffffffffffffffffffffffffffffffffffffffff166365b6f9878585856040518463ffffffff1660e01b815260040161050d9392919061143c565b600060405180830381600087803b15801561052757600080fd5b505af115801561053b573d6000803e3d6000fd5b5050505050505050565b6060600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156105d057602002820191906000526020600020905b8154815260200190600101908083116105bc575b50505050509050919050565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561066757602002820191906000526020600020905b815481526020019060010190808311610653575b50505050509050919050565b6060600760008381526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156106d257602002820191906000526020600020905b8154815260200190600101908083116106be575b50505050509050919050565b80600080600354815260200190815260200160002060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060035490806001815401808255809150506001900390600052602060002001600090919091909150553073ffffffffffffffffffffffffffffffffffffffff1663ea87152b8585856040518463ffffffff1660e01b81526004016107d99392919061138b565b600060405180830381600087803b1580156107f357600080fd5b505af1158015610807573d6000803e3d6000fd5b5050505050505050565b80600560006004548152602001908152602001600020600001908051906020019061083d929190610c03565b50600760008381526020019081526020016000208290806001815401808255809150506001900390600052602060002001600090919091909150556004600081548092919060010191905055505050565b6000600354905090565b8282600080600354815260200190815260200160002060000191906108be929190610c83565b5080600080600354815260200190815260200160002060010181905550600260008281526020019081526020016000206003549080600181540180825580915050600190039060005260206000200160009091909190915055600360008154809291906001019190505550505050565b610936610d03565b600080838152602001908152602001600020604051806060016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109ec5780601f106109c1576101008083540402835291602001916109ec565b820191906000526020600020905b8154815290600101906020018083116109cf57829003601f168201915b50505050508152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b600073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1663f4f4d237856040518263ffffffff1660e01b8152600401610aad9190611421565b60006040518083038186803b158015610ac557600080fd5b505afa158015610ad9573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610b029190611002565b6040015173ffffffffffffffffffffffffffffffffffffffff161415610b5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b54906113bd565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff166331f5ff0d848484336040518563ffffffff1660e01b8152600401610b9c949392919061146e565b600060405180830381600087803b158015610bb657600080fd5b505af1158015610bca573d6000803e3d6000fd5b50505050505050565b604051806040016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610c4457805160ff1916838001178555610c72565b82800160010185558215610c72579182015b82811115610c71578251825591602001919060010190610c56565b5b509050610c7f9190610d3a565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610cc457803560ff1916838001178555610cf2565b82800160010185558215610cf2579182015b82811115610cf1578235825591602001919060010190610cd6565b5b509050610cff9190610d3a565b5090565b60405180606001604052806060815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b5b80821115610d53576000816000905550600101610d3b565b5090565b600081359050610d6681611632565b92915050565b600081519050610d7b81611632565b92915050565b60008083601f840112610d9357600080fd5b8235905067ffffffffffffffff811115610dac57600080fd5b602083019150836001820283011115610dc457600080fd5b9250929050565b600082601f830112610ddc57600080fd5b8135610def610dea826114db565b6114ae565b91508082526020830160208301858383011115610e0b57600080fd5b610e168382846115df565b50505092915050565b600082601f830112610e3057600080fd5b8151610e43610e3e826114db565b6114ae565b91508082526020830160208301858383011115610e5f57600080fd5b610e6a8382846115ee565b50505092915050565b600060608284031215610e8557600080fd5b610e8f60606114ae565b9050600082015167ffffffffffffffff811115610eab57600080fd5b610eb784828501610e1f565b6000830152506020610ecb84828501610f00565b6020830152506040610edf84828501610d6c565b60408301525092915050565b600081359050610efa81611649565b92915050565b600081519050610f0f81611649565b92915050565b600060208284031215610f2757600080fd5b6000610f3584828501610d57565b91505092915050565b600080600060408486031215610f5357600080fd5b600084013567ffffffffffffffff811115610f6d57600080fd5b610f7986828701610d81565b93509350506020610f8c86828701610eeb565b9150509250925092565b60008060008060608587031215610fac57600080fd5b600085013567ffffffffffffffff811115610fc657600080fd5b610fd287828801610d81565b94509450506020610fe587828801610eeb565b9250506040610ff687828801610d57565b91505092959194509250565b60006020828403121561101457600080fd5b600082015167ffffffffffffffff81111561102e57600080fd5b61103a84828501610e73565b91505092915050565b60006020828403121561105557600080fd5b600061106384828501610eeb565b91505092915050565b60008060006040848603121561108157600080fd5b600061108f86828701610eeb565b935050602084013567ffffffffffffffff8111156110ac57600080fd5b6110b886828701610d81565b92509250509250925092565b600080600080606085870312156110da57600080fd5b60006110e887828801610eeb565b945050602085013567ffffffffffffffff81111561110557600080fd5b61111187828801610d81565b9350935050604061112487828801610d57565b91505092959194509250565b6000806040838503121561114357600080fd5b600061115185828601610eeb565b925050602083013567ffffffffffffffff81111561116e57600080fd5b61117a85828601610dcb565b9150509250929050565b6000611190838361134b565b60208301905092915050565b6111a5816115a9565b82525050565b6111b48161156d565b82525050565b60006111c582611517565b6111cf818561153a565b93506111da83611507565b8060005b8381101561120b5781516111f28882611184565b97506111fd8361152d565b9250506001810190506111de565b5085935050505092915050565b6000611224838561155c565b93506112318385846115df565b61123a83611621565b840190509392505050565b600061125082611522565b61125a818561154b565b935061126a8185602086016115ee565b61127381611621565b840191505092915050565b600061128b60168361155c565b91507f456c656d656e7420646f6573206e6f74206578697374000000000000000000006000830152602082019050919050565b600060408301600083015184820360008601526112db8282611245565b91505060208301516112f060208601826111ab565b508091505092915050565b600060608301600083015184820360008601526113188282611245565b915050602083015161132d602086018261134b565b50604083015161134060408601826111ab565b508091505092915050565b6113548161159f565b82525050565b6113638161159f565b82525050565b6000602082019050818103600083015261138381846111ba565b905092915050565b600060408201905081810360008301526113a6818587611218565b90506113b5602083018461135a565b949350505050565b600060208201905081810360008301526113d68161127e565b9050919050565b600060208201905081810360008301526113f781846112be565b905092915050565b6000602082019050818103600083015261141981846112fb565b905092915050565b6000602082019050611436600083018461135a565b92915050565b6000604082019050611451600083018661135a565b8181036020830152611464818486611218565b9050949350505050565b6000606082019050611483600083018761135a565b8181036020830152611496818587611218565b90506114a5604083018461119c565b95945050505050565b6000604051905081810181811067ffffffffffffffff821117156114d157600080fd5b8060405250919050565b600067ffffffffffffffff8211156114f257600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006115788261157f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006115b4826115bb565b9050919050565b60006115c6826115cd565b9050919050565b60006115d88261157f565b9050919050565b82818337600083830152505050565b60005b8381101561160c5780820151818401526020810190506115f1565b8381111561161b576000848401525b50505050565b6000601f19601f8301169050919050565b61163b8161156d565b811461164657600080fd5b50565b6116528161159f565b811461165d57600080fd5b5056fea2646970667358221220364e27b9d582d0595720c3f547071d529607cf31020dbb2567e7b3a725ad2d8164736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c80635dc1aad3116100715780635dc1aad3146101c557806365b6f987146101e1578063775a25e3146101fd578063ea87152b1461021b578063f4f4d23714610237578063f7475edf14610267576100b4565b806304d6e3f6146100b957806327225077146100e957806331f5ff0d1461011957806337b2b5ad146101355780634a4d72e11461016557806352acbb5814610195575b600080fd5b6100d360048036038101906100ce9190611043565b610283565b6040516100e09190611369565b60405180910390f35b61010360048036038101906100fe9190611043565b6102ee565b60405161011091906113dd565b60405180910390f35b610133600480360381019061012e91906110c4565b610413565b005b61014f600480360381019061014a9190610f15565b610545565b60405161015c9190611369565b60405180910390f35b61017f600480360381019061017a9190610f15565b6105dc565b60405161018c9190611369565b60405180910390f35b6101af60048036038101906101aa9190611043565b610673565b6040516101bc9190611369565b60405180910390f35b6101df60048036038101906101da9190610f96565b6106de565b005b6101fb60048036038101906101f69190611130565b610811565b005b61020561088e565b6040516102129190611421565b60405180910390f35b61023560048036038101906102309190610f3e565b610898565b005b610251600480360381019061024c9190611043565b61092e565b60405161025e91906113ff565b60405180910390f35b610281600480360381019061027c919061106c565b610a5c565b005b6060600260008381526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156102e257602002820191906000526020600020905b8154815260200190600101908083116102ce575b50505050509050919050565b6102f6610bd3565b60056000838152602001908152602001600020604051806040016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103ad5780601f10610382576101008083540402835291602001916103ad565b820191906000526020600020905b81548152906001019060200180831161039057829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b8060056000600454815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208490806001815401808255809150506001900390600052602060002001600090919091909150553073ffffffffffffffffffffffffffffffffffffffff166365b6f9878585856040518463ffffffff1660e01b815260040161050d9392919061143c565b600060405180830381600087803b15801561052757600080fd5b505af115801561053b573d6000803e3d6000fd5b5050505050505050565b6060600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156105d057602002820191906000526020600020905b8154815260200190600101908083116105bc575b50505050509050919050565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561066757602002820191906000526020600020905b815481526020019060010190808311610653575b50505050509050919050565b6060600760008381526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156106d257602002820191906000526020600020905b8154815260200190600101908083116106be575b50505050509050919050565b80600080600354815260200190815260200160002060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060035490806001815401808255809150506001900390600052602060002001600090919091909150553073ffffffffffffffffffffffffffffffffffffffff1663ea87152b8585856040518463ffffffff1660e01b81526004016107d99392919061138b565b600060405180830381600087803b1580156107f357600080fd5b505af1158015610807573d6000803e3d6000fd5b5050505050505050565b80600560006004548152602001908152602001600020600001908051906020019061083d929190610c03565b50600760008381526020019081526020016000208290806001815401808255809150506001900390600052602060002001600090919091909150556004600081548092919060010191905055505050565b6000600354905090565b8282600080600354815260200190815260200160002060000191906108be929190610c83565b5080600080600354815260200190815260200160002060010181905550600260008281526020019081526020016000206003549080600181540180825580915050600190039060005260206000200160009091909190915055600360008154809291906001019190505550505050565b610936610d03565b600080838152602001908152602001600020604051806060016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109ec5780601f106109c1576101008083540402835291602001916109ec565b820191906000526020600020905b8154815290600101906020018083116109cf57829003601f168201915b50505050508152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b600073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1663f4f4d237856040518263ffffffff1660e01b8152600401610aad9190611421565b60006040518083038186803b158015610ac557600080fd5b505afa158015610ad9573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610b029190611002565b6040015173ffffffffffffffffffffffffffffffffffffffff161415610b5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b54906113bd565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff166331f5ff0d848484336040518563ffffffff1660e01b8152600401610b9c949392919061146e565b600060405180830381600087803b158015610bb657600080fd5b505af1158015610bca573d6000803e3d6000fd5b50505050505050565b604051806040016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610c4457805160ff1916838001178555610c72565b82800160010185558215610c72579182015b82811115610c71578251825591602001919060010190610c56565b5b509050610c7f9190610d3a565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610cc457803560ff1916838001178555610cf2565b82800160010185558215610cf2579182015b82811115610cf1578235825591602001919060010190610cd6565b5b509050610cff9190610d3a565b5090565b60405180606001604052806060815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b5b80821115610d53576000816000905550600101610d3b565b5090565b600081359050610d6681611632565b92915050565b600081519050610d7b81611632565b92915050565b60008083601f840112610d9357600080fd5b8235905067ffffffffffffffff811115610dac57600080fd5b602083019150836001820283011115610dc457600080fd5b9250929050565b600082601f830112610ddc57600080fd5b8135610def610dea826114db565b6114ae565b91508082526020830160208301858383011115610e0b57600080fd5b610e168382846115df565b50505092915050565b600082601f830112610e3057600080fd5b8151610e43610e3e826114db565b6114ae565b91508082526020830160208301858383011115610e5f57600080fd5b610e6a8382846115ee565b50505092915050565b600060608284031215610e8557600080fd5b610e8f60606114ae565b9050600082015167ffffffffffffffff811115610eab57600080fd5b610eb784828501610e1f565b6000830152506020610ecb84828501610f00565b6020830152506040610edf84828501610d6c565b60408301525092915050565b600081359050610efa81611649565b92915050565b600081519050610f0f81611649565b92915050565b600060208284031215610f2757600080fd5b6000610f3584828501610d57565b91505092915050565b600080600060408486031215610f5357600080fd5b600084013567ffffffffffffffff811115610f6d57600080fd5b610f7986828701610d81565b93509350506020610f8c86828701610eeb565b9150509250925092565b60008060008060608587031215610fac57600080fd5b600085013567ffffffffffffffff811115610fc657600080fd5b610fd287828801610d81565b94509450506020610fe587828801610eeb565b9250506040610ff687828801610d57565b91505092959194509250565b60006020828403121561101457600080fd5b600082015167ffffffffffffffff81111561102e57600080fd5b61103a84828501610e73565b91505092915050565b60006020828403121561105557600080fd5b600061106384828501610eeb565b91505092915050565b60008060006040848603121561108157600080fd5b600061108f86828701610eeb565b935050602084013567ffffffffffffffff8111156110ac57600080fd5b6110b886828701610d81565b92509250509250925092565b600080600080606085870312156110da57600080fd5b60006110e887828801610eeb565b945050602085013567ffffffffffffffff81111561110557600080fd5b61111187828801610d81565b9350935050604061112487828801610d57565b91505092959194509250565b6000806040838503121561114357600080fd5b600061115185828601610eeb565b925050602083013567ffffffffffffffff81111561116e57600080fd5b61117a85828601610dcb565b9150509250929050565b6000611190838361134b565b60208301905092915050565b6111a5816115a9565b82525050565b6111b48161156d565b82525050565b60006111c582611517565b6111cf818561153a565b93506111da83611507565b8060005b8381101561120b5781516111f28882611184565b97506111fd8361152d565b9250506001810190506111de565b5085935050505092915050565b6000611224838561155c565b93506112318385846115df565b61123a83611621565b840190509392505050565b600061125082611522565b61125a818561154b565b935061126a8185602086016115ee565b61127381611621565b840191505092915050565b600061128b60168361155c565b91507f456c656d656e7420646f6573206e6f74206578697374000000000000000000006000830152602082019050919050565b600060408301600083015184820360008601526112db8282611245565b91505060208301516112f060208601826111ab565b508091505092915050565b600060608301600083015184820360008601526113188282611245565b915050602083015161132d602086018261134b565b50604083015161134060408601826111ab565b508091505092915050565b6113548161159f565b82525050565b6113638161159f565b82525050565b6000602082019050818103600083015261138381846111ba565b905092915050565b600060408201905081810360008301526113a6818587611218565b90506113b5602083018461135a565b949350505050565b600060208201905081810360008301526113d68161127e565b9050919050565b600060208201905081810360008301526113f781846112be565b905092915050565b6000602082019050818103600083015261141981846112fb565b905092915050565b6000602082019050611436600083018461135a565b92915050565b6000604082019050611451600083018661135a565b8181036020830152611464818486611218565b9050949350505050565b6000606082019050611483600083018761135a565b8181036020830152611496818587611218565b90506114a5604083018461119c565b95945050505050565b6000604051905081810181811067ffffffffffffffff821117156114d157600080fd5b8060405250919050565b600067ffffffffffffffff8211156114f257600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006115788261157f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006115b4826115bb565b9050919050565b60006115c6826115cd565b9050919050565b60006115d88261157f565b9050919050565b82818337600083830152505050565b60005b8381101561160c5780820151818401526020810190506115f1565b8381111561161b576000848401525b50505050565b6000601f19601f8301169050919050565b61163b8161156d565b811461164657600080fd5b50565b6116528161159f565b811461165d57600080fd5b5056fea2646970667358221220364e27b9d582d0595720c3f547071d529607cf31020dbb2567e7b3a725ad2d8164736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "388:372:4:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "388:372:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2139:120:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1803:131:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1435:255;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2116:143;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1876:132:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2422:127:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1309:239:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1050:246:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2315:82:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;940:241;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1635:100;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;530:228:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2139:120:6;2197:16;2232:15;:20;2248:3;2232:20;;;;;;;;;;;2225:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2139:120;;;:::o;1803:131:0:-;1869:20;;:::i;:::-;1908:14;:19;1923:3;1908:19;;;;;;;;;;;1901:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1803:131;;;:::o;1435:255::-;1579:7;1531:14;:35;1546:19;;1531:35;;;;;;;;;;;:45;;;:55;;;;;;;;;;;;;;;;;;1596:26;:35;1623:7;1596:35;;;;;;;;;;;;;;;1637:3;1596:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1652:4;:12;;;1665:3;1670:12;;1652:31;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1435:255;;;;:::o;2116:143::-;2181:16;2216:26;:36;2243:8;2216:36;;;;;;;;;;;;;;;2209:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2116:143;;;:::o;1876:132:6:-;1940:16;1975;:26;1992:8;1975:26;;;;;;;;;;;;;;;1968:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:132;;;:::o;2422:127:0:-;2479:16;2514:21;:28;2536:5;2514:28;;;;;;;;;;;2507:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2422:127;;;:::o;1309:239:6:-;1435:7;1406:5;:13;1412:6;;1406:13;;;;;;;;;;;:26;;;:36;;;;;;;;;;;;;;;;;;1452:16;:25;1469:7;1452:25;;;;;;;;;;;;;;;1483:6;;1452:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1501:4;:13;;;1515:12;;1529:3;1501:32;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1309:239;;;;:::o;1050:246:0:-;1175:12;1125:14;:35;1140:19;;1125:35;;;;;;;;;;;:47;;:62;;;;;;;;;;;;:::i;:::-;;1197:21;:26;1219:3;1197:26;;;;;;;;;;;1229:3;1197:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1267:19;;:22;;;;;;;;;;;;;1050:246;;:::o;2315:82:6:-;2358:7;2384:6;;2377:13;;2315:82;:::o;940:241::-;1046:12;;1018:5;:13;1024:6;;1018:13;;;;;;;;;;;:25;;:40;;;;;;;:::i;:::-;;1092:3;1068:5;:13;1074:6;;1068:13;;;;;;;;;;;:21;;:27;;;;1114:15;:20;1130:3;1114:20;;;;;;;;;;;1140:6;;1114:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1166:6;;:8;;;;;;;;;;;;;940:241;;;:::o;1635:100::-;1688:11;;:::i;:::-;1718:5;:10;1724:3;1718:10;;;;;;;;;;;1711:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1635:100;;;:::o;530:228:4:-;662:1;620:44;;:4;:12;;;633:3;620:17;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:30;;;:44;;;616:82;;;666:32;;;;;;;;;;:::i;:::-;;;;;;;;616:82;708:4;:12;;;721:3;726:12;;740:10;708:43;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;530:228;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;5:130::-;;85:6;72:20;63:29;;97:33;124:5;97:33;:::i;:::-;57:78;;;;:::o;142:134::-;;226:6;220:13;211:22;;238:33;265:5;238:33;:::i;:::-;205:71;;;;:::o;298:337::-;;;413:3;406:4;398:6;394:17;390:27;380:2;;431:1;428;421:12;380:2;464:6;451:20;441:30;;491:18;483:6;480:30;477:2;;;523:1;520;513:12;477:2;557:4;549:6;545:17;533:29;;608:3;600:4;592:6;588:17;578:8;574:32;571:41;568:2;;;625:1;622;615:12;568:2;373:262;;;;;:::o;644:442::-;;746:3;739:4;731:6;727:17;723:27;713:2;;764:1;761;754:12;713:2;801:6;788:20;823:65;838:49;880:6;838:49;:::i;:::-;823:65;:::i;:::-;814:74;;908:6;901:5;894:21;944:4;936:6;932:17;977:4;970:5;966:16;1012:3;1003:6;998:3;994:16;991:25;988:2;;;1029:1;1026;1019:12;988:2;1039:41;1073:6;1068:3;1063;1039:41;:::i;:::-;706:380;;;;;;;:::o;1095:444::-;;1208:3;1201:4;1193:6;1189:17;1185:27;1175:2;;1226:1;1223;1216:12;1175:2;1256:6;1250:13;1278:65;1293:49;1335:6;1293:49;:::i;:::-;1278:65;:::i;:::-;1269:74;;1363:6;1356:5;1349:21;1399:4;1391:6;1387:17;1432:4;1425:5;1421:16;1467:3;1458:6;1453:3;1449:16;1446:25;1443:2;;;1484:1;1481;1474:12;1443:2;1494:39;1526:6;1521:3;1516;1494:39;:::i;:::-;1168:371;;;;;;;:::o;1576:759::-;;1698:4;1686:9;1681:3;1677:19;1673:30;1670:2;;;1716:1;1713;1706:12;1670:2;1734:20;1749:4;1734:20;:::i;:::-;1725:29;;1832:1;1821:9;1817:17;1811:24;1855:18;1847:6;1844:30;1841:2;;;1887:1;1884;1877:12;1841:2;1922:70;1988:3;1979:6;1968:9;1964:22;1922:70;:::i;:::-;1915:4;1908:5;1904:16;1897:96;1764:240;2057:2;2090:60;2146:3;2137:6;2126:9;2122:22;2090:60;:::i;:::-;2083:4;2076:5;2072:16;2065:86;2014:148;2220:2;2253:60;2309:3;2300:6;2289:9;2285:22;2253:60;:::i;:::-;2246:4;2239:5;2235:16;2228:86;2172:153;1664:671;;;;:::o;2342:130::-;;2422:6;2409:20;2400:29;;2434:33;2461:5;2434:33;:::i;:::-;2394:78;;;;:::o;2479:134::-;;2563:6;2557:13;2548:22;;2575:33;2602:5;2575:33;:::i;:::-;2542:71;;;;:::o;2620:241::-;;2724:2;2712:9;2703:7;2699:23;2695:32;2692:2;;;2740:1;2737;2730:12;2692:2;2775:1;2792:53;2837:7;2828:6;2817:9;2813:22;2792:53;:::i;:::-;2782:63;;2754:97;2686:175;;;;:::o;2868:492::-;;;;3009:2;2997:9;2988:7;2984:23;2980:32;2977:2;;;3025:1;3022;3015:12;2977:2;3088:1;3077:9;3073:17;3060:31;3111:18;3103:6;3100:30;3097:2;;;3143:1;3140;3133:12;3097:2;3171:65;3228:7;3219:6;3208:9;3204:22;3171:65;:::i;:::-;3153:83;;;;3039:203;3273:2;3291:53;3336:7;3327:6;3316:9;3312:22;3291:53;:::i;:::-;3281:63;;3252:98;2971:389;;;;;:::o;3367:617::-;;;;;3525:2;3513:9;3504:7;3500:23;3496:32;3493:2;;;3541:1;3538;3531:12;3493:2;3604:1;3593:9;3589:17;3576:31;3627:18;3619:6;3616:30;3613:2;;;3659:1;3656;3649:12;3613:2;3687:65;3744:7;3735:6;3724:9;3720:22;3687:65;:::i;:::-;3669:83;;;;3555:203;3789:2;3807:53;3852:7;3843:6;3832:9;3828:22;3807:53;:::i;:::-;3797:63;;3768:98;3897:2;3915:53;3960:7;3951:6;3940:9;3936:22;3915:53;:::i;:::-;3905:63;;3876:98;3487:497;;;;;;;:::o;3991:386::-;;4128:2;4116:9;4107:7;4103:23;4099:32;4096:2;;;4144:1;4141;4134:12;4096:2;4200:1;4189:9;4185:17;4179:24;4223:18;4215:6;4212:30;4209:2;;;4255:1;4252;4245:12;4209:2;4275:86;4353:7;4344:6;4333:9;4329:22;4275:86;:::i;:::-;4265:96;;4158:209;4090:287;;;;:::o;4384:241::-;;4488:2;4476:9;4467:7;4463:23;4459:32;4456:2;;;4504:1;4501;4494:12;4456:2;4539:1;4556:53;4601:7;4592:6;4581:9;4577:22;4556:53;:::i;:::-;4546:63;;4518:97;4450:175;;;;:::o;4632:492::-;;;;4773:2;4761:9;4752:7;4748:23;4744:32;4741:2;;;4789:1;4786;4779:12;4741:2;4824:1;4841:53;4886:7;4877:6;4866:9;4862:22;4841:53;:::i;:::-;4831:63;;4803:97;4959:2;4948:9;4944:18;4931:32;4983:18;4975:6;4972:30;4969:2;;;5015:1;5012;5005:12;4969:2;5043:65;5100:7;5091:6;5080:9;5076:22;5043:65;:::i;:::-;5025:83;;;;4910:204;4735:389;;;;;:::o;5131:617::-;;;;;5289:2;5277:9;5268:7;5264:23;5260:32;5257:2;;;5305:1;5302;5295:12;5257:2;5340:1;5357:53;5402:7;5393:6;5382:9;5378:22;5357:53;:::i;:::-;5347:63;;5319:97;5475:2;5464:9;5460:18;5447:32;5499:18;5491:6;5488:30;5485:2;;;5531:1;5528;5521:12;5485:2;5559:65;5616:7;5607:6;5596:9;5592:22;5559:65;:::i;:::-;5541:83;;;;5426:204;5661:2;5679:53;5724:7;5715:6;5704:9;5700:22;5679:53;:::i;:::-;5669:63;;5640:98;5251:497;;;;;;;:::o;5755:472::-;;;5886:2;5874:9;5865:7;5861:23;5857:32;5854:2;;;5902:1;5899;5892:12;5854:2;5937:1;5954:53;5999:7;5990:6;5979:9;5975:22;5954:53;:::i;:::-;5944:63;;5916:97;6072:2;6061:9;6057:18;6044:32;6096:18;6088:6;6085:30;6082:2;;;6128:1;6125;6118:12;6082:2;6148:63;6203:7;6194:6;6183:9;6179:22;6148:63;:::i;:::-;6138:73;;6023:194;5848:379;;;;;:::o;6235:173::-;;6322:46;6364:3;6356:6;6322:46;:::i;:::-;6397:4;6392:3;6388:14;6374:28;;6315:93;;;;:::o;6416:142::-;6507:45;6546:5;6507:45;:::i;:::-;6502:3;6495:58;6489:69;;:::o;6565:103::-;6638:24;6656:5;6638:24;:::i;:::-;6633:3;6626:37;6620:48;;:::o;6706:690::-;;6851:54;6899:5;6851:54;:::i;:::-;6918:86;6997:6;6992:3;6918:86;:::i;:::-;6911:93;;7025:56;7075:5;7025:56;:::i;:::-;7101:7;7129:1;7114:260;7139:6;7136:1;7133:13;7114:260;;;7206:6;7200:13;7227:63;7286:3;7271:13;7227:63;:::i;:::-;7220:70;;7307:60;7360:6;7307:60;:::i;:::-;7297:70;;7171:203;7161:1;7158;7154:9;7149:14;;7114:260;;;7118:14;7387:3;7380:10;;6830:566;;;;;;;:::o;7429:300::-;;7545:71;7609:6;7604:3;7545:71;:::i;:::-;7538:78;;7628:43;7664:6;7659:3;7652:5;7628:43;:::i;:::-;7693:29;7715:6;7693:29;:::i;:::-;7688:3;7684:39;7677:46;;7531:198;;;;;:::o;7737:327::-;;7839:39;7872:5;7839:39;:::i;:::-;7890:61;7944:6;7939:3;7890:61;:::i;:::-;7883:68;;7956:52;8001:6;7996:3;7989:4;7982:5;7978:16;7956:52;:::i;:::-;8029:29;8051:6;8029:29;:::i;:::-;8024:3;8020:39;8013:46;;7819:245;;;;;:::o;8072:322::-;;8232:67;8296:2;8291:3;8232:67;:::i;:::-;8225:74;;8332:24;8328:1;8323:3;8319:11;8312:45;8385:2;8380:3;8376:12;8369:19;;8218:176;;;:::o;8477:591::-;;8636:4;8631:3;8627:14;8726:4;8719:5;8715:16;8709:23;8778:3;8772:4;8768:14;8761:4;8756:3;8752:14;8745:38;8798:73;8866:4;8852:12;8798:73;:::i;:::-;8790:81;;8656:227;8961:4;8954:5;8950:16;8944:23;8973:63;9030:4;9025:3;9021:14;9007:12;8973:63;:::i;:::-;8893:149;9059:4;9052:11;;8609:459;;;;;:::o;9130:737::-;;9275:4;9270:3;9266:14;9365:4;9358:5;9354:16;9348:23;9417:3;9411:4;9407:14;9400:4;9395:3;9391:14;9384:38;9437:73;9505:4;9491:12;9437:73;:::i;:::-;9429:81;;9295:227;9598:4;9591:5;9587:16;9581:23;9610:63;9667:4;9662:3;9658:14;9644:12;9610:63;:::i;:::-;9532:147;9760:4;9753:5;9749:16;9743:23;9772:63;9829:4;9824:3;9820:14;9806:12;9772:63;:::i;:::-;9689:152;9858:4;9851:11;;9248:619;;;;;:::o;9874:103::-;9947:24;9965:5;9947:24;:::i;:::-;9942:3;9935:37;9929:48;;:::o;9984:113::-;10067:24;10085:5;10067:24;:::i;:::-;10062:3;10055:37;10049:48;;:::o;10104:370::-;;10281:2;10270:9;10266:18;10258:26;;10331:9;10325:4;10321:20;10317:1;10306:9;10302:17;10295:47;10356:108;10459:4;10450:6;10356:108;:::i;:::-;10348:116;;10252:222;;;;:::o;10481:441::-;;10666:2;10655:9;10651:18;10643:26;;10716:9;10710:4;10706:20;10702:1;10691:9;10687:17;10680:47;10741:88;10824:4;10815:6;10807;10741:88;:::i;:::-;10733:96;;10840:72;10908:2;10897:9;10893:18;10884:6;10840:72;:::i;:::-;10637:285;;;;;;:::o;10929:416::-;;11129:2;11118:9;11114:18;11106:26;;11179:9;11173:4;11169:20;11165:1;11154:9;11150:17;11143:47;11204:131;11330:4;11204:131;:::i;:::-;11196:139;;11100:245;;;:::o;11352:386::-;;11537:2;11526:9;11522:18;11514:26;;11587:9;11581:4;11577:20;11573:1;11562:9;11558:17;11551:47;11612:116;11723:4;11714:6;11612:116;:::i;:::-;11604:124;;11508:230;;;;:::o;11745:358::-;;11916:2;11905:9;11901:18;11893:26;;11966:9;11960:4;11956:20;11952:1;11941:9;11937:17;11930:47;11991:102;12088:4;12079:6;11991:102;:::i;:::-;11983:110;;11887:216;;;;:::o;12110:222::-;;12237:2;12226:9;12222:18;12214:26;;12251:71;12319:1;12308:9;12304:17;12295:6;12251:71;:::i;:::-;12208:124;;;;:::o;12339:441::-;;12524:2;12513:9;12509:18;12501:26;;12538:71;12606:1;12595:9;12591:17;12582:6;12538:71;:::i;:::-;12657:9;12651:4;12647:20;12642:2;12631:9;12627:18;12620:48;12682:88;12765:4;12756:6;12748;12682:88;:::i;:::-;12674:96;;12495:285;;;;;;:::o;12787:568::-;;13008:2;12997:9;12993:18;12985:26;;13022:71;13090:1;13079:9;13075:17;13066:6;13022:71;:::i;:::-;13141:9;13135:4;13131:20;13126:2;13115:9;13111:18;13104:48;13166:88;13249:4;13240:6;13232;13166:88;:::i;:::-;13158:96;;13265:80;13341:2;13330:9;13326:18;13317:6;13265:80;:::i;:::-;12979:376;;;;;;;:::o;13362:256::-;;13424:2;13418:9;13408:19;;13462:4;13454:6;13450:17;13561:6;13549:10;13546:22;13525:18;13513:10;13510:34;13507:62;13504:2;;;13582:1;13579;13572:12;13504:2;13602:10;13598:2;13591:22;13402:216;;;;:::o;13625:322::-;;13769:18;13761:6;13758:30;13755:2;;;13801:1;13798;13791:12;13755:2;13868:4;13864:9;13857:4;13849:6;13845:17;13841:33;13833:41;;13932:4;13926;13922:15;13914:23;;13692:255;;;:::o;13954:151::-;;14040:3;14032:11;;14078:4;14073:3;14069:14;14061:22;;14026:79;;;:::o;14112:137::-;;14221:5;14215:12;14205:22;;14186:63;;;:::o;14256:122::-;;14350:5;14344:12;14334:22;;14315:63;;;:::o;14385:108::-;;14483:4;14478:3;14474:14;14466:22;;14460:33;;;:::o;14501:178::-;;14631:6;14626:3;14619:19;14668:4;14663:3;14659:14;14644:29;;14612:67;;;;:::o;14688:153::-;;14793:6;14788:3;14781:19;14830:4;14825:3;14821:14;14806:29;;14774:67;;;;:::o;14850:163::-;;14965:6;14960:3;14953:19;15002:4;14997:3;14993:14;14978:29;;14946:67;;;;:::o;15021:91::-;;15083:24;15101:5;15083:24;:::i;:::-;15072:35;;15066:46;;;:::o;15119:121::-;;15192:42;15185:5;15181:54;15170:65;;15164:76;;;:::o;15247:72::-;;15309:5;15298:16;;15292:27;;;:::o;15326:129::-;;15413:37;15444:5;15413:37;:::i;:::-;15400:50;;15394:61;;;:::o;15462:121::-;;15541:37;15572:5;15541:37;:::i;:::-;15528:50;;15522:61;;;:::o;15590:108::-;;15669:24;15687:5;15669:24;:::i;:::-;15656:37;;15650:48;;;:::o;15706:145::-;15787:6;15782:3;15777;15764:30;15843:1;15834:6;15829:3;15825:16;15818:27;15757:94;;;:::o;15860:268::-;15925:1;15932:101;15946:6;15943:1;15940:13;15932:101;;;16022:1;16017:3;16013:11;16007:18;16003:1;15998:3;15994:11;15987:39;15968:2;15965:1;15961:10;15956:15;;15932:101;;;16048:6;16045:1;16042:13;16039:2;;;16113:1;16104:6;16099:3;16095:16;16088:27;16039:2;15909:219;;;;:::o;16136:97::-;;16224:2;16220:7;16215:2;16208:5;16204:14;16200:28;16190:38;;16184:49;;;:::o;16241:117::-;16310:24;16328:5;16310:24;:::i;:::-;16303:5;16300:35;16290:2;;16349:1;16346;16339:12;16290:2;16284:74;:::o;16365:117::-;16434:24;16452:5;16434:24;:::i;:::-;16427:5;16424:35;16414:2;;16473:1;16470;16463:12;16414:2;16408:74;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\npragma experimental ABIEncoderV2;\n\n//import '../../OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol';\nimport '@openzeppelin/contracts/math/SafeMath.sol';\n\nimport './Recordable.sol';\nimport './Certifiable.sol';\n\n/// @title Product item contract. A product is recordable by an operator and certifiable by a certifier.\ncontract Product is Recordable, Certifiable {\n    \n    /// @param _id Product ID\n    /// @param _description Description of certification\n    function certifyProduct(uint256 _id, string calldata _description) external {\n        if (this.getById(_id).registeredBy == address(0)) revert('Element does not exist');\n        this.certify(_id, _description, msg.sender);\n    }\n}\n",
  "sourcePath": "/home/francesca/WebstormProjects/PSAB-Contracts/contracts/Product.sol",
  "ast": {
    "absolutePath": "/home/francesca/WebstormProjects/PSAB-Contracts/contracts/Product.sol",
    "exportedSymbols": {
      "Product": [
        1043
      ]
    },
    "id": 1044,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1000,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:4"
      },
      {
        "id": 1001,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "57:33:4"
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 1002,
        "nodeType": "ImportDirective",
        "scope": 1044,
        "sourceUnit": 1436,
        "src": "174:51:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/francesca/WebstormProjects/PSAB-Contracts/contracts/Recordable.sol",
        "file": "./Recordable.sol",
        "id": 1003,
        "nodeType": "ImportDirective",
        "scope": 1044,
        "sourceUnit": 1240,
        "src": "227:26:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/francesca/WebstormProjects/PSAB-Contracts/contracts/Certifiable.sol",
        "file": "./Certifiable.sol",
        "id": 1004,
        "nodeType": "ImportDirective",
        "scope": 1044,
        "sourceUnit": 133,
        "src": "254:27:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1006,
              "name": "Recordable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1239,
              "src": "408:10:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Recordable_$1239",
                "typeString": "contract Recordable"
              }
            },
            "id": 1007,
            "nodeType": "InheritanceSpecifier",
            "src": "408:10:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1008,
              "name": "Certifiable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 132,
              "src": "420:11:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Certifiable_$132",
                "typeString": "contract Certifiable"
              }
            },
            "id": 1009,
            "nodeType": "InheritanceSpecifier",
            "src": "420:11:4"
          }
        ],
        "contractDependencies": [
          132,
          1239
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1005,
          "nodeType": "StructuredDocumentation",
          "src": "283:105:4",
          "text": "@title Product item contract. A product is recordable by an operator and certifiable by a certifier."
        },
        "fullyImplemented": true,
        "id": 1043,
        "linearizedBaseContracts": [
          1043,
          132,
          1239
        ],
        "name": "Product",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1041,
              "nodeType": "Block",
              "src": "606:152:4",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1019,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1012,
                            "src": "633:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1017,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "620:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Product_$1043",
                              "typeString": "contract Product"
                            }
                          },
                          "id": 1018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getById",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1201,
                          "src": "620:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Data_$1103_memory_ptr_$",
                            "typeString": "function (uint256) view external returns (struct Recordable.Data memory)"
                          }
                        },
                        "id": 1020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "620:17:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$1103_memory_ptr",
                          "typeString": "struct Recordable.Data memory"
                        }
                      },
                      "id": 1021,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "registeredBy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1102,
                      "src": "620:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "662:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "654:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1022,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "654:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 1025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "654:10:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "620:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1031,
                  "nodeType": "IfStatement",
                  "src": "616:82:4",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "456c656d656e7420646f6573206e6f74206578697374",
                          "id": 1028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "673:24:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_85bd8aa9bbad5d1356ae87fc0afd52bcc36dc096b5dcf85163e4bf0a2b08cac5",
                            "typeString": "literal_string \"Element does not exist\""
                          },
                          "value": "Element does not exist"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_85bd8aa9bbad5d1356ae87fc0afd52bcc36dc096b5dcf85163e4bf0a2b08cac5",
                            "typeString": "literal_string \"Element does not exist\""
                          }
                        ],
                        "id": 1027,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "666:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) pure"
                        }
                      },
                      "id": 1029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "666:32:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1030,
                    "nodeType": "ExpressionStatement",
                    "src": "666:32:4"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1035,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1012,
                        "src": "721:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1036,
                        "name": "_description",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1014,
                        "src": "726:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1037,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "740:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "740:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1032,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "708:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Product_$1043",
                          "typeString": "contract Product"
                        }
                      },
                      "id": 1034,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "certify",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 90,
                      "src": "708:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (uint256,string memory,address) external"
                      }
                    },
                    "id": 1039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "708:43:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1040,
                  "nodeType": "ExpressionStatement",
                  "src": "708:43:4"
                }
              ]
            },
            "documentation": {
              "id": 1010,
              "nodeType": "StructuredDocumentation",
              "src": "443:82:4",
              "text": "@param _id Product ID\n @param _description Description of certification"
            },
            "functionSelector": "f7475edf",
            "id": 1042,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "certifyProduct",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1012,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1042,
                  "src": "554:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1011,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "554:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1014,
                  "mutability": "mutable",
                  "name": "_description",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1042,
                  "src": "567:28:4",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1013,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "567:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "553:43:4"
            },
            "returnParameters": {
              "id": 1016,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "606:0:4"
            },
            "scope": 1043,
            "src": "530:228:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1044,
        "src": "388:372:4"
      }
    ],
    "src": "33:728:4"
  },
  "legacyAST": {
    "absolutePath": "/home/francesca/WebstormProjects/PSAB-Contracts/contracts/Product.sol",
    "exportedSymbols": {
      "Product": [
        1043
      ]
    },
    "id": 1044,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1000,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:4"
      },
      {
        "id": 1001,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "57:33:4"
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 1002,
        "nodeType": "ImportDirective",
        "scope": 1044,
        "sourceUnit": 1436,
        "src": "174:51:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/francesca/WebstormProjects/PSAB-Contracts/contracts/Recordable.sol",
        "file": "./Recordable.sol",
        "id": 1003,
        "nodeType": "ImportDirective",
        "scope": 1044,
        "sourceUnit": 1240,
        "src": "227:26:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/francesca/WebstormProjects/PSAB-Contracts/contracts/Certifiable.sol",
        "file": "./Certifiable.sol",
        "id": 1004,
        "nodeType": "ImportDirective",
        "scope": 1044,
        "sourceUnit": 133,
        "src": "254:27:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1006,
              "name": "Recordable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1239,
              "src": "408:10:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Recordable_$1239",
                "typeString": "contract Recordable"
              }
            },
            "id": 1007,
            "nodeType": "InheritanceSpecifier",
            "src": "408:10:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1008,
              "name": "Certifiable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 132,
              "src": "420:11:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Certifiable_$132",
                "typeString": "contract Certifiable"
              }
            },
            "id": 1009,
            "nodeType": "InheritanceSpecifier",
            "src": "420:11:4"
          }
        ],
        "contractDependencies": [
          132,
          1239
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1005,
          "nodeType": "StructuredDocumentation",
          "src": "283:105:4",
          "text": "@title Product item contract. A product is recordable by an operator and certifiable by a certifier."
        },
        "fullyImplemented": true,
        "id": 1043,
        "linearizedBaseContracts": [
          1043,
          132,
          1239
        ],
        "name": "Product",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1041,
              "nodeType": "Block",
              "src": "606:152:4",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1019,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1012,
                            "src": "633:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1017,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "620:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Product_$1043",
                              "typeString": "contract Product"
                            }
                          },
                          "id": 1018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getById",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1201,
                          "src": "620:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Data_$1103_memory_ptr_$",
                            "typeString": "function (uint256) view external returns (struct Recordable.Data memory)"
                          }
                        },
                        "id": 1020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "620:17:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$1103_memory_ptr",
                          "typeString": "struct Recordable.Data memory"
                        }
                      },
                      "id": 1021,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "registeredBy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1102,
                      "src": "620:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "662:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "654:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1022,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "654:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 1025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "654:10:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "620:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1031,
                  "nodeType": "IfStatement",
                  "src": "616:82:4",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "456c656d656e7420646f6573206e6f74206578697374",
                          "id": 1028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "673:24:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_85bd8aa9bbad5d1356ae87fc0afd52bcc36dc096b5dcf85163e4bf0a2b08cac5",
                            "typeString": "literal_string \"Element does not exist\""
                          },
                          "value": "Element does not exist"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_85bd8aa9bbad5d1356ae87fc0afd52bcc36dc096b5dcf85163e4bf0a2b08cac5",
                            "typeString": "literal_string \"Element does not exist\""
                          }
                        ],
                        "id": 1027,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "666:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) pure"
                        }
                      },
                      "id": 1029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "666:32:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1030,
                    "nodeType": "ExpressionStatement",
                    "src": "666:32:4"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1035,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1012,
                        "src": "721:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1036,
                        "name": "_description",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1014,
                        "src": "726:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1037,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "740:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "740:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1032,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "708:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Product_$1043",
                          "typeString": "contract Product"
                        }
                      },
                      "id": 1034,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "certify",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 90,
                      "src": "708:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (uint256,string memory,address) external"
                      }
                    },
                    "id": 1039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "708:43:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1040,
                  "nodeType": "ExpressionStatement",
                  "src": "708:43:4"
                }
              ]
            },
            "documentation": {
              "id": 1010,
              "nodeType": "StructuredDocumentation",
              "src": "443:82:4",
              "text": "@param _id Product ID\n @param _description Description of certification"
            },
            "functionSelector": "f7475edf",
            "id": 1042,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "certifyProduct",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1012,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1042,
                  "src": "554:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1011,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "554:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1014,
                  "mutability": "mutable",
                  "name": "_description",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1042,
                  "src": "567:28:4",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1013,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "567:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "553:43:4"
            },
            "returnParameters": {
              "id": 1016,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "606:0:4"
            },
            "scope": 1043,
            "src": "530:228:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1044,
        "src": "388:372:4"
      }
    ],
    "src": "33:728:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xdEF6D9aE71d98038C2b2C54fecfc79eAa5d75DE4",
      "transactionHash": "0x6a47c5ae9cfe176bc08dec2e15a99f456bb768de8d3cb0953664440a93619a33"
    }
  },
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-10-24T23:36:09.188Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "certify(uint256,string)": {
        "params": {
          "_description": "Certification description",
          "_id": "Item to be certified"
        }
      },
      "certify(uint256,string,address)": {
        "params": {
          "_description": "Certification description",
          "_id": "Item to be certified",
          "_source": "Original sender"
        }
      },
      "certifyProduct(uint256,string)": {
        "params": {
          "_description": "Description of certification",
          "_id": "Product ID"
        }
      },
      "getByCertifier(address)": {
        "params": {
          "_address": "Certifier address for which to retrieve certifications"
        },
        "returns": {
          "_0": "the array containing all the certifications perfomed by a specific certifier"
        }
      },
      "getById(uint256)": {
        "params": {
          "_id": "Item ID"
        },
        "returns": {
          "_0": "the item data only if the item exists"
        }
      },
      "getByItem(uint256)": {
        "params": {
          "_item": "Item ID for which to retrieve certifications"
        },
        "returns": {
          "_0": "the array containing all the certifications related to a specific item"
        }
      },
      "getByOperator(address)": {
        "params": {
          "_address": "Operator's address"
        },
        "returns": {
          "_0": "the array containing all the item IDs registered by a specific operator"
        }
      },
      "getByPortion(uint256)": {
        "params": {
          "_id": "Portion ID"
        },
        "returns": {
          "_0": "the array containing all the the item IDs registered in a specific portion"
        }
      },
      "getCertificationById(uint256)": {
        "params": {
          "_id": "Item for which to retrieve certifications"
        },
        "returns": {
          "_0": "the related certification"
        }
      },
      "getTotal()": {
        "returns": {
          "_0": "the number of registerd items"
        }
      },
      "register(string,uint256)": {
        "params": {
          "_description": "Item description",
          "_id": "Related portion ID"
        }
      },
      "register(string,uint256,address)": {
        "params": {
          "_description": "Item description",
          "_id": "Related portion ID",
          "_source": "Original sender"
        }
      }
    },
    "title": "Product item contract. A product is recordable by an operator and certifiable by a certifier.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}