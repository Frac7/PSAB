{"version":3,"sources":["features/certify/map/index.js","features/certify/components/CertifyForm.js","features/certify/containers/CertifyFormContainer.js","features/certify/index.js","contracts/index.js","shared/utils/index.js","shared/auth/index.js","shared/element-dropdown/ElementSelector.js","features/register/components/LandForm.js","features/register/components/PortionForm.js","features/register/components/ProductActivitiesForm.js","features/register/utils/index.js","features/register/components/DocumentField.js","features/register/components/ToastFeedback.js","features/register/components/ContractTermsForm.js","features/register/components/TransferOwnershipForm.js","features/register/components/DocumentForm.js","shared/transaction-loader/index.js","shared/wallet/SeedPhraseForm.js","shared/wallet/index.js"],"names":["initialValues","object","description","validationSchema","shape","number","required","string","ProductActivitiesForm","values","touched","errors","isSubmitting","handleSubmit","handleChange","resetForm","currentForm","userAddress","useState","elements","setElements","fetchErrors","setFetchErrors","isLoading","setIsLoading","useEffect","element","contractInstance","window","web3","eth","Contract","contracts","ABI","address","methods","getTotal","call","from","then","total","parseInt","i","getById","result","id","catch","error","handleFetching","Container","fluid","Row","className","Col","xl","sm","size","Alert","color","length","Form","onSubmit","noValidate","FormGroup","Label","for","Input","valid","type","name","onChange","value","disabled","map","index","key","FormText","connect","state","user","Selector","getUser","history","useHistory","data","attributes","roles","indexOf","CERTIFIER","toString","push","PROFILE","PRODUCT","setCurrentForm","isOpen","setIsOpen","hasErrors","setHasErrors","useCallback","setSubmitting","handleFeedback","subject","senderAddress","send","username","PROD_ACTIVITIES","currentElement","setCurrentElement","props","CertifyForm","Certify","withWallet","CertifyFormContainer","withAuthentication","CERTIFY","LAND","Land","PORTION","Portion","Product","MAINTENANCE_ACTIVITIES","Maintenance","ProductionActivity","fetchLandsByOwner","landInstance","getByOwner","lands","forEach","fetchPortionsByOwner","portionInstance","portion","fetchPortionsByBuyer","getByBuyer","buyer","AuthComponent","requestUser","isError","to","pathname","SIGNIN","ElementSelector","toggle","onClick","choices","useMemo","DropdownItem","Dropdown","DropdownToggle","caret","block","DropdownMenu","LandForm","reference","innerRef","PortionForm","land","createDocumentName","old","ulid","Date","now","split","DocumentField","setFieldValue","handleFileChange","event","persist","files","currentTarget","file","reader","FileReader","addEventListener","base64","readAsDataURL","form","xs","document","ToastFeedback","setTimeout","ToastSuccess","Toast","style","position","bottom","right","ToastHeader","icon","faCheck","ToastBody","ToastError","faTimes","ContractTermsForm","placeholder","InputGroup","InputGroupAddon","addonType","faEuroSign","price","duration","expectedProduction","periodicity","expMainActivityCost","expProdActivityCost","TransferOwnership","DocumentForm","TransactionLoader","animated","SeedPhraseForm","phrase","Component","currentProvider","constructor","isHDWalletProvider","setIsHDWalletProvider","setErrors","provider","HDWalletProvider","mnemonic","providerOrUrl","shareNonce","getAddresses","includes","toLowerCase","setProvider","defaultAccount","message","min","integer","matches"],"mappings":"kSAKMA,EAAgB,CACrBC,OAAQ,GACRC,YAAa,IAGRC,EAAmBF,cAASG,MAAM,CACvCH,OAAQI,cAASC,SAAS,8CAC1BJ,YAAaK,cAASD,SAAS,2DCgIjBE,EAnHe,SAAC,GAWxB,IAVNC,EAUK,EAVLA,OACAC,EASK,EATLA,QACAC,EAQK,EARLA,OACAC,EAOK,EAPLA,aACAC,EAMK,EANLA,aACAC,EAKK,EALLA,aACAC,EAIK,EAJLA,UACAf,EAGK,EAHLA,cACAgB,EAEK,EAFLA,YACAC,EACK,EADLA,YACK,EAC2BC,mBAAS,IADpC,mBACEC,EADF,KACYC,EADZ,OAEiCF,oBAAS,GAF1C,mBAEEG,EAFF,KAEeC,EAFf,OAG6BJ,oBAAS,GAHtC,mBAGEK,EAHF,KAGaC,EAHb,KAcL,OATAC,qBAAU,WACTV,EAAUf,KACR,CAACe,EAAWf,IAEfyB,qBAAU,WACTL,EAAY,IDhBS,SAACH,EAAaG,EAAaC,EAAaC,EAAgBE,EAAcE,GAC5FF,GAAa,GAEb,IAAMG,EAAmB,IAAIC,OAAOC,KAAKC,IAAIC,SAASC,IAAUN,GAASO,IAAKD,IAAUN,GAASQ,SACjGP,EAAiBQ,QAAQC,WACvBC,KAAK,CAAEC,KAAMrB,IACbsB,MAAK,SAACC,GAEN,KADAA,EAAQC,SAASD,IAIhB,OAFApB,EAAY,SACZI,GAAa,GAId,IARgB,eAQPkB,GACHrB,GACJM,EAAiBQ,QAAQQ,QAAQD,GAC/BL,KAAK,CAAEC,KAAMrB,IACbsB,MAAK,SAACK,GACNxB,GAAY,SAACD,GAAD,4BACRA,GADQ,aAAC,eAETyB,GAFQ,IAGXC,GAAIH,SAGDA,IAAMF,EAAQ,GACjBhB,GAAa,MAGdsB,OAAM,SAACC,GACPvB,GAAa,GACbF,GAAe,OAjBVoB,EAAI,EAAGA,EAAIF,EAAOE,IAAM,EAAxBA,MAsBTI,OAAM,SAACC,GACPvB,GAAa,GACbF,GAAe,MCrBhB0B,CAAe/B,EAAaG,EAAaC,EAAaC,EAAgBE,EAAcR,KAClF,CAACA,EAAaC,EAAaG,EAAaC,EAAaC,EAAgBE,IAEpED,EAEF,kBAAC0B,EAAA,EAAD,CAAWC,OAAK,GACf,kBAACC,EAAA,EAAD,CAAKC,UAAU,uEACd,kBAACC,EAAA,EAAD,CAAKC,GAAG,OAAOC,GAAG,QACjB,kBAAC,IAAD,CAAeC,KAAK,aAOrBnC,EAEF,kBAACoC,EAAA,EAAD,CAAOC,MAAM,SAASN,UAAU,QAAhC,6EAIGjC,EAASwC,OAOb,kBAACC,EAAA,EAAD,CAAMC,SAAUhD,EAAciD,YAAU,GACvC,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAOC,IAAI,WAAX,gCACA,kBAACC,EAAA,EAAD,CAAOC,MAAOzD,EAAQT,SAAWU,EAAOV,OAAQmE,KAAK,SAASC,KAAK,SAASxB,GAAG,SAASyB,SAAUxD,EAAcyD,MAAO9D,EAAOR,OAAQuE,SAAU5D,GAC/I,4BAAQ2D,MAAM,KACbpD,EAASsD,KAAI,SAAC/C,EAASgD,GAAV,OAAoB,4BAAQC,IAAKD,EAAOH,MAAO7C,EAAQmB,IAAKnB,EAAQmB,GAAhD,MAAuDnB,EAAQxB,iBAEjGS,EAAOV,QAAU,kBAAC2E,EAAA,EAAD,CAAUlB,MAAM,UAAU/C,EAAOV,SAEpD,kBAAC8D,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAOC,IAAI,eAAX,eACA,kBAACC,EAAA,EAAD,CAAOC,MACNzD,EAAQR,cAAgBS,EAAOT,YAAakE,KAAK,WAAWC,KAAK,cAAcxB,GAAG,cAAcyB,SAAUxD,EAAcyD,MAAO9D,EAAOP,YAAasE,SAAU5D,IAC7JD,EAAOT,aAAe,kBAAC0E,EAAA,EAAD,CAAUlB,MAAM,UAAU/C,EAAOT,cAEzD,kBAAC,IAAD,CAAoBkE,KAAK,SAASI,SAAU5D,GAA5C,cApBA,kBAAC6C,EAAA,EAAD,CAAOC,MAAM,OAAON,UAAU,QAA9B,sD,4CCyCYyB,eAJS,SAACC,GAAD,MAAY,CACnCC,KAAMC,IAASC,QAAQH,MAGTD,EArFc,SAAC,GAAc,IAAZE,EAAW,EAAXA,KACzBG,EAAUC,cAEhB1D,qBAAU,WACNsD,EAAKK,OACgBL,EAAKK,KAApBC,WACO,iBAAmBC,IAAMC,QAAQC,KAAWC,YAC1DP,EAAQQ,KAAKC,QAGb,CAACZ,EAAMG,IAVgC,MAYJhE,mBAAS0E,KAZL,mBAYnC5E,EAZmC,KAYtB6E,EAZsB,OAcd3E,oBAAS,GAdK,mBAcnC4E,EAdmC,KAc3BC,EAd2B,OAeR7E,oBAAS,GAfD,mBAenCK,EAfmC,KAexBC,EAfwB,OAgBRN,oBAAS,GAhBD,mBAgBnC8E,EAhBmC,KAgBxBC,EAhBwB,KAiBpCpC,EAAWqC,uBAAY,SAACzF,EAAD,GAA2C,IAAhC0F,EAA+B,EAA/BA,cAAepF,EAAgB,EAAhBA,UACtDS,GAAa,IF7BM,SAAC,EAAyB4E,EAAgBC,EAASC,EAAetF,GAAiB,IAAhFf,EAA+E,EAA/EA,OAAQC,EAAuE,EAAvEA,YACzByB,EAAmB,IAAIC,OAAOC,KAAKC,IAAIC,SAASC,IAAUqE,GAASpE,IAAKD,IAAUqE,GAASnE,SAE3FR,EAAUV,IAAgB4E,IAAU,UAAY,aAEtDjE,EAAiBQ,QAAjB,iBAAmCT,IAAWzB,EAAQC,GACpDqG,KAAK,CAAEjE,KAAMgE,IACb/D,MAAK,SAACK,GACNwD,GAAe,MAEftD,OAAM,SAACC,GACPqD,GAAe,ME4BhBvF,CAAaJ,GARU,SAACuF,GACvBjF,EAAUf,GACVmG,GAAc,GAEdF,EAAaD,GACbD,GAAU,GACVvE,GAAa,KAEuBR,EAAa+D,EAAKK,KAAKoB,SAAUxF,KACpE,CAACiF,EAAcF,EAAW/E,EAAa+D,IAE1C,OACC,oCACC,kBAAC9B,EAAA,EAAD,CAAWC,OAAK,GACf,kBAACC,EAAA,EAAD,CAAKC,UAAU,8CACd,kBAACC,EAAA,EAAD,KACC,yCAAerC,IAEhB,kBAACqC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GAAIH,UAAU,0BAC7B,kBAAC,IAAD,CACCjC,SAAU,CACT,CACCiD,KAAMwB,KAEP,CACCxB,KAAMqC,MAGRC,eAAgB1F,EAChB2F,kBAAmBd,MAIrBtE,GAAa,kBAAC,IAAD,MACd,kBAAC4B,EAAA,EAAD,KACC,kBAACE,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,IAChB,kBAAC,IAAD,CACCvD,cAAeA,EACfG,iBAAkBA,EAClB0D,SAAUA,IAET,SAAA+C,GAAK,OAAI,kBAACC,EAAD,eACT7F,YAAaA,EACbC,YAAa8D,EAAKK,KAAKoB,UACnBI,UAKT,kBAAC,IAAD,CAAed,OAAQA,EAAQC,UAAWA,EAAWC,UAAWA,Q,kBCzF7Dc,EAAUC,YAAWC,GAEZC,sBAAmBH,EAASI,M,oGCMrClF,GAAS,mBACbmF,IAAO,CACPlF,IAAKmF,IACLlF,QAAS,+CAHI,cAKbmF,IAAU,CACVpF,IAAKqF,IACLpF,QAAS,+CAPI,cASb0D,IAAU,CACV3D,IAAKsF,IACLrF,QAAS,+CAXI,cAabsF,IAAyB,CACzBvF,IAAKwF,IACLvF,QAAS,+CAfI,cAiBbuE,IAAkB,CAClBxE,IAAKyF,IACLxF,QAAS,+CAnBI,GAuBAF,O,8KClCT2F,EAAoB,SAAC1G,EAAaG,EAAaI,EAAcF,GAClEE,GAAa,GAEb,IAAMoG,EAAe,IAAIhG,OAAOC,KAAKC,IAAIC,SAASC,IAAUmF,KAAMlF,IAAKD,IAAUmF,KAAMjF,SACvF0F,EAAazF,QAAQ0F,WAAW5G,GAC9BoB,KAAK,CAAEC,KAAMrB,IACbsB,MAAK,SAACuF,GACN,IAAKA,EAAMnE,OAGV,OAFAvC,EAAY,SACZI,GAAa,GAIdsG,EAAMC,SAAQ,SAAClF,EAAI6B,GAClBkD,EAAazF,QAAQQ,QAAQE,GAC3BR,KAAK,CAAEC,KAAMrB,IACbsB,MAAK,SAACK,GACNxB,GAAY,SAACD,GAAD,4BACRA,GADQ,aAAC,eAERyB,GAFO,IAGVC,YAGE6B,IAAUoD,EAAMnE,OAAS,GAC5BnC,GAAa,MAGdsB,OAAM,SAACC,GACPzB,GAAe,GACfE,GAAa,YAIhBsB,OAAM,SAACC,GACPzB,GAAe,GACfE,GAAa,OAIVwG,EAAuB,SAAC/G,EAAaG,EAAaI,EAAcF,GACrEE,GAAa,GAEb,IAAMyG,EAAkB,IAAIrG,OAAOC,KAAKC,IAAIC,SAASC,IAAUqF,KAASpF,IAAKD,IAAUqF,KAASnF,SAChG+F,EAAgB9F,QAAQ0F,WAAW5G,GACjCoB,KAAK,CAAEC,KAAMrB,IACbsB,MAAK,SAACK,GACN,IAAKA,EAAOe,OAGX,OAFAvC,EAAY,SACZI,GAAa,GAIdoB,EAAOmF,SAAQ,SAAClF,EAAI6B,GACnBuD,EAAgB9F,QAAQQ,QAAQE,GAC9BR,KAAK,CAAEC,KAAMrB,IACbsB,MAAK,SAAC2F,GACN9G,GAAY,SAACD,GAAD,4BACRA,GADQ,aAAC,eAER+G,EAAQ,IAFD,IAGVrF,YAGE6B,IAAU9B,EAAOe,OAAS,GAC7BnC,GAAa,MAGdsB,OAAM,SAACC,GACPzB,GAAe,GACfE,GAAa,YAIhBsB,OAAM,SAACC,GACPvB,GAAa,GACbF,GAAe,OAIZ6G,EAAuB,SAAClH,EAAaG,EAAaI,EAAcF,GACrEE,GAAa,GAEb,IAAMyG,EAAkB,IAAIrG,OAAOC,KAAKC,IAAIC,SAASC,IAAUqF,KAASpF,IAAKD,IAAUqF,KAASnF,SAChG+F,EAAgB9F,QAAQiG,WAAWnH,GACjCoB,KAAK,CAAEC,KAAMrB,IACbsB,MAAK,SAACK,GACN,IAAKA,EAAOe,OAGX,OAFAvC,EAAY,SACZI,GAAa,GAIdoB,EAAOmF,SAAQ,SAAClF,EAAI6B,GACnBuD,EAAgB9F,QAAQQ,QAAQE,GAC9BR,KAAK,CAAEC,KAAMrB,IACbsB,MAAK,SAAC2F,GACFA,EAAQ,GAAGG,QAAUpH,IACxBG,GAAY,SAACD,GAAD,4BACRA,GADQ,aAAC,eAER+G,EAAQ,IAFD,IAGVrF,YAGE6B,IAAU9B,EAAOe,OAAS,GAC7BnC,GAAa,OAIfsB,OAAM,SAACC,GACPzB,GAAe,GACfE,GAAa,YAIhBsB,OAAM,SAACC,GACPvB,GAAa,GACbF,GAAe,Q,iCCtHlB,2GAuDe2F,IA3CY,SAACqB,EAAehG,GAAhB,OACvBuC,aAAQ,SAACC,GAAD,MAAY,CAAEC,KAAMC,IAASC,QAAQH,MAAW,CAAEyD,iBAA1D1D,EACI,YAAyD,IAAtD0D,EAAqD,EAArDA,YAAqD,IAAxCxD,KAAQK,EAAgC,EAAhCA,KAAM7D,EAA0B,EAA1BA,UAAWiH,EAAe,EAAfA,QAOrC,OANA/G,qBAAU,WACD2D,GACDmD,MAEL,CAACA,EAAanD,IAEb7D,EAEI,kBAAC,IAAD,CAAW2B,OAAK,GACZ,kBAAC,IAAD,CAAKE,UAAU,uEACX,kBAAC,IAAD,CAAKE,GAAG,OAAOC,GAAG,QACd,kBAAC,IAAD,CAAeC,KAAK,aAOpCgF,EAEI,kBAAC,IAAD,CAAWtF,OAAK,GACZ,kBAAC,IAAD,CAAKE,UAAU,kEACX,kBAAC,IAAD,CAAKE,GAAI,GAAIC,GAAI,IACb,kBAAC,IAAD,CAAOG,MAAM,SAASN,UAAU,QAAhC,gEAOhBgC,EACO,kBAACkD,EAAD,MAEA,kBAAC,IAAD,CAAUG,GAAI,CACjBC,SAAUC,IACV7D,MAAO,CAAExC,gB,0odCjBdsG,EA7BS,SAAC,GAAqD,IAAnDzH,EAAkD,EAAlDA,SAAUuF,EAAwC,EAAxCA,eAAgBC,EAAwB,EAAxBA,kBAAwB,EAChDzF,oBAAS,GADuC,mBACrE4E,EADqE,KAC7DC,EAD6D,KAGtE8C,EAAS3C,uBAAY,kBAAMH,GAAU,SAACD,GAAD,OAAaA,OAAS,CAACC,IAC5D+C,EAAU5C,uBAAY,SAAC3B,GAAD,OAAW,WACtCoC,EAAkBpC,MAChB,CAACoC,IAEEoC,EAAUC,mBAAQ,WACvB,OAAO7H,EAASsD,KAAI,SAACF,EAAOG,GAAR,OACnB,kBAACuE,EAAA,EAAD,CAAczE,SAAUD,EAAMC,SAAUsE,QAASA,EAAQvE,EAAMH,MAAOO,IAAKD,GAAQH,EAAMH,WAExF,CAAC0E,EAAS3H,IAEb,OACC,kBAAC+H,EAAA,EAAD,CACCpD,OAAQA,EACR+C,OAAQA,GAER,kBAACM,EAAA,EAAD,CAAgBC,OAAK,EAACC,OAAK,GACzB3C,GAEF,kBAAC4C,EAAA,EAAD,KACEP,M,yVC+DUQ,EApEE,SAAC,GAUX,IATNC,EASK,EATLA,UACA/I,EAQK,EARLA,OACAC,EAOK,EAPLA,QACAC,EAMK,EANLA,OACAC,EAKK,EALLA,aACAC,EAIK,EAJLA,aACAC,EAGK,EAHLA,aACAC,EAEK,EAFLA,UACAf,EACK,EADLA,cAMA,OAJAyB,qBAAU,WACTV,EAAUf,KACR,CAACe,EAAWf,IAGd,kBAAC4D,EAAA,EAAD,CAAM6F,SAAUD,EAAW3F,SAAUhD,EAAciD,YAAU,GAC5D,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAOC,IAAI,eAAX,eACA,kBAACC,EAAA,EAAD,CAAOC,MAAOzD,EAAQR,cAAgBS,EAAOT,YAAakE,KAAK,WAAWC,KAAK,cAAcxB,GAAG,cAAcyB,SAAUxD,EAAcyD,MAAO9D,EAAOP,cACnJS,EAAOT,aAAe,kBAAC0E,EAAA,EAAD,CAAUlB,MAAM,UAAU/C,EAAOT,cAEzD,kBAAC,IAAD,CAAoBkE,KAAK,SAASI,SAAU5D,GAA5C,c,sDC0FY8I,EA7GK,SAAC,GAWd,IAVNF,EAUK,EAVLA,UACG/I,EASE,EATFA,OACAC,EAQE,EARFA,QACAC,EAOE,EAPFA,OACAC,EAME,EANFA,aACAC,EAKE,EALFA,aACAC,EAIE,EAJFA,aACHC,EAGK,EAHLA,UACAf,EAEK,EAFLA,cACAiB,EACK,EADLA,YAEAQ,qBAAU,WACTV,EAAUf,KACR,CAACe,EAAWf,IAHV,MAK2BkB,mBAAS,IALpC,mBAKEC,EALF,KAKYC,EALZ,OAMiCF,oBAAS,GAN1C,mBAMEG,EANF,KAMeC,EANf,OAO6BJ,oBAAS,GAPtC,mBAOEK,EAPF,KAOaC,EAPb,KAaL,OAJAC,qBAAU,WACTkG,YAAkB1G,EAAaG,EAAaI,EAAcF,KACxD,CAACL,IAEAM,EAEF,kBAAC0B,EAAA,EAAD,CAAWC,OAAK,GACf,kBAACC,EAAA,EAAD,CAAKC,UAAU,uEACd,kBAACC,EAAA,EAAD,CAAKC,GAAG,OAAOC,GAAG,QACjB,kBAAC,IAAD,CAAeC,KAAK,aAOrBnC,EAEF,kBAACoC,EAAA,EAAD,CAAOC,MAAM,SAASN,UAAU,QAAhC,4DAIGjC,EAASwC,OAOb,kBAACC,EAAA,EAAD,CAAM6F,SAAUD,EAAW3F,SAAUhD,EAAciD,YAAU,GAC5D,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAOC,IAAI,QAAX,uBACA,kBAACC,EAAA,EAAD,CAAOC,MAAOzD,EAAQiJ,OAAShJ,EAAOgJ,KAAMvF,KAAK,SAASC,KAAK,OAAOxB,GAAG,OAAOyB,SAAUxD,EAAcyD,MAAO9D,EAAOkJ,KAAMnF,SAAU5D,GACrI,4BAAQ2D,MAAM,KACbpD,EAASsD,KAAI,SAAC/C,EAASgD,GAAV,OAAoB,4BAAQC,IAAKD,EAAOH,MAAO7C,EAAQmB,IAAKnB,EAAQmB,GAAhD,MAAuDnB,EAAQxB,iBAEjGS,EAAOgJ,MAAQ,kBAAC/E,EAAA,EAAD,CAAUlB,MAAM,UAAU/C,EAAOgJ,OAElD,kBAAC5F,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAOC,IAAI,eAAX,eACA,kBAACC,EAAA,EAAD,CAAOC,MAAOzD,EAAQR,cAAgBS,EAAOT,YAAakE,KAAK,WAAWC,KAAK,cAAcxB,GAAG,cAAcyB,SAAUxD,EAAcyD,MAAO9D,EAAOP,cACnJS,EAAOT,aAAe,kBAAC0E,EAAA,EAAD,CAAUlB,MAAM,UAAU/C,EAAOT,cAEzD,kBAAC,IAAD,CAAoBkE,KAAK,SAASI,SAAU5D,GAA5C,aAnBA,kBAAC6C,EAAA,EAAD,CAAOC,MAAM,OAAON,UAAU,QAA9B,mD,mCCkGY5C,EA9Ie,SAAC,GAUxB,IATHC,EASE,EATFA,OACAC,EAQE,EARFA,QACAC,EAOE,EAPFA,OACAC,EAME,EANFA,aACAC,EAKE,EALFA,aACAC,EAIE,EAJFA,aACHC,EAGK,EAHLA,UACAf,EAEK,EAFLA,cACAiB,EACK,EADLA,YACK,EAC2BC,mBAAS,IADpC,mBACEC,EADF,KACYC,EADZ,OAEiCF,oBAAS,GAF1C,mBAEEG,EAFF,KAEeC,EAFf,OAG6BJ,oBAAS,GAHtC,mBAGEK,EAHF,KAGaC,EAHb,KA8CL,OAzCAC,qBAAU,WACTV,EAAUf,KACR,CAACe,EAAWf,IAEfyB,qBAAU,WACT,IAAMwG,EAAkB,IAAIrG,OAAOC,KAAKC,IAAIC,SAASC,IAAUqF,KAASpF,IAAKD,IAAUqF,KAASnF,SAChG+F,EAAgB9F,QAAQC,WACtBC,KAAK,CAAEC,KAAOrB,IACdsB,MAAK,SAACC,IACNA,EAAQC,SAASD,MAEhBpB,EAAY,IACZI,GAAa,IAGd,IAPgB,eAOPkB,GACRuF,EAAgB9F,QAAQQ,QAAQD,GAC9BL,KAAK,CAAEC,KAAMrB,IACbsB,MAAK,SAACK,GACNxB,GAAY,SAACD,GAAD,4BACRA,GADQ,aAAC,eAETyB,GAFQ,IAGXC,GAAIH,SAGDA,IAAMF,EAAQ,GACjBhB,GAAa,MAGdsB,OAAM,SAACC,GACPzB,GAAe,GACfE,GAAa,OAhBPkB,EAAI,EAAGA,EAAIF,EAAOE,IAAM,EAAxBA,MAoBTI,OAAM,SAACC,GACPzB,GAAe,GACfE,GAAa,QAEb,CAACP,IAEAM,EAEF,kBAAC0B,EAAA,EAAD,CAAWC,OAAK,GACf,kBAACC,EAAA,EAAD,CAAKC,UAAU,uEACd,kBAACC,EAAA,EAAD,CAAKC,GAAG,OAAOC,GAAG,QACjB,kBAAC,IAAD,CAAeC,KAAK,aAOrBnC,EAEF,kBAACoC,EAAA,EAAD,CAAOC,MAAM,SAASN,UAAU,QAAhC,+DAIGjC,EAASwC,OAOb,kBAACC,EAAA,EAAD,CAAMC,SAAUhD,EAAciD,YAAU,GACvC,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAOC,IAAI,WAAX,qDACA,kBAACC,EAAA,EAAD,CAAOC,MAAOzD,EAAQwH,UAAYvH,EAAOuH,QAAS9D,KAAK,SAASC,KAAK,UAAUxB,GAAG,UAAUyB,SAAUxD,EAAcyD,MAAO9D,EAAOyH,QAAS1D,SAAU5D,GACpJ,4BAAQ2D,MAAM,KACbpD,EAASsD,KAAI,SAAC/C,EAASgD,GAAV,OAAoB,4BAAQC,IAAKD,EAAOH,MAAO7C,EAAQmB,IAAKnB,EAAQmB,GAAhD,MAAuDnB,EAAQ,GAAGxB,iBAEpGS,EAAOuH,SAAW,kBAACtD,EAAA,EAAD,CAAUlB,MAAM,UAAU/C,EAAOuH,UAErD,kBAACnE,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAOC,IAAI,eAAX,eACA,kBAACC,EAAA,EAAD,CAAOC,MACNzD,EAAQR,cAAgBS,EAAOT,YAAakE,KAAK,WAAWC,KAAK,cAAcxB,GAAG,cAAcyB,SAAUxD,EAAcyD,MAAO9D,EAAOP,YAAasE,SAAU5D,IAC7JD,EAAOT,aAAe,kBAAC0E,EAAA,EAAD,CAAUlB,MAAM,UAAU/C,EAAOT,cAEzD,kBAAC,IAAD,CAAoBkE,KAAK,SAASI,SAAU5D,GAA5C,aApBA,kBAAC6C,EAAA,EAAD,CAAOC,MAAM,OAAON,UAAU,QAA9B,sE,SC5FYwG,EAPY,SAACC,GAC3B,IAAMhH,EAAKiH,YAAKC,KAAKC,OACfC,EAAQJ,EAAII,MAAM,KAExB,MAAM,GAAN,OAAUpH,EAAV,YAAgBoH,EAAMA,EAAMtG,OAAS,KCoFvBuG,EAzEO,SAAC,GAKhB,IAJNxJ,EAIK,EAJLA,QACAC,EAGK,EAHLA,OACAwJ,EAEK,EAFLA,cACAvJ,EACK,EADLA,aAEMwJ,EAAmBlE,uBAAY,SAACmE,GACrCA,EAAMC,UAEN,IAAMC,EAAQF,EAAMG,cAAcD,MAClC,GAAIA,GAASA,EAAM5G,OAAQ,CAC1B,IAAM8G,EAAOF,EAAM,GAEbG,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,QAAQ,WAC/B,IAAMC,EAASH,EAAO9H,OAEtBuH,EAAc,WAAY,CACzBM,OACApG,KAAMuF,EAAmBa,EAAKpG,MAC9BwG,cAGFH,EAAOI,cAAcL,QAErBN,EAAc,WAAY,MAEzB,CAACA,IAEJ,OACC,oCACA,kBAACnG,EAAA,EAAD,CAAOC,IAAI,aAAX,aACA,kBAACd,EAAA,EAAD,CAAKC,UAAU,OAAO2H,MAAI,GACzB,kBAAC1H,EAAA,EAAD,CAAKC,GAAI,GAAI0H,GAAI,IAChB,kBAAC9G,EAAA,EAAD,CACCC,MAAOzD,EAAQuK,UAAYtK,EAAOsK,SAClC7G,KAAK,OACLC,KAAK,WACLxB,GAAG,WACHyB,SAAU8F,EACV5F,SAAU5D,IAETD,EAAOsK,WAAatK,EAAOsK,SAAS5G,MAAQ1D,EAAOsK,SAASR,OAC7D,kBAAC7F,EAAA,EAAD,CAAUlB,MAAM,UAAU/C,EAAOsK,SAAS5G,MAAQ1D,EAAOsK,SAASR,MAAQ9J,EAAOsK,SAASJ,SAG5F,kBAACxH,EAAA,EAAD,KACC,kBAACuB,EAAA,EAAD,2C,sDCLWsG,EAzCO,SAAC,GAAsC,IAApCpF,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,UAC3CvE,qBAAU,WACT0J,YAAW,WACNrF,GACHC,GAAU,KAET,OACD,CAACD,EAAQC,IAEZ,IAAMqF,EAAelF,uBAAY,kBAChC,kBAACmF,EAAA,EAAD,CAAOC,MAAO,CAAEC,SAAU,QAASC,OAAQ,MAAOC,MAAO,OAAS/H,MAAM,UAAUoC,OAAQA,GACzF,kBAAC4F,EAAA,EAAD,KAAa,kBAAC,IAAD,CAAiBC,KAAMC,UAASlI,MAAM,YAAnD,6BACA,kBAACmI,EAAA,EAAD,uDAEC,CAAC/F,IAEEgG,EAAa5F,uBAAY,kBAC9B,kBAACmF,EAAA,EAAD,CAAOC,MAAO,CAAEC,SAAU,QAASC,OAAQ,MAAOC,MAAO,OAAS/H,MAAM,UAAUoC,OAAQA,GACzF,kBAAC4F,EAAA,EAAD,KAAa,kBAAC,IAAD,CAAiBC,KAAMI,UAASrI,MAAM,YAAnD,0DACA,kBAACmI,EAAA,EAAD,8CAEC,CAAC/F,IAEJ,OAAOE,EAAY,kBAAC8F,EAAD,MAAiB,kBAACV,EAAD,O,2BCiJtBY,EAnJW,SAAC,GAUpB,IATHvL,EASE,EATFA,OACAC,EAQE,EARFA,QACAC,EAOE,EAPFA,OACAC,EAME,EANFA,aACAC,EAKE,EALFA,aACAC,EAIE,EAJFA,aACHd,EAGK,EAHLA,cACAe,EAEK,EAFLA,UACAE,EACK,EADLA,YACK,EAC2BC,mBAAS,IADpC,mBACEC,EADF,KACYC,EADZ,OAEiCF,oBAAS,GAF1C,mBAEEG,EAFF,KAEeC,EAFf,OAG6BJ,oBAAS,GAHtC,mBAGEK,EAHF,KAGaC,EAHb,KAaL,OARAC,qBAAU,WACTV,EAAUf,KACR,CAACe,EAAWf,IAEfyB,qBAAU,YACRb,GAAgBoH,YAAqB/G,EAAaG,EAAaI,EAAcF,KAC5E,CAACL,EAAaG,EAAaI,EAAcF,EAAgBV,IAExDW,EAEF,kBAAC0B,EAAA,EAAD,CAAWC,OAAK,GACf,kBAACC,EAAA,EAAD,CAAKC,UAAU,uEACd,kBAACC,EAAA,EAAD,CAAKC,GAAG,OAAOC,GAAG,QACjB,kBAAC,IAAD,CAAeC,KAAK,aAOrBnC,EAEF,kBAACoC,EAAA,EAAD,CAAOC,MAAM,SAASN,UAAU,QAAhC,0EAIGjC,EAASwC,OAOb,kBAACC,EAAA,EAAD,CAAMC,SAAUhD,EAAciD,YAAU,GACvC,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAOC,IAAI,WAAX,qBACA,kBAACC,EAAA,EAAD,CAAOC,MAAOzD,EAAQwH,UAAYvH,EAAOuH,QAAS9D,KAAK,SAASC,KAAK,UAAUxB,GAAG,UAAUyB,SAAUxD,EAAcyD,MAAO9D,EAAOyH,QAAS1D,SAAU5D,GACpJ,4BAAQ2D,MAAM,KACbpD,EAASsD,KAAI,SAAC/C,EAASgD,GAAV,OAAoB,4BAAQC,IAAKD,EAAOH,MAAO7C,EAAQmB,IAAKnB,EAAQmB,GAAhD,MAAuDnB,EAAQxB,iBAEjGS,EAAOuH,SAAW,kBAACtD,EAAA,EAAD,CAAUlB,MAAM,UAAU/C,EAAOuH,UAErD,kBAACnE,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAOC,IAAI,WAAX,sBACA,kBAACC,EAAA,EAAD,CAAOC,MAAOzD,EAAQwB,UAAYvB,EAAOuB,QAASkC,KAAK,OAAOC,KAAK,UAAUxB,GAAG,UAAUoJ,YAAY,oBAAoB3H,SAAUxD,EAAcyD,MAAO9D,EAAOyB,QAASsC,SAAU5D,IAClLD,EAAOuB,SAAW,kBAAC0C,EAAA,EAAD,CAAUlB,MAAM,UAAU/C,EAAOuB,UAErD,kBAAC6B,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAOC,IAAI,SAAX,UACA,kBAACiI,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAiBC,UAAU,UAAUhJ,UAAU,2BAC9C,kBAAC,IAAD,CAAiBuI,KAAMU,aAAY7I,KAAK,QAEzC,kBAACU,EAAA,EAAD,CAAOC,MAAOzD,EAAQ4L,QAAU3L,EAAO2L,MAAOlI,KAAK,SAASC,KAAK,QAAQxB,GAAG,QAAQyB,SAAUxD,EAAcyD,MAAO9D,EAAO6L,MAAO9H,SAAU5D,KAE3ID,EAAO2L,OAAS,kBAAC1H,EAAA,EAAD,CAAUlB,MAAM,UAAU/C,EAAO2L,QAEnD,kBAACvI,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAOC,IAAI,YAAX,UACA,kBAACC,EAAA,EAAD,CAAOC,MAAOzD,EAAQ6L,WAAa5L,EAAO4L,SAAUnI,KAAK,SAASC,KAAK,WAAWxB,GAAG,WAAWyB,SAAUxD,EAAcyD,MAAO9D,EAAO8L,SAAU/H,SAAU5D,IAC1J,kBAACgE,EAAA,EAAD,sEACCjE,EAAO4L,UAAY,kBAAC3H,EAAA,EAAD,CAAUlB,MAAM,UAAU/C,EAAO4L,WAEtD,kBAACxI,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAOC,IAAI,sBAAX,qBACA,kBAACC,EAAA,EAAD,CAAOC,MAAOzD,EAAQ8L,qBAAuB7L,EAAO6L,mBAAoBpI,KAAK,OAAOC,KAAK,qBAAqBxB,GAAG,qBAAqByB,SAAUxD,EAAcyD,MAAO9D,EAAO+L,mBAAoBhI,SAAU5D,IACzMD,EAAO6L,oBAAsB,kBAAC5H,EAAA,EAAD,CAAUlB,MAAM,UAAU/C,EAAO6L,qBAEhE,kBAACzI,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAOC,IAAI,eAAX,kBACA,kBAACC,EAAA,EAAD,CAAOC,MAAOzD,EAAQ+L,cAAgB9L,EAAO8L,YAAarI,KAAK,OAAOC,KAAK,cAAcxB,GAAG,cAAcyB,SAAUxD,EAAcyD,MAAO9D,EAAOgM,YAAajI,SAAU5D,IACvK,kBAACgE,EAAA,EAAD,yBACCjE,EAAO8L,aAAe,kBAAC7H,EAAA,EAAD,CAAUlB,MAAM,UAAU/C,EAAO8L,cAEzD,kBAAC1I,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAOC,IAAI,uBAAX,gCACA,kBAACiI,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAiBC,UAAU,UAAUhJ,UAAU,2BAC9C,kBAAC,IAAD,CAAiBuI,KAAMU,aAAY7I,KAAK,QAEzC,kBAACU,EAAA,EAAD,CAAOC,MAAOzD,EAAQgM,sBAAwB/L,EAAO+L,oBAAqBtI,KAAK,SAASC,KAAK,sBAAsBxB,GAAG,sBAAsByB,SAAUxD,EAAcyD,MAAO9D,EAAOiM,oBAAqBlI,SAAU5D,KAEjND,EAAO+L,qBAAuB,kBAAC9H,EAAA,EAAD,CAAUlB,MAAM,UAAU/C,EAAO+L,sBAEjE,kBAAC3I,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAOC,IAAI,uBAAX,8BACA,kBAACiI,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAiBC,UAAU,UAAUhJ,UAAU,2BAC9C,kBAAC,IAAD,CAAiBuI,KAAMU,aAAY7I,KAAK,QAEzC,kBAACU,EAAA,EAAD,CAAOC,MAAOzD,EAAQiM,sBAAwBhM,EAAOgM,oBAAqBvI,KAAK,SAASC,KAAK,sBAAsBxB,GAAG,sBAAsByB,SAAUxD,EAAcyD,MAAO9D,EAAOkM,oBAAqBnI,SAAU5D,KAEjND,EAAOgM,qBAAuB,kBAAC/H,EAAA,EAAD,CAAUlB,MAAM,UAAU/C,EAAOgM,sBAEjE,kBAAC,IAAD,CAAoBvI,KAAK,SAASI,SAAU5D,GAA5C,aAlEA,kBAAC6C,EAAA,EAAD,CAAOC,MAAM,OAAON,UAAU,QAA9B,kGCkDYwJ,EA5GW,SAAC,GAUpB,IATHnM,EASE,EATFA,OACAC,EAQE,EARFA,QACAC,EAOE,EAPFA,OACAC,EAME,EANFA,aACAC,EAKE,EALFA,aACAC,EAIE,EAJFA,aACHC,EAGK,EAHLA,UACAf,EAEK,EAFLA,cACAiB,EACK,EADLA,YACK,EAC2BC,mBAAS,IADpC,mBACEC,EADF,KACYC,EADZ,OAEiCF,oBAAS,GAF1C,mBAEEG,EAFF,KAEeC,EAFf,OAG6BJ,oBAAS,GAHtC,mBAGEK,EAHF,KAGaC,EAHb,KAaL,OARAC,qBAAU,WACTV,EAAUf,KACR,CAACe,EAAWf,IAEfyB,qBAAU,YACRb,GAAgBuH,YAAqBlH,EAAaG,EAAaI,EAAcF,KAC5E,CAACL,EAAaG,EAAaI,EAAcF,EAAgBV,IAExDW,EAEF,kBAAC0B,EAAA,EAAD,CAAWC,OAAK,GACf,kBAACC,EAAA,EAAD,CAAKC,UAAU,uEACd,kBAACC,EAAA,EAAD,CAAKC,GAAG,OAAOC,GAAG,QACjB,kBAAC,IAAD,CAAeC,KAAK,aAOrBnC,EAEF,kBAACoC,EAAA,EAAD,CAAOC,MAAM,SAASN,UAAU,QAAhC,0EAIGjC,EAASwC,OAOb,kBAACC,EAAA,EAAD,CAAMC,SAAUhD,EAAciD,YAAU,GACvC,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAOC,IAAI,WAAX,qBACA,kBAACC,EAAA,EAAD,CAAOC,MAAOzD,EAAQwH,UAAYvH,EAAOuH,QAAS9D,KAAK,SAASC,KAAK,UAAUxB,GAAG,UAAUyB,SAAUxD,EAAcyD,MAAO9D,EAAOyH,QAAS1D,SAAU5D,GACpJ,4BAAQ2D,MAAM,KACbpD,EAASsD,KAAI,SAAC/C,EAASgD,GAAV,OAAoB,4BAAQC,IAAKD,EAAOH,MAAO7C,EAAQmB,IAAKnB,EAAQmB,GAAhD,MAAuDnB,EAAQxB,iBAEjGS,EAAOuH,SAAW,kBAACtD,EAAA,EAAD,CAAUlB,MAAM,UAAU/C,EAAOuH,UAErD,kBAACnE,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAOC,IAAI,WAAX,WACA,kBAACC,EAAA,EAAD,CAAOC,MAAOzD,EAAQwB,UAAYvB,EAAOuB,QAASkC,KAAK,OAAOC,KAAK,UAAUxB,GAAG,UAAUoJ,YAAY,oBAAoB3H,SAAUxD,EAAcyD,MAAO9D,EAAOyB,QAASsC,SAAU5D,IAClLD,EAAOuB,SAAW,kBAAC0C,EAAA,EAAD,CAAUlB,MAAM,UAAU/C,EAAOuB,UAErD,kBAAC,IAAD,CAAoBkC,KAAK,SAASI,SAAU5D,GAA5C,gBAnBA,kBAAC6C,EAAA,EAAD,CAAOC,MAAM,OAAON,UAAU,QAA9B,kGC6FYyJ,EApIM,SAAC,GAYf,IAXNrD,EAWK,EAXLA,UACA/I,EAUK,EAVLA,OACAC,EASK,EATLA,QACAC,EAQK,EARLA,OACAC,EAOK,EAPLA,aACAC,EAMK,EANLA,aACAC,EAKK,EALLA,aACAqJ,EAIK,EAJLA,cACApJ,EAGK,EAHLA,UACAf,EAEK,EAFLA,cACAiB,EACK,EADLA,YAEAQ,qBAAU,WACTV,EAAUf,KACR,CAACe,EAAWf,IAHV,MAK2BkB,mBAAS,IALpC,mBAKEC,EALF,KAKYC,EALZ,OAMiCF,oBAAS,GAN1C,mBAMEG,EANF,KAMeC,EANf,OAO6BJ,oBAAS,GAPtC,mBAOEK,EAPF,KAOaC,EAPb,KAyBL,OAhBAC,qBAAU,WAIT,OAHAD,GAAa,GACbJ,EAAY,IAEJX,EAAOiB,SACd,KAAKyF,IACJQ,YAAkB1G,EAAaG,EAAaI,EAAcF,GAC1D,MACD,KAAK+F,IACJW,YAAqB/G,EAAaG,EAAaI,EAAcF,GAC7D,MACD,QACCE,GAAa,MAEb,CAACf,EAAOiB,QAAST,IAEhBM,EAEF,kBAAC0B,EAAA,EAAD,CAAWC,OAAK,GACf,kBAACC,EAAA,EAAD,CAAKC,UAAU,uEACd,kBAACC,EAAA,EAAD,CAAKC,GAAG,OAAOC,GAAG,QACjB,kBAAC,IAAD,CAAeC,KAAK,aAQxB,qCACGrC,EAASwC,QAAU,kBAACF,EAAA,EAAD,CAAOC,MAAM,OAAON,UAAU,QAA9B,iEACpB/B,GAAe,kBAACoC,EAAA,EAAD,CAAOC,MAAM,SAASN,UAAU,QAAhC,+DAChB,kBAACQ,EAAA,EAAD,CAAM6F,SAAUD,EAAW3F,SAAUhD,EAAciD,YAAU,GAC5D,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAOC,IAAI,WAAX,iDACA,kBAACC,EAAA,EAAD,CAAOC,MAAOzD,EAAQgB,UAAYf,EAAOe,QAAS0C,KAAK,SAASC,KAAK,UAAUxB,GAAG,UAAUyB,SAAUxD,EAAcyD,MAAO9D,EAAOiB,QAAS8C,SAAU5D,GACpJ,4BAAQ2D,MAAM,KACd,4BAAQA,MAAO4C,KAAOA,KACtB,4BAAQ5C,MAAO8C,KAAUA,MAEzB1G,EAAOe,SAAW,kBAACkD,EAAA,EAAD,CAAUlB,MAAM,UAAU/C,EAAOe,UAErD,kBAACqC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAOC,IAAI,MAAMxD,EAAOiB,SACxB,kBAACwC,EAAA,EAAD,CAAOC,MAAOzD,EAAQmC,KAAOlC,EAAOkC,GAAIuB,KAAK,SAASC,KAAK,KAAKxB,GAAG,KAAKyB,SAAUxD,EAAcyD,MAAO9D,EAAOoC,GAAI2B,SAAU5D,GAC3H,4BAAQ2D,MAAM,KACbpD,EAASsD,KAAI,SAAC/C,EAASgD,GAAV,OAAoB,4BAAQC,IAAKD,EAAOH,MAAO7C,EAAQmB,IAAKnB,EAAQmB,GAAhD,MAAuDnB,EAAQxB,iBAEjGS,EAAOkC,IAAM,kBAAC+B,EAAA,EAAD,CAAUlB,MAAM,UAAU/C,EAAOkC,KAEhD,kBAACkB,EAAA,EAAD,KACC,kBAAC,EAAD,CACCnD,aAAcA,EACduJ,cAAeA,EACf1J,OAAQA,EACRE,OAAQA,EACRG,aAAcA,EACdJ,QAASA,KAGX,kBAAC,IAAD,CAAoB0D,KAAK,SAASI,SAAU5D,GAA5C,gB,iCC7GJ,wDAaekM,IAVW,kBACzB,kBAAC,IAAD,CAAW5J,OAAK,GACf,kBAAC,IAAD,CAAKE,UAAU,uEACd,kBAAC,IAAD,CAAKE,GAAG,KAAKC,GAAG,MACf,kBAAC,IAAD,CAAUwJ,UAAQ,EAACxI,MAAM,MAAMnB,UAAU,6B,4LC4D9B4J,EAhDQ,SAAC,GAAD,IACnBvM,EADmB,EACnBA,OACAC,EAFmB,EAEnBA,QACAC,EAHmB,EAGnBA,OACAC,EAJmB,EAInBA,aACAC,EALmB,EAKnBA,aACAC,EANmB,EAMnBA,aANmB,OAQtB,kBAAC8C,EAAA,EAAD,CAAMC,SAAUhD,EAAciD,YAAU,GACvC,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAOC,IAAI,UAAX,eACA,kBAACC,EAAA,EAAD,CAAOC,MAAOzD,EAAQuM,SAAWtM,EAAOsM,OAAQ7I,KAAK,WAAWC,KAAK,SAASxB,GAAG,SAASyB,SAAUxD,EAAcyD,MAAO9D,EAAOwM,SAC/HtM,EAAOsM,QAAU,kBAACrI,EAAA,EAAD,CAAUlB,MAAM,UAAU/C,EAAOsM,QACnD,kBAACrI,EAAA,EAAD,oFAED,kBAAC,IAAD,CAAoBR,KAAK,SAASI,SAAU5D,GAA5C,c,SCwCamG,IA/DI,SAACmG,GAAD,OAClBrI,aAAQ,SAACC,GAAD,MAAY,CAAEC,KAAMC,IAASC,QAAQH,MAA7CD,EACC,YAAsC,IAAnB2B,EAAkB,EAAlCzB,KAAQK,KAAQoB,SAAkB,EACetF,mBAA0D,qBAAjDU,OAAOC,KAAKsL,gBAAgBC,YAAY/I,MADhE,mBAC9BgJ,EAD8B,KACVC,EADU,KAG/BzJ,EAAWqC,uBAAY,cAA+C,IAA5C+G,EAA2C,EAA3CA,OAAY9G,EAA+B,EAA/BA,cAAeoH,EAAgB,EAAhBA,UAC1DpH,GAAc,GAEd,IACC,IAAMqH,EAAW,IAAIC,IAAiB,CACrCC,SAAUT,EACVU,cAAe,+DAEfC,YAAY,IAGRJ,EAASK,eAAeC,SAAStH,EAASuH,gBAG9CnM,OAAOC,KAAKmM,YAAYR,GACxB5L,OAAOC,KAAKC,IAAImM,eAAiBzH,EACjC8G,GAAsB,IAJtBC,EAAU,CAAEN,OAAQ,6DAMpB,MAAMlK,GACPwK,EAAU,CAAEN,OAAQlK,EAAMmL,aAEzB,CAAC1H,EAAU8G,IAEd,OAAKD,EA+BG,kBAACH,EAAD,MA7BN,kBAACjK,EAAA,EAAD,CAAWC,OAAK,GACf,kBAACC,EAAA,EAAD,CAAKC,UAAU,kEACd,kBAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACf,2CACA,0FAGF,kBAACJ,EAAA,EAAD,CAAKC,UAAU,kEACd,kBAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACf,kBAAC,IAAD,CACCvD,cAAe,CAAEiN,OAAQ,GAAIvI,MAAO,GACpCvE,iBAAkBF,cAASG,MAAO,CACjCsE,MAAOrE,cACL8N,IAAI,EAAG,8CACPC,QAAQ,yCACR9N,SAAS,kCACX2M,OAAQ1M,cACND,SAAS,4BACT+N,QAAQ,eAAgB,mDAE3BxK,SAAUA,IAET,SAAA+C,GAAK,OAAI,kBAAC,EAAmBA,c","file":"static/js/9.6c975807.chunk.js","sourcesContent":["import { number, string, object } from 'yup';\n\nimport contracts from '../../../contracts';\nimport { PRODUCT } from '../../../shared/values';\n\nconst initialValues = {\n\tobject: '',\n\tdescription: ''\n};\n\nconst validationSchema = object().shape({\n\tobject: number().required('Specificare l\\'oggetto della certificazione'),\n\tdescription: string().required('La descrizione della certificazione è obbligatoria')\n});\n\nconst handleSubmit = ({ object, description }, handleFeedback, subject, senderAddress, currentForm) => {\n\tconst contractInstance = new window.web3.eth.Contract(contracts[subject].ABI, contracts[subject].address);\n\n\tconst element = currentForm === PRODUCT ? 'Product' : 'Production';\n\n\tcontractInstance.methods[`certify${element}`](object, description)\n\t\t.send({ from: senderAddress })\n\t\t.then((result) => {\n\t\t\thandleFeedback(false);\n\t\t})\n\t\t.catch((error) => {\n\t\t\thandleFeedback(true);\n\t\t});\n};\n\nconst handleFetching = (userAddress, setElements, fetchErrors, setFetchErrors, setIsLoading, element) => {\n\tsetIsLoading(true);\n\n\tconst contractInstance = new window.web3.eth.Contract(contracts[element].ABI, contracts[element].address);\n\tcontractInstance.methods.getTotal()\n\t\t.call({ from: userAddress })\n\t\t.then((total) => {\n\t\t\ttotal = parseInt(total);\n\t\t\tif (!total) {\n\t\t\t\tsetElements([]);\n\t\t\t\tsetIsLoading(false);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < total; i++) {\n\t\t\t\tif (!fetchErrors) {\n\t\t\t\t\tcontractInstance.methods.getById(i)\n\t\t\t\t\t\t.call({ from: userAddress })\n\t\t\t\t\t\t.then((result) => {\n\t\t\t\t\t\t\tsetElements((elements) => ([\n\t\t\t\t\t\t\t\t...elements, {\n\t\t\t\t\t\t\t\t...result,\n\t\t\t\t\t\t\t\tid: i\n\t\t\t\t\t\t\t}]));\n\n\t\t\t\t\t\t\tif (i === total - 1) {\n\t\t\t\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\t\t\tsetFetchErrors(true);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t.catch((error) => {\n\t\t\tsetIsLoading(false);\n\t\t\tsetFetchErrors(true);\n\t\t});\n}\n\nexport {\n\tinitialValues,\n\tvalidationSchema,\n\thandleSubmit,\n\thandleFetching\n}\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert, Col, Container, Form, FormGroup, FormText, Input, Label, Row } from 'reactstrap';\n\nimport { StyledFilledButton, StyledSpinner } from '../../../shared/styled';\n\nimport { handleFetching } from '../map';\n\n/**\n * Form for certifying products and production activities.\n *\n * @param values\n * @param touched\n * @param errors\n * @param isSubmitting\n * @param handleSubmit\n * @param handleChange\n * @param resetForm\n * @param initialValues\n * @param currentForm\n * @param userAddress\n * @returns {JSX.Element}\n * @constructor\n * @component\n */\nconst ProductActivitiesForm = ({\n\tvalues,\n\ttouched,\n\terrors,\n\tisSubmitting,\n\thandleSubmit,\n\thandleChange,\n\tresetForm,\n\tinitialValues,\n\tcurrentForm,\n\tuserAddress\n}) => {\n\tconst [elements, setElements] = useState([]);\n\tconst [fetchErrors, setFetchErrors] = useState(false);\n\tconst [isLoading, setIsLoading] = useState(true);\n\n\tuseEffect(() => {\n\t\tresetForm(initialValues);\n\t}, [resetForm, initialValues]);\n\n\tuseEffect(() => {\n\t\tsetElements([]);\n\t\thandleFetching(userAddress, setElements, fetchErrors, setFetchErrors, setIsLoading, currentForm);\n\t}, [currentForm, userAddress, setElements, fetchErrors, setFetchErrors, setIsLoading]);\n\n\tif (isLoading) {\n\t\treturn (\n\t\t\t<Container fluid>\n\t\t\t\t<Row className=\"my-3 justify-content-center align-content-center align-items-center\">\n\t\t\t\t\t<Col xl=\"auto\" sm=\"auto\">\n\t\t\t\t\t\t<StyledSpinner size=\"large\"/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t)\n\t}\n\n\tif (fetchErrors) {\n\t\treturn (\n\t\t\t<Alert color=\"danger\" className=\"my-3\">Si è verificato un errore nel caricamento degli elementi certificabili</Alert>\n\t\t);\n\t}\n\n\tif (!elements.length) {\n\t\treturn (\n\t\t\t<Alert color=\"info\" className=\"my-3\">Nessun elemento disponibile per la certificazione</Alert>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Form onSubmit={handleSubmit} noValidate>\n\t\t\t<FormGroup>\n\t\t\t\t<Label for=\"portion\">Oggetto della certificazione</Label>\n\t\t\t\t<Input valid={touched.object && !errors.object} type=\"select\" name=\"object\" id=\"object\" onChange={handleChange} value={values.object} disabled={isSubmitting}>\n\t\t\t\t\t<option value=\"\"/>\n\t\t\t\t\t{elements.map((element, index) => <option key={index} value={element.id}>{element.id} - {element.description}</option>)}\n\t\t\t\t</Input>\n\t\t\t\t{errors.object && <FormText color=\"danger\">{errors.object}</FormText>}\n\t\t\t</FormGroup>\n\t\t\t<FormGroup>\n\t\t\t\t<Label for=\"description\">Descrizione</Label>\n\t\t\t\t<Input valid={\n\t\t\t\t\ttouched.description && !errors.description} type=\"textarea\" name=\"description\" id=\"description\" onChange={handleChange} value={values.description} disabled={isSubmitting}/>\n\t\t\t\t{errors.description && <FormText color=\"danger\">{errors.description}</FormText>}\n\t\t\t</FormGroup>\n\t\t\t<StyledFilledButton type=\"submit\" disabled={isSubmitting}>\n\t\t\t\tCertifica\n\t\t\t</StyledFilledButton>\n\t\t</Form>\n\t);\n};\n\nProductActivitiesForm.propTypes = {\n\t/**\n\t * Form values\n\t */\n\tvalues: PropTypes.object,\n\t/**\n\t * Touched fields\n\t */\n\ttouched: PropTypes.object,\n\t/**\n\t * Errors in fields\n\t */\n\terrors: PropTypes.object,\n\t/**\n\t * Form submission\n\t */\n\tisSubmitting: PropTypes.bool,\n\t/**\n\t * Form submission handling\n\t */\n\thandleSubmit: PropTypes.func,\n\t/**\n\t * Field changes handling\n\t */\n\thandleChange: PropTypes.func,\n\t/**\n\t * Form values reset\n\t */\n\tresetForm: PropTypes.func,\n\t/**\n\t * Initial form values\n\t */\n\tinitialValues: PropTypes.object,\n\t/**\n\t * Current form, product or production activity\n\t */\n\tcurrentForm: PropTypes.string,\n\t/**\n\t * Current user Ethereum address\n\t */\n\tuserAddress: PropTypes.string\n};\n\nexport default ProductActivitiesForm;\n","import React, { useState, useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col } from 'reactstrap';\nimport { Formik } from 'formik';\n\nimport { CertifyForm } from '../components';\nimport { ToastFeedback } from '../../register/components';\nimport { ElementSelector } from '../../../shared/element-dropdown';\nimport TransactionLoader from '../../../shared/transaction-loader';\n\nimport { initialValues, validationSchema, handleSubmit } from '../map';\nimport { CERTIFIER, PROD_ACTIVITIES, PRODUCT, roles } from '../../../shared/values';\nimport { Selector } from '../../../store/user/reducer';\n\nimport { PROFILE } from '../../../config/routes';\n\n/**\n * Certify section for certifying elements.\n *\n * @param user\n * @returns {JSX.Element}\n * @constructor\n * @component\n */\nconst CertifyFormContainer = ({ user }) => {\n\tconst history = useHistory();\n\n\tuseEffect(() => {\n\t\tif(user.data) {\n\t\t\tconst { attributes } = user.data;\n\t\t\tif (attributes['custom:role'] !== roles.indexOf(CERTIFIER).toString()) {\n\t\t\t\thistory.push(PROFILE);\n\t\t\t}\n\t\t}\n\t}, [user, history]);\n\n\tconst [currentForm, setCurrentForm] = useState(PRODUCT);\n\n\tconst [isOpen, setIsOpen] = useState(false);\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [hasErrors, setHasErrors] = useState(false);\n\tconst onSubmit = useCallback((values, { setSubmitting, resetForm }) => {\n\t\tsetIsLoading(true);\n\n\t\tconst handleFeedback = (hasErrors) => {\n\t\t\tresetForm(initialValues);\n\t\t\tsetSubmitting(false);\n\n\t\t\tsetHasErrors(hasErrors);\n\t\t\tsetIsOpen(true);\n\t\t\tsetIsLoading(false);\n\t\t}\n\t\thandleSubmit(values, handleFeedback, currentForm, user.data.username, currentForm);\n\t}, [setHasErrors, setIsOpen, currentForm, user]);\n\n\treturn (\n\t\t<>\n\t\t\t<Container fluid>\n\t\t\t\t<Row className=\"justify-content-between align-items-center\">\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<h1>Certifica {currentForm}</h1>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xl={5} sm={12} className=\"justify-content-center\">\n\t\t\t\t\t\t<ElementSelector\n\t\t\t\t\t\t\telements={[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: PRODUCT\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: PROD_ACTIVITIES\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\tcurrentElement={currentForm}\n\t\t\t\t\t\t\tsetCurrentElement={setCurrentForm}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t{isLoading && <TransactionLoader />}\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xl={12} sm={12}>\n\t\t\t\t\t\t<Formik\n\t\t\t\t\t\t\tinitialValues={initialValues}\n\t\t\t\t\t\t\tvalidationSchema={validationSchema}\n\t\t\t\t\t\t\tonSubmit={onSubmit}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{props => <CertifyForm\n\t\t\t\t\t\t\t\tcurrentForm={currentForm}\n\t\t\t\t\t\t\t\tuserAddress={user.data.username}\n\t\t\t\t\t\t\t\t{...props}/>}\n\t\t\t\t\t\t</Formik>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t\t<ToastFeedback isOpen={isOpen} setIsOpen={setIsOpen} hasErrors={hasErrors} />\n\t\t</>\n\t);\n};\n\nCertifyFormContainer.propTypes = {\n\t/**\n\t * Logged in user\n\t */\n\tuser: PropTypes.object\n}\n\nconst mapStateToProps = (state) => ({\n\tuser: Selector.getUser(state)\n});\n\nexport default connect(mapStateToProps)(CertifyFormContainer);\n","import CertifyFormContainer from './containers';\nimport { CERTIFY } from '../../config/routes';\n\nimport withAuthentication from '../../shared/auth';\nimport withWallet from '../../shared/wallet';\n\nconst Certify = withWallet(CertifyFormContainer);\n\nexport default withAuthentication(Certify, CERTIFY);\n","import { abi as Land } from './Land.json';\nimport { abi as Portion } from './Portion.json';\nimport { abi as Product } from './Product.json';\nimport { abi as Maintenance } from './Maintenance.json';\nimport { abi as ProductionActivity } from './ProductionActivity.json';\n\nimport {\n\tLAND,\n\tPORTION,\n\tPRODUCT,\n\tPROD_ACTIVITIES,\n\tMAINTENANCE_ACTIVITIES\n} from '../shared/values';\n\nconst contracts = {\n\t[LAND]: {\n\t\tABI: Land,\n\t\taddress: '0x1F1dD176d02f3eC0a5A444ae2d808C5c4969D5c2'\n\t},\n\t[PORTION]: {\n\t\tABI: Portion,\n\t\taddress: '0x0f7F02290EE5Dc190C53Fb69e99Dd2E051fcB492'\n\t},\n\t[PRODUCT]: {\n\t\tABI: Product,\n\t\taddress: '0xd597f7187ED5Cef012B001288ce44640812f8a6D'\n\t},\n\t[MAINTENANCE_ACTIVITIES]: {\n\t\tABI: Maintenance,\n\t\taddress: '0x98C2b634A061F09616ED69051cFCf6d4459Cadf5'\n\t},\n\t[PROD_ACTIVITIES]: {\n\t\tABI: ProductionActivity,\n\t\taddress: '0x3C88235AEad3D15fAcaBb0Fd630fb530396bF97b'\n\t}\n};\n\nexport default contracts;\n","import contracts from '../../contracts';\nimport { LAND, PORTION } from '../values';\n\nconst fetchLandsByOwner = (userAddress, setElements, setIsLoading, setFetchErrors) => {\n\tsetIsLoading(true);\n\n\tconst landInstance = new window.web3.eth.Contract(contracts[LAND].ABI, contracts[LAND].address);\n\tlandInstance.methods.getByOwner(userAddress)\n\t\t.call({ from: userAddress })\n\t\t.then((lands) => {\n\t\t\tif (!lands.length) {\n\t\t\t\tsetElements([]);\n\t\t\t\tsetIsLoading(false);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlands.forEach((id, index) => {\n\t\t\t\tlandInstance.methods.getById(id)\n\t\t\t\t\t.call({ from: userAddress })\n\t\t\t\t\t.then((result) => {\n\t\t\t\t\t\tsetElements((elements) => ([\n\t\t\t\t\t\t\t...elements, {\n\t\t\t\t\t\t\t\t...result,\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t}]));\n\n\t\t\t\t\t\tif (index === lands.length - 1) {\n\t\t\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tsetFetchErrors(true);\n\t\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\t});\n\t\t\t});\n\t\t})\n\t\t.catch((error) => {\n\t\t\tsetFetchErrors(true);\n\t\t\tsetIsLoading(false);\n\t\t});\n};\n\nconst fetchPortionsByOwner = (userAddress, setElements, setIsLoading, setFetchErrors) => {\n\tsetIsLoading(true);\n\n\tconst portionInstance = new window.web3.eth.Contract(contracts[PORTION].ABI, contracts[PORTION].address);\n\tportionInstance.methods.getByOwner(userAddress)\n\t\t.call({ from: userAddress })\n\t\t.then((result) => {\n\t\t\tif (!result.length) {\n\t\t\t\tsetElements([]);\n\t\t\t\tsetIsLoading(false);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresult.forEach((id, index) => {\n\t\t\t\tportionInstance.methods.getById(id)\n\t\t\t\t\t.call({ from: userAddress })\n\t\t\t\t\t.then((portion) => {\n\t\t\t\t\t\tsetElements((elements) => ([\n\t\t\t\t\t\t\t...elements, {\n\t\t\t\t\t\t\t\t...portion[0],\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t}]));\n\n\t\t\t\t\t\tif (index === result.length - 1) {\n\t\t\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tsetFetchErrors(true);\n\t\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\t});\n\t\t\t});\n\t\t})\n\t\t.catch((error) => {\n\t\t\tsetIsLoading(false);\n\t\t\tsetFetchErrors(true);\n\t\t});\n}\n\nconst fetchPortionsByBuyer = (userAddress, setElements, setIsLoading, setFetchErrors) => {\n\tsetIsLoading(true);\n\n\tconst portionInstance = new window.web3.eth.Contract(contracts[PORTION].ABI, contracts[PORTION].address);\n\tportionInstance.methods.getByBuyer(userAddress)\n\t\t.call({ from: userAddress })\n\t\t.then((result) => {\n\t\t\tif (!result.length) {\n\t\t\t\tsetElements([]);\n\t\t\t\tsetIsLoading(false);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresult.forEach((id, index) => {\n\t\t\t\tportionInstance.methods.getById(id)\n\t\t\t\t\t.call({ from: userAddress })\n\t\t\t\t\t.then((portion) => {\n\t\t\t\t\t\tif (portion[1].buyer === userAddress) {\n\t\t\t\t\t\t\tsetElements((elements) => ([\n\t\t\t\t\t\t\t\t...elements, {\n\t\t\t\t\t\t\t\t\t...portion[0],\n\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t}]));\n\n\t\t\t\t\t\t\tif (index === result.length - 1) {\n\t\t\t\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tsetFetchErrors(true);\n\t\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\t});\n\t\t\t});\n\t\t})\n\t\t.catch((error) => {\n\t\t\tsetIsLoading(false);\n\t\t\tsetFetchErrors(true);\n\t\t});\n}\n\nexport {\n\tfetchLandsByOwner,\n\tfetchPortionsByOwner,\n\tfetchPortionsByBuyer\n}\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport { Col, Container, Row, Alert } from 'reactstrap';\nimport { StyledSpinner } from '../styled';\n\nimport { SIGNIN } from '../../config/routes';\n\nimport { requestUser } from '../../store/user/action';\nimport { Selector } from '../../store/user/reducer';\n\nconst withAuthentication = (AuthComponent, from) =>\n    connect((state) => ({ user: Selector.getUser(state) }), { requestUser })(\n        ({ requestUser, user: { data, isLoading, isError }}) => {\n            useEffect(() => {\n                if (!data) {\n                    requestUser();\n                }\n            }, [requestUser, data]);\n\n            if (isLoading) {\n                return (\n                    <Container fluid>\n                        <Row className=\"my-3 justify-content-center align-content-center align-items-center\">\n                            <Col xl=\"auto\" sm=\"auto\">\n                                <StyledSpinner size=\"large\"/>\n                            </Col>\n                        </Row>\n                    </Container>\n                )\n            }\n\n            if (isError) {\n                return (\n                    <Container fluid>\n                        <Row className=\"justify-content-center align-content-center align-items-center\">\n                            <Col xl={12} sm={12}>\n                                <Alert color=\"danger\" className=\"my-3\">Si è verificato un errore nel caricamento dell'account</Alert>\n                            </Col>\n                        </Row>\n                    </Container>\n                )\n            }\n\n            if (data) {\n                return <AuthComponent />;\n            } else {\n                return <Redirect to={{\n                    pathname: SIGNIN,\n                    state: { from }\n                }} />\n            }\n        });\n\nexport default withAuthentication;\n","import React, { useState, useCallback, useMemo } from 'react';\n\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nconst ElementSelector = ({ elements, currentElement, setCurrentElement }) => {\n\tconst [isOpen, setIsOpen] = useState(false);\n\n\tconst toggle = useCallback(() => setIsOpen((isOpen) => !isOpen), [setIsOpen]);\n\tconst onClick = useCallback((value) => () => {\n\t\tsetCurrentElement(value);\n\t}, [setCurrentElement]);\n\n\tconst choices = useMemo(() => {\n\t\treturn elements.map((value, index) =>\n\t\t\t<DropdownItem disabled={value.disabled} onClick={onClick(value.type)} key={index}>{value.type}</DropdownItem>\n\t\t)\n\t}, [onClick, elements]);\n\n\treturn (\n\t\t<Dropdown\n\t\t\tisOpen={isOpen}\n\t\t\ttoggle={toggle}\n\t\t>\n\t\t\t<DropdownToggle caret block>\n\t\t\t\t{currentElement}\n\t\t\t</DropdownToggle>\n\t\t\t<DropdownMenu>\n\t\t\t\t{choices}\n\t\t\t</DropdownMenu>\n\t\t</Dropdown>\n\t)\n};\n\nexport default ElementSelector;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, FormGroup, FormText, Input, Label } from 'reactstrap';\n\nimport { StyledFilledButton } from '../../../shared/styled';\n\n/**\n * Land registration form.\n *\n * @param reference\n * @param values\n * @param touched\n * @param errors\n * @param isSubmitting\n * @param handleSubmit\n * @param handleChange\n * @param resetForm\n * @param initialValues\n * @returns {JSX.Element}\n * @constructor\n * @component\n */\nconst LandForm = ({\n\treference,\n\tvalues,\n\ttouched,\n\terrors,\n\tisSubmitting,\n\thandleSubmit,\n\thandleChange,\n\tresetForm,\n\tinitialValues\n}) => {\n\tuseEffect(() => {\n\t\tresetForm(initialValues);\n\t}, [resetForm, initialValues]);\n\n\treturn (\n\t\t<Form innerRef={reference} onSubmit={handleSubmit} noValidate>\n\t\t\t<FormGroup>\n\t\t\t\t<Label for=\"description\">Descrizione</Label>\n\t\t\t\t<Input valid={touched.description && !errors.description} type=\"textarea\" name=\"description\" id=\"description\" onChange={handleChange} value={values.description}/>\n\t\t\t\t{errors.description && <FormText color=\"danger\">{errors.description}</FormText>}\n\t\t\t</FormGroup>\n\t\t\t<StyledFilledButton type=\"submit\" disabled={isSubmitting}>\n\t\t\t\tAggiungi\n\t\t\t</StyledFilledButton>\n\t\t</Form>\n\t);\n}\n\nLandForm.propTypes = {\n\t/**\n\t * Form reference\n\t */\n\treference: PropTypes.object,\n\t/**\n\t * Form values\n\t */\n\tvalues: PropTypes.object,\n\t/**\n\t * Touched fields\n\t */\n\ttouched: PropTypes.object,\n\t/**\n\t * Errors in fields\n\t */\n\terrors: PropTypes.object,\n\t/**\n\t * Form submission\n\t */\n\tisSubmitting: PropTypes.bool,\n\t/**\n\t * Form submission handling\n\t */\n\thandleSubmit: PropTypes.func,\n\t/**\n\t * Field changes handling\n\t */\n\thandleChange: PropTypes.func,\n\t/**\n\t * Form values reset\n\t */\n\tresetForm: PropTypes.func,\n\t/**\n\t * Initial form values\n\t */\n\tinitialValues: PropTypes.object,\n}\n\nexport default LandForm;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, FormGroup, FormText, Input, Label, Alert, Container, Row, Col } from 'reactstrap';\n\nimport { StyledFilledButton, StyledSpinner } from '../../../shared/styled';\n\nimport { fetchLandsByOwner } from '../../../shared/utils';\n\n/**\n * Portion registration form.\n *\n * @param reference\n * @param values\n * @param touched\n * @param errors\n * @param isSubmitting\n * @param handleSubmit\n * @param handleChange\n * @param resetForm\n * @param initialValues\n * @param userAddress\n * @returns {JSX.Element}\n * @constructor\n * @component\n */\nconst PortionForm = ({\n\treference,\n    values,\n    touched,\n    errors,\n    isSubmitting,\n    handleSubmit,\n    handleChange,\n\tresetForm,\n\tinitialValues,\n\tuserAddress\n}) => {\n\tuseEffect(() => {\n\t\tresetForm(initialValues);\n\t}, [resetForm, initialValues]);\n\n\tconst [elements, setElements] = useState([]);\n\tconst [fetchErrors, setFetchErrors] = useState(false);\n\tconst [isLoading, setIsLoading] = useState(true);\n\n\tuseEffect(() => {\n\t\tfetchLandsByOwner(userAddress, setElements, setIsLoading, setFetchErrors);\n\t}, [userAddress]);\n\n\tif (isLoading) {\n\t\treturn (\n\t\t\t<Container fluid>\n\t\t\t\t<Row className=\"my-3 justify-content-center align-content-center align-items-center\">\n\t\t\t\t\t<Col xl=\"auto\" sm=\"auto\">\n\t\t\t\t\t\t<StyledSpinner size=\"large\"/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t)\n\t}\n\n\tif (fetchErrors) {\n\t\treturn (\n\t\t\t<Alert color=\"danger\" className=\"my-3\">Si è verificato un errore nel caricamento dei terreni</Alert>\n\t\t);\n\t}\n\n\tif (!elements.length) {\n\t\treturn (\n\t\t\t<Alert color=\"info\" className=\"my-3\">Nessun terreno disponibile per la suddivisione</Alert>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Form innerRef={reference} onSubmit={handleSubmit} noValidate>\n\t\t\t<FormGroup>\n\t\t\t\t<Label for=\"land\">Terreno da dividere</Label>\n\t\t\t\t<Input valid={touched.land && !errors.land} type=\"select\" name=\"land\" id=\"land\" onChange={handleChange} value={values.land} disabled={isSubmitting}>\n\t\t\t\t\t<option value=\"\" />\n\t\t\t\t\t{elements.map((element, index) => <option key={index} value={element.id}>{element.id} - {element.description}</option>)}\n\t\t\t\t</Input>\n\t\t\t\t{errors.land && <FormText color=\"danger\">{errors.land}</FormText>}\n\t\t\t</FormGroup>\n\t\t\t<FormGroup>\n\t\t\t\t<Label for=\"description\">Descrizione</Label>\n\t\t\t\t<Input valid={touched.description && !errors.description} type=\"textarea\" name=\"description\" id=\"description\" onChange={handleChange} value={values.description}/>\n\t\t\t\t{errors.description && <FormText color=\"danger\">{errors.description}</FormText>}\n\t\t\t</FormGroup>\n\t\t\t<StyledFilledButton type=\"submit\" disabled={isSubmitting}>\n\t\t\t\tAggiungi\n\t\t\t</StyledFilledButton>\n\t\t</Form>\n\t);\n};\n\nPortionForm.propTypes = {\n\t/**\n\t * Form reference\n\t */\n\treference: PropTypes.object,\n\t/**\n\t * Form values\n\t */\n\tvalues: PropTypes.object,\n\t/**\n\t * Touched fields\n\t */\n\ttouched: PropTypes.object,\n\t/**\n\t * Errors in fields\n\t */\n\terrors: PropTypes.object,\n\t/**\n\t * Form submission\n\t */\n\tisSubmitting: PropTypes.bool,\n\t/**\n\t * Form submission handling\n\t */\n\thandleSubmit: PropTypes.func,\n\t/**\n\t * Field changes handling\n\t */\n\thandleChange: PropTypes.func,\n\t/**\n\t * Form values reset\n\t */\n\tresetForm: PropTypes.func,\n\t/**\n\t * Initial form values\n\t */\n\tinitialValues: PropTypes.object,\n};\n\nexport default PortionForm;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, FormGroup, FormText, Input, Label, Alert, Container, Row, Col } from 'reactstrap';\n\nimport { StyledFilledButton, StyledSpinner } from '../../../shared/styled';\n\nimport contracts from '../../../contracts';\nimport { PORTION } from '../../../shared/values';\n\n/**\n * Product, production activities and maintenance activities registration form.\n *\n * @param values\n * @param touched\n * @param errors\n * @param isSubmitting\n * @param handleSubmit\n * @param handleChange\n * @param resetForm\n * @param initialValues\n * @param userAddress\n * @returns {JSX.Element}\n * @constructor\n * @component\n */\nconst ProductActivitiesForm = ({\n    values,\n    touched,\n    errors,\n    isSubmitting,\n    handleSubmit,\n    handleChange,\n\tresetForm,\n\tinitialValues,\n\tuserAddress\n}) => {\n\tconst [elements, setElements] = useState([]);\n\tconst [fetchErrors, setFetchErrors] = useState(false);\n\tconst [isLoading, setIsLoading] = useState(true);\n\n\tuseEffect(() => {\n\t\tresetForm(initialValues);\n\t}, [resetForm, initialValues]);\n\n\tuseEffect(() => {\n\t\tconst portionInstance = new window.web3.eth.Contract(contracts[PORTION].ABI, contracts[PORTION].address);\n\t\tportionInstance.methods.getTotal()\n\t\t\t.call({ from : userAddress })\n\t\t\t.then((total) => {\n\t\t\t\ttotal = parseInt(total);\n\t\t\t\tif (!total) {\n\t\t\t\t\tsetElements([]);\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0; i < total; i++) {\n\t\t\t\t\tportionInstance.methods.getById(i)\n\t\t\t\t\t\t.call({ from: userAddress })\n\t\t\t\t\t\t.then((result) => {\n\t\t\t\t\t\t\tsetElements((elements) => ([\n\t\t\t\t\t\t\t\t...elements, {\n\t\t\t\t\t\t\t\t...result,\n\t\t\t\t\t\t\t\tid: i\n\t\t\t\t\t\t\t}]));\n\n\t\t\t\t\t\t\tif (i === total - 1) {\n\t\t\t\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t\tsetFetchErrors(true);\n\t\t\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tsetFetchErrors(true);\n\t\t\t\tsetIsLoading(false);\n\t\t\t});\n\t}, [userAddress]);\n\n\tif (isLoading) {\n\t\treturn (\n\t\t\t<Container fluid>\n\t\t\t\t<Row className=\"my-3 justify-content-center align-content-center align-items-center\">\n\t\t\t\t\t<Col xl=\"auto\" sm=\"auto\">\n\t\t\t\t\t\t<StyledSpinner size=\"large\"/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t)\n\t}\n\n\tif (fetchErrors) {\n\t\treturn (\n\t\t\t<Alert color=\"danger\" className=\"my-3\">Si è verificato un errore nel caricamento delle porzioni</Alert>\n\t\t);\n\t}\n\n\tif (!elements.length) {\n\t\treturn (\n\t\t\t<Alert color=\"info\" className=\"my-3\">Nessuna porzione di terreno disponibile per registrare l'elemento</Alert>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Form onSubmit={handleSubmit} noValidate>\n\t\t\t<FormGroup>\n\t\t\t\t<Label for=\"portion\">Porzione relativa all'oggetto della registrazione</Label>\n\t\t\t\t<Input valid={touched.portion && !errors.portion} type=\"select\" name=\"portion\" id=\"portion\" onChange={handleChange} value={values.portion} disabled={isSubmitting}>\n\t\t\t\t\t<option value=\"\" />\n\t\t\t\t\t{elements.map((element, index) => <option key={index} value={element.id}>{element.id} - {element[0].description}</option>)}\n\t\t\t\t</Input>\n\t\t\t\t{errors.portion && <FormText color=\"danger\">{errors.portion}</FormText>}\n\t\t\t</FormGroup>\n\t\t\t<FormGroup>\n\t\t\t\t<Label for=\"description\">Descrizione</Label>\n\t\t\t\t<Input valid={\n\t\t\t\t\ttouched.description && !errors.description} type=\"textarea\" name=\"description\" id=\"description\" onChange={handleChange} value={values.description} disabled={isSubmitting}/>\n\t\t\t\t{errors.description && <FormText color=\"danger\">{errors.description}</FormText>}\n\t\t\t</FormGroup>\n\t\t\t<StyledFilledButton type=\"submit\" disabled={isSubmitting}>\n\t\t\t\tAggiungi\n\t\t\t</StyledFilledButton>\n\t\t</Form>\n\t);\n};\n\nProductActivitiesForm.propTypes = {\n\t/**\n\t * Form values\n\t */\n\tvalues: PropTypes.object,\n\t/**\n\t * Touched fields\n\t */\n\ttouched: PropTypes.object,\n\t/**\n\t * Errors in fields\n\t */\n\terrors: PropTypes.object,\n\t/**\n\t * Form submission\n\t */\n\tisSubmitting: PropTypes.bool,\n\t/**\n\t * Form submission handling\n\t */\n\thandleSubmit: PropTypes.func,\n\t/**\n\t * Field changes handling\n\t */\n\thandleChange: PropTypes.func,\n\t/**\n\t * Form values reset\n\t */\n\tresetForm: PropTypes.func,\n\t/**\n\t * Initial form values\n\t */\n\tinitialValues: PropTypes.object,\n\t/**\n\t * Current user's Ethereum address\n\t */\n\tuserAddress: PropTypes.string\n};\n\nexport default ProductActivitiesForm;\n","import { ulid } from 'ulid';\n\nconst createDocumentName = (old) => {\n\tconst id = ulid(Date.now());\n\tconst split = old.split('.');\n\n\treturn `${id}.${split[split.length - 1]}`;\n}\n\nexport default createDocumentName;\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormText, Input, Row, Col, Label } from 'reactstrap';\n\nimport createDocumentName from '../utils';\n\n/**\n * Custom field for handling document upload.\n *\n * @param touched\n * @param errors\n * @param setFieldValue\n * @param isSubmitting\n * @returns {JSX.Element}\n * @constructor\n * @component\n */\nconst DocumentField = ({\n\ttouched,\n\terrors,\n\tsetFieldValue,\n\tisSubmitting\n}) => {\n\tconst handleFileChange = useCallback((event) => {\n\t\tevent.persist();\n\n\t\tconst files = event.currentTarget.files;\n\t\tif (files && files.length) {\n\t\t\tconst file = files[0];\n\n\t\t\tconst reader = new FileReader();\n\t\t\treader.addEventListener('load', () => {\n\t\t\t\tconst base64 = reader.result;\n\n\t\t\t\tsetFieldValue('document', {\n\t\t\t\t\tfile,\n\t\t\t\t\tname: createDocumentName(file.name),\n\t\t\t\t\tbase64\n\t\t\t\t});\n\t\t\t});\n\t\t\treader.readAsDataURL(file);\n\t\t} else {\n\t\t\tsetFieldValue('document', {});\n\t\t}\n\t}, [setFieldValue]);\n\n\treturn (\n\t\t<>\n\t\t<Label for=\"documents\">Documenti</Label>\n\t\t<Row className=\"my-3\" form>\n\t\t\t<Col xl={12} xs={12}>\n\t\t\t\t<Input\n\t\t\t\t\tvalid={touched.document && errors.document}\n\t\t\t\t\ttype=\"file\"\n\t\t\t\t\tname=\"document\"\n\t\t\t\t\tid=\"document\"\n\t\t\t\t\tonChange={handleFileChange}\n\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t/>\n\t\t\t\t{(errors.document && (errors.document.name || errors.document.file)) && (\n\t\t\t\t\t<FormText color=\"danger\">{errors.document.name || errors.document.file || errors.document.base64}</FormText>\n\t\t\t\t)}\n\t\t\t</Col>\n\t\t\t<Col>\n\t\t\t\t<FormText>Il documento è obbligatorio</FormText>\n\t\t\t</Col>\n\t\t</Row>\n\t\t</>\n\t);\n};\n\nDocumentField.propTypes = {\n\t/**\n\t * Touched fields\n\t */\n\ttouched: PropTypes.object,\n\t/**\n\t * Errors in fields\n\t */\n\terrors: PropTypes.object,\n\t/**\n\t * Field changes handling\n\t */\n\tsetFieldValue: PropTypes.func,\n\t/**\n\t * Form submission flag\n\t */\n\tisSubmitting: PropTypes.bool\n};\n\nexport default DocumentField;\n","import React, { useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Toast, ToastBody, ToastHeader } from 'reactstrap';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons/faCheck';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons/faTimes';\n\n/**\n * Toast feedback for registration process.\n *\n * @param isOpen\n * @param setIsOpen\n * @param hasErrors\n * @returns {JSX.Element}\n * @constructor\n * @component\n */\nconst ToastFeedback = ({ isOpen, setIsOpen, hasErrors }) => {\n\tuseEffect(() => {\n\t\tsetTimeout(() => {\n\t\t\tif (isOpen) {\n\t\t\t\tsetIsOpen(false);\n\t\t\t}\n\t\t}, 5000);\n\t}, [isOpen, setIsOpen]);\n\n\tconst ToastSuccess = useCallback(() => (\n\t\t<Toast style={{ position: 'fixed', bottom: '10%', right: '10%' }} color=\"primary\" isOpen={isOpen}>\n\t\t\t<ToastHeader><FontAwesomeIcon icon={faCheck} color=\"#006D77\"/> Registrazione completata</ToastHeader>\n\t\t\t<ToastBody>L'elemento è stato aggiunto con successo</ToastBody>\n\t\t</Toast>\n\t), [isOpen]);\n\n\tconst ToastError = useCallback(() => (\n\t\t<Toast style={{ position: 'fixed', bottom: '10%', right: '10%' }} color=\"primary\" isOpen={isOpen}>\n\t\t\t<ToastHeader><FontAwesomeIcon icon={faTimes} color=\"#D9534F\"/> Si è verificato un errore durante la registrazione</ToastHeader>\n\t\t\t<ToastBody>L'elemento non è stato aggiunto</ToastBody>\n\t\t</Toast>\n\t), [isOpen]);\n\n\treturn hasErrors ? <ToastError /> : <ToastSuccess />;\n};\n\nToastFeedback.propTypes = {\n\t/**\n\t * Is toast open?\n\t */\n\tisOpen: PropTypes.bool,\n\t/**\n\t * Change open status\n\t */\n\tsetIsOpen: PropTypes.func,\n\t/**\n\t * Severity feedback\n\t */\n\thasErrors: PropTypes.bool\n};\n\nexport default ToastFeedback;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n\tForm,\n\tFormGroup,\n\tFormText,\n\tInput,\n\tLabel,\n\tInputGroup,\n\tInputGroupAddon,\n\tContainer,\n\tRow,\n\tCol,\n\tAlert\n} from 'reactstrap';\n\nimport { faEuroSign } from '@fortawesome/free-solid-svg-icons/faEuroSign';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { StyledFilledButton, StyledSpinner } from '../../../shared/styled';\n\nimport { fetchPortionsByOwner } from '../../../shared/utils';\n\n/**\n * Form for registering portion contract terms.\n *\n * @param values\n * @param touched\n * @param errors\n * @param isSubmitting\n * @param handleSubmit\n * @param handleChange\n * @param initialValues\n * @param resetForm\n * @param userAddress\n * @returns {JSX.Element}\n * @constructor\n * @component\n */\nconst ContractTermsForm = ({\n    values,\n    touched,\n    errors,\n    isSubmitting,\n    handleSubmit,\n    handleChange,\n\tinitialValues,\n\tresetForm,\n\tuserAddress\n}) => {\n\tconst [elements, setElements] = useState([]);\n\tconst [fetchErrors, setFetchErrors] = useState(false);\n\tconst [isLoading, setIsLoading] = useState(true);\n\n\tuseEffect(() => {\n\t\tresetForm(initialValues);\n\t}, [resetForm, initialValues]);\n\n\tuseEffect(() => {\n\t\t!isSubmitting && fetchPortionsByOwner(userAddress, setElements, setIsLoading, setFetchErrors);\n\t}, [userAddress, setElements, setIsLoading, setFetchErrors, isSubmitting]);\n\n\tif (isLoading) {\n\t\treturn (\n\t\t\t<Container fluid>\n\t\t\t\t<Row className=\"my-3 justify-content-center align-content-center align-items-center\">\n\t\t\t\t\t<Col xl=\"auto\" sm=\"auto\">\n\t\t\t\t\t\t<StyledSpinner size=\"large\"/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t)\n\t}\n\n\tif (fetchErrors) {\n\t\treturn (\n\t\t\t<Alert color=\"danger\" className=\"my-3\">Si è verificato un errore nel caricamento delle porzioni di terreno</Alert>\n\t\t);\n\t}\n\n\tif (!elements.length) {\n\t\treturn (\n\t\t\t<Alert color=\"info\" className=\"my-3\">Nessuna porzione di terreno disponibile per il trasferimento di proprietà o per la vendita</Alert>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Form onSubmit={handleSubmit} noValidate>\n\t\t\t<FormGroup>\n\t\t\t\t<Label for=\"portion\">Porzione relativa</Label>\n\t\t\t\t<Input valid={touched.portion && !errors.portion} type=\"select\" name=\"portion\" id=\"portion\" onChange={handleChange} value={values.portion} disabled={isSubmitting}>\n\t\t\t\t\t<option value=\"\" />\n\t\t\t\t\t{elements.map((element, index) => <option key={index} value={element.id}>{element.id} - {element.description}</option>)}\n\t\t\t\t</Input>\n\t\t\t\t{errors.portion && <FormText color=\"danger\">{errors.portion}</FormText>}\n\t\t\t</FormGroup>\n\t\t\t<FormGroup>\n\t\t\t\t<Label for=\"address\">Address acquirente</Label>\n\t\t\t\t<Input valid={touched.address && !errors.address} type=\"text\" name=\"address\" id=\"address\" placeholder=\"0xa1b2c3d4e5f6...\" onChange={handleChange} value={values.address} disabled={isSubmitting}/>\n\t\t\t\t{errors.address && <FormText color=\"danger\">{errors.address}</FormText>}\n\t\t\t</FormGroup>\n\t\t\t<FormGroup>\n\t\t\t\t<Label for=\"price\">Prezzo</Label>\n\t\t\t\t<InputGroup>\n\t\t\t\t\t<InputGroupAddon addonType=\"prepend\" className=\"align-items-center mx-3\">\n\t\t\t\t\t\t<FontAwesomeIcon icon={faEuroSign} size=\"lg\"/>\n\t\t\t\t\t</InputGroupAddon>\n\t\t\t\t\t<Input valid={touched.price && !errors.price} type=\"number\" name=\"price\" id=\"price\" onChange={handleChange} value={values.price} disabled={isSubmitting}/>\n\t\t\t\t</InputGroup>\n\t\t\t\t{errors.price && <FormText color=\"danger\">{errors.price}</FormText>}\n\t\t\t</FormGroup>\n\t\t\t<FormGroup>\n\t\t\t\t<Label for=\"duration\">Durata</Label>\n\t\t\t\t<Input valid={touched.duration && !errors.duration} type=\"number\" name=\"duration\" id=\"duration\" onChange={handleChange} value={values.duration} disabled={isSubmitting}/>\n\t\t\t\t<FormText>Inserire 0 se perpetuo, altrimenti indicare il numero di anni</FormText>\n\t\t\t\t{errors.duration && <FormText color=\"danger\">{errors.duration}</FormText>}\n\t\t\t</FormGroup>\n\t\t\t<FormGroup>\n\t\t\t\t<Label for=\"expectedProduction\">Produzione attesa</Label>\n\t\t\t\t<Input valid={touched.expectedProduction && !errors.expectedProduction} type=\"text\" name=\"expectedProduction\" id=\"expectedProduction\" onChange={handleChange} value={values.expectedProduction} disabled={isSubmitting}/>\n\t\t\t\t{errors.expectedProduction && <FormText color=\"danger\">{errors.expectedProduction}</FormText>}\n\t\t\t</FormGroup>\n\t\t\t<FormGroup>\n\t\t\t\t<Label for=\"periodicity\">Periodicità</Label>\n\t\t\t\t<Input valid={touched.periodicity && !errors.periodicity} type=\"text\" name=\"periodicity\" id=\"periodicity\" onChange={handleChange} value={values.periodicity} disabled={isSubmitting}/>\n\t\t\t\t<FormText>Ogni estate, ...</FormText>\n\t\t\t\t{errors.periodicity && <FormText color=\"danger\">{errors.periodicity}</FormText>}\n\t\t\t</FormGroup>\n\t\t\t<FormGroup>\n\t\t\t\t<Label for=\"expMainActivityCost\">Costi di manutenzione attesi</Label>\n\t\t\t\t<InputGroup>\n\t\t\t\t\t<InputGroupAddon addonType=\"prepend\" className=\"align-items-center mx-3\">\n\t\t\t\t\t\t<FontAwesomeIcon icon={faEuroSign} size=\"lg\"/>\n\t\t\t\t\t</InputGroupAddon>\n\t\t\t\t\t<Input valid={touched.expMainActivityCost && !errors.expMainActivityCost} type=\"number\" name=\"expMainActivityCost\" id=\"expMainActivityCost\" onChange={handleChange} value={values.expMainActivityCost} disabled={isSubmitting}/>\n\t\t\t\t</InputGroup>\n\t\t\t\t{errors.expMainActivityCost && <FormText color=\"danger\">{errors.expMainActivityCost}</FormText>}\n\t\t\t</FormGroup>\n\t\t\t<FormGroup>\n\t\t\t\t<Label for=\"expProdActivityCost\">Costi di produzione attesi</Label>\n\t\t\t\t<InputGroup>\n\t\t\t\t\t<InputGroupAddon addonType=\"prepend\" className=\"align-items-center mx-3\">\n\t\t\t\t\t\t<FontAwesomeIcon icon={faEuroSign} size=\"lg\"/>\n\t\t\t\t\t</InputGroupAddon>\n\t\t\t\t\t<Input valid={touched.expProdActivityCost && !errors.expProdActivityCost} type=\"number\" name=\"expProdActivityCost\" id=\"expProdActivityCost\" onChange={handleChange} value={values.expProdActivityCost} disabled={isSubmitting}/>\n\t\t\t\t</InputGroup>\n\t\t\t\t{errors.expProdActivityCost && <FormText color=\"danger\">{errors.expProdActivityCost}</FormText>}\n\t\t\t</FormGroup>\n\t\t\t<StyledFilledButton type=\"submit\" disabled={isSubmitting}>\n\t\t\t\tAggiungi\n\t\t\t</StyledFilledButton>\n\t\t</Form>\n\t);\n};\n\nContractTermsForm.propTypes = {\n\t/**\n\t * Form values\n\t */\n\tvalues: PropTypes.object,\n\t/**\n\t * Touched fields\n\t */\n\ttouched: PropTypes.object,\n\t/**\n\t * Errors in fields\n\t */\n\terrors: PropTypes.object,\n\t/**\n\t * Form submission\n\t */\n\tisSubmitting: PropTypes.bool,\n\t/**\n\t * Form submission handling\n\t */\n\thandleSubmit: PropTypes.func,\n\t/**\n\t * Field changes handling\n\t */\n\thandleChange: PropTypes.func,\n\t/**\n\t * Current user's address\n\t */\n\tuserAddress: PropTypes.string\n}\n\nexport default ContractTermsForm;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert, Col, Container, Form, FormGroup, FormText, Input, Label, Row } from 'reactstrap';\n\nimport { StyledFilledButton, StyledSpinner } from '../../../shared/styled';\n\nimport { fetchPortionsByBuyer } from '../../../shared/utils';\n\n/**\n * Form for selling portion or transfer its ownership.\n *\n * @param values\n * @param touched\n * @param errors\n * @param isSubmitting\n * @param handleSubmit\n * @param handleChange\n * @param resetForm\n * @param initialValues\n * @param userAddress\n * @returns {JSX.Element}\n * @constructor\n * @component\n */\nconst TransferOwnership = ({\n    values,\n    touched,\n    errors,\n    isSubmitting,\n    handleSubmit,\n    handleChange,\n\tresetForm,\n\tinitialValues,\n\tuserAddress\n}) => {\n\tconst [elements, setElements] = useState([]);\n\tconst [fetchErrors, setFetchErrors] = useState(false);\n\tconst [isLoading, setIsLoading] = useState(true);\n\n\tuseEffect(() => {\n\t\tresetForm(initialValues);\n\t}, [resetForm, initialValues]);\n\n\tuseEffect(() => {\n\t\t!isSubmitting && fetchPortionsByBuyer(userAddress, setElements, setIsLoading, setFetchErrors);\n\t}, [userAddress, setElements, setIsLoading, setFetchErrors, isSubmitting]);\n\n\tif (isLoading) {\n\t\treturn (\n\t\t\t<Container fluid>\n\t\t\t\t<Row className=\"my-3 justify-content-center align-content-center align-items-center\">\n\t\t\t\t\t<Col xl=\"auto\" sm=\"auto\">\n\t\t\t\t\t\t<StyledSpinner size=\"large\"/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t)\n\t}\n\n\tif (fetchErrors) {\n\t\treturn (\n\t\t\t<Alert color=\"danger\" className=\"my-3\">Si è verificato un errore nel caricamento delle porzioni di terreno</Alert>\n\t\t);\n\t}\n\n\tif (!elements.length) {\n\t\treturn (\n\t\t\t<Alert color=\"info\" className=\"my-3\">Nessuna porzione di terreno disponibile per il trasferimento di proprietà o per la vendita</Alert>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Form onSubmit={handleSubmit} noValidate>\n\t\t\t<FormGroup>\n\t\t\t\t<Label for=\"portion\">Porzione relativa</Label>\n\t\t\t\t<Input valid={touched.portion && !errors.portion} type=\"select\" name=\"portion\" id=\"portion\" onChange={handleChange} value={values.portion} disabled={isSubmitting}>\n\t\t\t\t\t<option value=\"\" />\n\t\t\t\t\t{elements.map((element, index) => <option key={index} value={element.id}>{element.id} - {element.description}</option>)}\n\t\t\t\t</Input>\n\t\t\t\t{errors.portion && <FormText color=\"danger\">{errors.portion}</FormText>}\n\t\t\t</FormGroup>\n\t\t\t<FormGroup>\n\t\t\t\t<Label for=\"address\">Address</Label>\n\t\t\t\t<Input valid={touched.address && !errors.address} type=\"text\" name=\"address\" id=\"address\" placeholder=\"0xa1b2c3d4e5f6...\" onChange={handleChange} value={values.address} disabled={isSubmitting}/>\n\t\t\t\t{errors.address && <FormText color=\"danger\">{errors.address}</FormText>}\n\t\t\t</FormGroup>\n\t\t\t<StyledFilledButton type=\"submit\" disabled={isSubmitting}>\n\t\t\t\tTrasferisci\n\t\t\t</StyledFilledButton>\n\t\t</Form>\n\t);\n};\n\nTransferOwnership.propTypes = {\n\t/**\n\t * Form values\n\t */\n\tvalues: PropTypes.object,\n\t/**\n\t * Touched fields\n\t */\n\ttouched: PropTypes.object,\n\t/**\n\t * Errors in fields\n\t */\n\terrors: PropTypes.object,\n\t/**\n\t * Form submission\n\t */\n\tisSubmitting: PropTypes.bool,\n\t/**\n\t * Form submission handling\n\t */\n\thandleSubmit: PropTypes.func,\n\t/**\n\t * Field changes handling\n\t */\n\thandleChange: PropTypes.func,\n\t/**\n\t * Form values reset\n\t */\n\tresetForm: PropTypes.func,\n\t/**\n\t * Initial form values\n\t */\n\tinitialValues: PropTypes.object,\n\t/**\n\t * Ethereum address\n\t */\n\tuserAddress: PropTypes.string\n};\n\nexport default TransferOwnership;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert, Col, Container, Form, FormGroup, FormText, Input, Label, Row } from 'reactstrap';\n\nimport DocumentField from './DocumentField';\nimport { StyledFilledButton, StyledSpinner } from '../../../shared/styled';\n\nimport { LAND, PORTION } from '../../../shared/values';\nimport { fetchLandsByOwner, fetchPortionsByOwner } from '../../../shared/utils';\n\n/**\n * Document registration form.\n *\n * @param reference\n * @param values\n * @param touched\n * @param errors\n * @param isSubmitting\n * @param handleSubmit\n * @param handleChange\n * @param setFieldValue\n * @param resetForm\n * @param initialValues\n * @param userAddress\n * @returns {JSX.Element}\n * @constructor\n * @component\n */\nconst DocumentForm = ({\n\treference,\n\tvalues,\n\ttouched,\n\terrors,\n\tisSubmitting,\n\thandleSubmit,\n\thandleChange,\n\tsetFieldValue,\n\tresetForm,\n\tinitialValues,\n\tuserAddress\n}) => {\n\tuseEffect(() => {\n\t\tresetForm(initialValues);\n\t}, [resetForm, initialValues]);\n\n\tconst [elements, setElements] = useState([]);\n\tconst [fetchErrors, setFetchErrors] = useState(false);\n\tconst [isLoading, setIsLoading] = useState(true);\n\n\tuseEffect(() => {\n\t\tsetIsLoading(true);\n\t\tsetElements([]);\n\n\t\tswitch (values.element) {\n\t\t\tcase LAND:\n\t\t\t\tfetchLandsByOwner(userAddress, setElements, setIsLoading, setFetchErrors);\n\t\t\t\tbreak;\n\t\t\tcase PORTION:\n\t\t\t\tfetchPortionsByOwner(userAddress, setElements, setIsLoading, setFetchErrors);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tsetIsLoading(false);\n\t\t}\n\t}, [values.element, userAddress]);\n\n\tif (isLoading) {\n\t\treturn (\n\t\t\t<Container fluid>\n\t\t\t\t<Row className=\"my-3 justify-content-center align-content-center align-items-center\">\n\t\t\t\t\t<Col xl=\"auto\" sm=\"auto\">\n\t\t\t\t\t\t<StyledSpinner size=\"large\"/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{!elements.length && <Alert color=\"info\" className=\"my-3\">Nessun elemento disponibile per la registrazione di documenti</Alert>}\n\t\t\t{fetchErrors && <Alert color=\"danger\" className=\"my-3\">Si è verificato un errore nel caricamento degli elementi</Alert>}\n\t\t\t<Form innerRef={reference} onSubmit={handleSubmit} noValidate>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Label for=\"element\">Elemento per il quale registrare il documento</Label>\n\t\t\t\t\t<Input valid={touched.element && !errors.element} type=\"select\" name=\"element\" id=\"element\" onChange={handleChange} value={values.element} disabled={isSubmitting}>\n\t\t\t\t\t\t<option value=\"\" />\n\t\t\t\t\t\t<option value={LAND}>{LAND}</option>\n\t\t\t\t\t\t<option value={PORTION}>{PORTION}</option>\n\t\t\t\t\t</Input>\n\t\t\t\t\t{errors.element && <FormText color=\"danger\">{errors.element}</FormText>}\n\t\t\t\t</FormGroup>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Label for=\"id\">{values.element}</Label>\n\t\t\t\t\t<Input valid={touched.id && !errors.id} type=\"select\" name=\"id\" id=\"id\" onChange={handleChange} value={values.id} disabled={isSubmitting}>\n\t\t\t\t\t\t<option value=\"\" />\n\t\t\t\t\t\t{elements.map((element, index) => <option key={index} value={element.id}>{element.id} - {element.description}</option>)}\n\t\t\t\t\t</Input>\n\t\t\t\t\t{errors.id && <FormText color=\"danger\">{errors.id}</FormText>}\n\t\t\t\t</FormGroup>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<DocumentField\n\t\t\t\t\t\tisSubmitting={isSubmitting}\n\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\tvalues={values}\n\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\ttouched={touched}\n\t\t\t\t\t/>\n\t\t\t\t</FormGroup>\n\t\t\t\t<StyledFilledButton type=\"submit\" disabled={isSubmitting}>\n\t\t\t\t\tAggiungi\n\t\t\t\t</StyledFilledButton>\n\t\t\t</Form>\n\t\t</>\n\t);\n}\n\nDocumentForm.propTypes = {\n\t/**\n\t * Form reference\n\t */\n\treference: PropTypes.object,\n\t/**\n\t * Form values\n\t */\n\tvalues: PropTypes.object,\n\t/**\n\t * Touched fields\n\t */\n\ttouched: PropTypes.object,\n\t/**\n\t * Errors in fields\n\t */\n\terrors: PropTypes.object,\n\t/**\n\t * Form submission\n\t */\n\tisSubmitting: PropTypes.bool,\n\t/**\n\t * Form submission handling\n\t */\n\thandleSubmit: PropTypes.func,\n\t/**\n\t * Field changes handling\n\t */\n\thandleChange: PropTypes.func,\n\t/**\n\t * Field specific setter\n\t */\n\tsetFieldValue: PropTypes.func,\n\t/**\n\t * Form values reset\n\t */\n\tresetForm: PropTypes.func,\n\t/**\n\t * Initial form values\n\t */\n\tinitialValues: PropTypes.object,\n}\n\nexport default DocumentForm;\n","import React from 'react';\nimport { Col, Container, Row, Progress } from 'reactstrap';\n\nconst TransactionLoader = () => (\n\t<Container fluid>\n\t\t<Row className=\"my-3 justify-content-center align-content-center align-items-center\">\n\t\t\t<Col xl=\"12\" sm=\"12\">\n\t\t\t\t<Progress animated value=\"100\" className=\"progress-bar-custom\" />\n\t\t\t</Col>\n\t\t</Row>\n\t</Container>\n);\n\nexport default TransactionLoader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, FormGroup, FormText, Input, Label } from 'reactstrap';\n\nimport { StyledFilledButton } from '../styled';\n\n/**\n * Wallet Seed Phrase management\n *\n * @param values\n * @param touched\n * @param errors\n * @param isSubmitting\n * @param handleSubmit\n * @param handleChange\n * @returns {JSX.Element}\n * @constructor\n * @component\n */\nconst SeedPhraseForm = ({\n    values,\n    touched,\n    errors,\n    isSubmitting,\n    handleSubmit,\n    handleChange\n}) => (\n\t<Form onSubmit={handleSubmit} noValidate>\n\t\t<FormGroup>\n\t\t\t<Label for=\"phrase\">Seed Phrase</Label>\n\t\t\t<Input valid={touched.phrase && !errors.phrase} type=\"textarea\" name=\"phrase\" id=\"phrase\" onChange={handleChange} value={values.phrase}/>\n\t\t\t{errors.phrase && <FormText color=\"danger\">{errors.phrase}</FormText>}\n\t\t\t<FormText>Inserire la frase composta da 12 parole utilizzata per sbloccare il wallet</FormText>\n\t\t</FormGroup>\n\t\t<StyledFilledButton type=\"submit\" disabled={isSubmitting}>\n\t\t\tConferma\n\t\t</StyledFilledButton>\n\t</Form>\n);\n\nSeedPhraseForm.propTypes = {\n\t/**\n\t * Form values\n\t */\n\tvalues: PropTypes.object,\n\t/**\n\t * Touched fields\n\t */\n\ttouched: PropTypes.object,\n\t/**\n\t * Errors in fields\n\t */\n\terrors: PropTypes.object,\n\t/**\n\t * Form submission\n\t */\n\tisSubmitting: PropTypes.bool,\n\t/**\n\t * Form submission handling\n\t */\n\thandleSubmit: PropTypes.func,\n\t/**\n\t * Field changes handling\n\t */\n\thandleChange: PropTypes.func\n}\n\nexport default SeedPhraseForm;\n","import React, { useCallback, useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Formik } from 'formik';\nimport { string, object, number } from 'yup';\nimport { Col, Container, Row } from 'reactstrap';\nimport HDWalletProvider from '@truffle/hdwallet-provider';\n\nimport SeedPhraseForm from './SeedPhraseForm';\nimport { Selector } from '../../store/user/reducer';\n\nconst withWallet = (Component) =>\n\tconnect((state) => ({ user: Selector.getUser(state) }))(\n\t\t({ user: { data: { username } }}) => {\n\t\tconst [isHDWalletProvider, setIsHDWalletProvider] = useState(window.web3.currentProvider.constructor.name === 'HDWalletProvider');\n\n\t\tconst onSubmit = useCallback(({ phrase }, { setSubmitting, setErrors }) => {\n\t\t\tsetSubmitting(false);\n\n\t\t\ttry {\n\t\t\t\tconst provider = new HDWalletProvider({\n\t\t\t\t\tmnemonic: phrase,\n\t\t\t\t\tproviderOrUrl: 'https://goerli.infura.io/v3/2825ef3aeb9047b7ab6e108500f89b60',\n\t\t\t\t\t// providerOrUrl: 'http://localhost:7545',\n\t\t\t\t\tshareNonce: false\n\t\t\t\t});\n\n\t\t\t\tif (!provider.getAddresses().includes(username.toLowerCase())) {\n\t\t\t\t\tsetErrors({ phrase: 'L\\'address dell\\'account non è incluso in questo wallet' });\n\t\t\t\t} else {\n\t\t\t\t\twindow.web3.setProvider(provider);\n\t\t\t\t\twindow.web3.eth.defaultAccount = username;\n\t\t\t\t\tsetIsHDWalletProvider(true);\n\t\t\t\t}\n\t\t\t} catch(error) {\n\t\t\t\tsetErrors({ phrase: error.message });\n\t\t\t}\n\t\t}, [username, setIsHDWalletProvider]);\n\n\t\tif (!isHDWalletProvider) {\n\t\t\treturn (\n\t\t\t\t<Container fluid>\n\t\t\t\t\t<Row className=\"justify-content-center align-content-center align-items-center\">\n\t\t\t\t\t\t<Col xl={8} sm={8}>\n\t\t\t\t\t\t\t<h3>Seed Phrase</h3>\n\t\t\t\t\t\t\t<p>Inserire la Seed Phrase del proprio wallet per continuare</p>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row className=\"justify-content-center align-content-center align-items-center\">\n\t\t\t\t\t\t<Col xl={8} sm={8}>\n\t\t\t\t\t\t\t<Formik\n\t\t\t\t\t\t\t\tinitialValues={{ phrase: '', index: 0 }}\n\t\t\t\t\t\t\t\tvalidationSchema={object().shape(({\n\t\t\t\t\t\t\t\t\tindex: number()\n\t\t\t\t\t\t\t\t\t\t.min(0, 'L\\'indice deve essere maggiore o uguale a 0')\n\t\t\t\t\t\t\t\t\t\t.integer('L\\'indice deve essere un numero intero')\n\t\t\t\t\t\t\t\t\t\t.required('Inserire l\\'indice dell\\'address'),\n\t\t\t\t\t\t\t\t\tphrase: string()\n\t\t\t\t\t\t\t\t\t\t.required('Inserire la seed phrase.')\n\t\t\t\t\t\t\t\t\t\t.matches(/([a-z]*){12}/, 'La frase deve contenere esattamente 12 parole')\n\t\t\t\t\t\t\t\t}))}\n\t\t\t\t\t\t\t\tonSubmit={onSubmit}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{props => <SeedPhraseForm {...props}/>}\n\t\t\t\t\t\t\t</Formik>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t);\n\t\t} else {\n\t\t\treturn <Component />;\n\t\t}\n\t});\n\nexport default withWallet;\n"],"sourceRoot":""}