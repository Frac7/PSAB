{"version":3,"sources":["features/profile/components/ProfileData.js","features/profile/components/OwnedLands.js","features/profile/components/OwnedPortions.js","features/profile/components/PurchasedPortions.js","features/profile/utils/index.js","features/profile/components/OperatorActivities.js","features/profile/components/CertifierActivities.js","features/profile/containers/ProfileContainer.js","features/profile/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","shared/utils/index.js"],"names":["ProfileData","user","username","name","Row","className","Col","xl","sm","align","icon","faUser","size","OwnedLands","userAddress","useState","elements","setElements","fetchErrors","setFetchErrors","isLoading","setIsLoading","useEffect","fetchLandsByOwner","Alert","color","length","ListGroup","flush","map","element","index","ListGroupItem","key","OwnedPortions","portionInstance","window","web3","eth","Contract","contracts","PORTION","ABI","address","methods","getByOwner","call","from","then","portions","forEach","id","getById","result","catch","error","PurchasedPortions","getByBuyer","handleFetch","subject","contractInstance","items","OperatorActivities","activities","setActivities","maintenance","setMaintenance","products","setProducts","PRODUCT","MAINTENANCE_ACTIVITIES","PROD_ACTIVITIES","CertifierActivities","connect","state","Selector","getUser","data","attributes","role","parseInt","isAdmin","Boolean","Container","fluid","roles","indexOf","USER","OPERATOR","CERTIFIER","withAuthentication","PROFILE","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","source","getOwnPropertyDescriptors","defineProperties","defineProperty","landInstance","LAND","lands","fetchPortionsByOwner","portion","fetchPortionsByBuyer","buyer"],"mappings":"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","file":"static/js/12.dbde34a7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Row, Col } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser } from '@fortawesome/free-solid-svg-icons/faUser';\n\n/**\n * User's details.\n *\n * @param username\n * @param name\n * @returns {JSX.Element}\n * @constructor\n * @component\n */\nconst ProfileData = ({ user: { username, name } }) => (\n\t<Row className=\"align-items-center\">\n\t\t<Col xl=\"auto\" sm=\"auto\" align=\"center\">\n\t\t\t<FontAwesomeIcon icon={faUser} size=\"lg\" />\n\t\t</Col>\n\t\t<Col>\n\t\t\t<h1>{name}</h1>\n\t\t\t<h6>{username}</h6>\n\t\t</Col>\n\t</Row>\n);\n\nProfileData.propTypes = {\n\t/**\n\t * User's address\n\t */\n\tusername: PropTypes.string,\n\t/**\n\t * User's name\n\t */\n\tname: PropTypes.string\n}\n\nexport default ProfileData;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Row, Col, ListGroup, ListGroupItem, Alert } from 'reactstrap';\nimport { StyledBadge, StyledSpinner } from '../../../shared/styled';\nimport { DiscoverLand } from '../../../shared/views';\n\nimport { fetchLandsByOwner } from '../../../shared/utils';\n\n/**\n * Details for user's lands.\n *\n * @param userAddress\n * @returns {JSX.Element}\n * @constructor\n * @component\n */\nconst OwnedLands = ({ userAddress }) => {\n\tconst [elements, setElements] = useState([]);\n\tconst [fetchErrors, setFetchErrors] = useState(false);\n\tconst [isLoading, setIsLoading] = useState(true);\n\n\tuseEffect(() => {\n\t\tsetElements([]);\n\t\tfetchLandsByOwner(userAddress, setElements, setIsLoading, setFetchErrors);\n\t}, [userAddress, setElements, setIsLoading, setFetchErrors]);\n\n\treturn (\n\t\t<>\n\t\t\t<Row className=\"my-3 align-items-center\">\n\t\t\t\t<Col xl=\"auto\">\n\t\t\t\t\t<h2>Terreni posseduti</h2>\n\t\t\t\t</Col>\n\t\t\t\t<Col>\n\t\t\t\t\t<StyledBadge>\n\t\t\t\t\t\tOwner\n\t\t\t\t\t</StyledBadge>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row className=\"my-3 align-items-center\">\n\t\t\t\t<Col xl={12} sm={12}>\n\t\t\t\t\t{isLoading && (\n\t\t\t\t\t\t<StyledSpinner size=\"large\"/>\n\t\t\t\t\t)}\n\t\t\t\t\t{fetchErrors && (\n\t\t\t\t\t\t<Alert color=\"danger\" className=\"my-3\">Si è verificato un errore nel caricamento dei terreni</Alert>\n\t\t\t\t\t)}\n\t\t\t\t\t{!elements.length && !isLoading && !fetchErrors && (\n\t\t\t\t\t\t<Alert color=\"info\" className=\"my-3\">Nessun terreno posseduto</Alert>\n\t\t\t\t\t)}\n\t\t\t\t\t<ListGroup flush>\n\t\t\t\t\t{elements.map((element, index) => (\n\t\t\t\t\t\t<ListGroupItem key={index}>\n\t\t\t\t\t\t\t<DiscoverLand {...element} />\n\t\t\t\t\t\t</ListGroupItem>\n\t\t\t\t\t))}\n\t\t\t\t\t</ListGroup>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</>\n\t)\n};\n\nOwnedLands.propTypes = {\n\t/**\n\t * Ethereum address\n\t */\n\tuserAddress: PropTypes.string\n}\n\nexport default OwnedLands;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Row, Col, ListGroup, ListGroupItem, Alert } from 'reactstrap';\nimport { StyledBadge, StyledSpinner } from '../../../shared/styled';\nimport { DiscoverPortion } from '../../../shared/views';\n\nimport contracts from '../../../contracts';\nimport { PORTION } from '../../../shared/values';\n\n/**\n * Details for user's portions.\n *\n * @param userAddress\n * @returns {JSX.Element}\n * @constructor\n * @component\n */\nconst OwnedPortions = ({ userAddress }) => {\n\tconst [elements, setElements] = useState([]);\n\tconst [fetchErrors, setFetchErrors] = useState(false);\n\tconst [isLoading, setIsLoading] = useState(true);\n\n\tuseEffect(() => {\n\t\tsetElements([]);\n\n\t\tconst portionInstance = new window.web3.eth.Contract(contracts[PORTION].ABI, contracts[PORTION].address);\n\t\tportionInstance.methods.getByOwner(userAddress)\n\t\t\t.call({ from: userAddress })\n\t\t\t.then((portions) => {\n\t\t\t\tif (!portions.length) {\n\t\t\t\t\tsetElements([]);\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tportions.forEach((id, index) => {\n\t\t\t\t\tportionInstance.methods.getById(id)\n\t\t\t\t\t\t.call({ from: userAddress })\n\t\t\t\t\t\t.then((result) => {\n\t\t\t\t\t\t\tsetElements((elements) => ([\n\t\t\t\t\t\t\t\t...elements, {\n\t\t\t\t\t\t\t\t\t...result,\n\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t}]));\n\n\t\t\t\t\t\t\tif (index === portions.length - 1) {\n\t\t\t\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t\tsetFetchErrors(true);\n\t\t\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tsetFetchErrors(true);\n\t\t\t\tsetIsLoading(false);\n\t\t\t});\n\t}, [userAddress]);\n\n\treturn (\n\t\t<>\n\t\t\t<Row className=\"my-3 align-items-center\">\n\t\t\t\t<Col xl=\"auto\">\n\t\t\t\t\t<h2>Porzioni possedute</h2>\n\t\t\t\t</Col>\n\t\t\t\t<Col>\n\t\t\t\t\t<StyledBadge>\n\t\t\t\t\t\tOwner\n\t\t\t\t\t</StyledBadge>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row className=\"my-3 align-items-center\">\n\t\t\t\t<Col xl={12} sm={12}>\n\t\t\t\t\t{isLoading && (\n\t\t\t\t\t\t<StyledSpinner size=\"large\"/>\n\t\t\t\t\t)}\n\t\t\t\t\t{fetchErrors && (\n\t\t\t\t\t\t<Alert color=\"danger\" className=\"my-3\">Si è verificato un errore nel caricamento delle porzioni</Alert>\n\t\t\t\t\t)}\n\t\t\t\t\t{!elements.length && !isLoading && !fetchErrors && (\n\t\t\t\t\t\t<Alert color=\"info\" className=\"my-3\">Nessuna porzione posseduta</Alert>\n\t\t\t\t\t)}\n\t\t\t\t\t<ListGroup flush>\n\t\t\t\t\t{elements.map((element, index) => (\n\t\t\t\t\t\t<ListGroupItem key={index}>\n\t\t\t\t\t\t\t<DiscoverPortion {...element} />\n\t\t\t\t\t\t</ListGroupItem>\n\t\t\t\t\t))}\n\t\t\t\t\t</ListGroup>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</>\n\t)\n};\n\nOwnedPortions.propTypes = {\n\t/**\n\t * Ethereum address\n\t */\n\tuserAddress: PropTypes.string\n}\n\nexport default OwnedPortions;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Row, Col, ListGroup, ListGroupItem, Alert } from 'reactstrap';\nimport { StyledBadge, StyledSpinner } from '../../../shared/styled';\nimport { DiscoverPortion } from '../../../shared/views';\n\nimport contracts from '../../../contracts';\nimport { PORTION } from '../../../shared/values';\n\n/**\n * Details for portions purchased by the current user.\n *\n * @param userAddress\n * @returns {JSX.Element}\n * @constructor\n * @component\n */\nconst PurchasedPortions = ({ userAddress }) => {\n\tconst [elements, setElements] = useState([]);\n\tconst [fetchErrors, setFetchErrors] = useState(false);\n\tconst [isLoading, setIsLoading] = useState(true);\n\n\tuseEffect(() => {\n\t\tsetElements([]);\n\n\t\tconst portionInstance = new window.web3.eth.Contract(contracts[PORTION].ABI, contracts[PORTION].address);\n\t\tportionInstance.methods.getByBuyer(userAddress)\n\t\t\t.call({ from: userAddress })\n\t\t\t.then((portions) => {\n\t\t\t\tif (!portions.length) {\n\t\t\t\t\tsetElements([]);\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tportions.forEach((id, index) => {\n\t\t\t\t\tportionInstance.methods.getById(id)\n\t\t\t\t\t\t.call({ from: userAddress })\n\t\t\t\t\t\t.then((result) => {\n\t\t\t\t\t\t\tsetElements((elements) => ([\n\t\t\t\t\t\t\t\t...elements, {\n\t\t\t\t\t\t\t\t...result,\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t}]));\n\n\t\t\t\t\t\t\tif (index === portions.length - 1) {\n\t\t\t\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t\tsetFetchErrors(true);\n\t\t\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tsetFetchErrors(true);\n\t\t\t\tsetIsLoading(false);\n\t\t\t});\n\t}, [userAddress]);\n\n\treturn (\n\t\t<>\n\t\t\t<Row className=\"my-3 align-items-center\">\n\t\t\t\t<Col xl=\"auto\">\n\t\t\t\t\t<h2>Porzioni di terreno acquistate</h2>\n\t\t\t\t</Col>\n\t\t\t\t<Col>\n\t\t\t\t\t<StyledBadge>\n\t\t\t\t\t\tBuyer\n\t\t\t\t\t</StyledBadge>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row className=\"my-3 align-items-center\">\n\t\t\t\t<Col xl={12} sm={12}>\n\t\t\t\t\t{isLoading && (\n\t\t\t\t\t\t<StyledSpinner size=\"large\"/>\n\t\t\t\t\t)}\n\t\t\t\t\t{fetchErrors && (\n\t\t\t\t\t\t<Alert color=\"danger\" className=\"my-3\">Si è verificato un errore nel caricamento delle porzioni di terreno</Alert>\n\t\t\t\t\t)}\n\t\t\t\t\t{!elements.length && !isLoading && !fetchErrors && (\n\t\t\t\t\t\t<Alert color=\"info\" className=\"my-3\">Nessuna porzione di terreno acquistata</Alert>\n\t\t\t\t\t)}\n\t\t\t\t\t<ListGroup flush>\n\t\t\t\t\t\t{elements.map((element, index) => (\n\t\t\t\t\t\t\t<ListGroupItem key={index}>\n\t\t\t\t\t\t\t\t<DiscoverPortion {...element} />\n\t\t\t\t\t\t\t</ListGroupItem>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ListGroup>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</>\n\t)\n};\n\nPurchasedPortions.propTypes = {\n\t/**\n\t * Current user address\n\t */\n\tuserAddress: PropTypes.string\n};\n\nexport default PurchasedPortions;\n","import contracts from '../../../contracts';\n\nconst handleFetch = (userAddress, setElements, setFetchErrors, setIsLoading, element, subject) => {\n\tsetIsLoading(true);\n\n\tconst contractInstance = new window.web3.eth.Contract(contracts[element].ABI, contracts[element].address);\n\tcontractInstance.methods[`getBy${subject}`](userAddress)\n\t\t.call({ from: userAddress })\n\t\t.then((items) => {\n\t\t\tif (!items.length) {\n\t\t\t\tsetElements([]);\n\t\t\t\tsetIsLoading(false);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\titems.forEach((id, index) => {\n\t\t\t\tcontractInstance.methods.getById(id)\n\t\t\t\t\t.call({ from: userAddress })\n\t\t\t\t\t.then((result) => {\n\t\t\t\t\t\tsetElements((elements) => ([\n\t\t\t\t\t\t\t...elements, {\n\t\t\t\t\t\t\t\t...result,\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t}]));\n\n\t\t\t\t\t\tif (index === items.length - 1) {\n\t\t\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tsetFetchErrors(true);\n\t\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\t});\n\t\t\t});\n\t\t})\n\t\t.catch((error) => {\n\t\t\tsetFetchErrors(true);\n\t\t\tsetIsLoading(false);\n\t\t});\n};\n\nexport { handleFetch };\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Row, Col, ListGroup, ListGroupItem, Alert } from 'reactstrap';\nimport { StyledBadge, StyledSpinner } from '../../../shared/styled';\nimport { DiscoverActivityProduct } from '../../../shared/views';\n\nimport { MAINTENANCE_ACTIVITIES, PROD_ACTIVITIES, PRODUCT } from '../../../shared/values';\nimport { handleFetch } from '../utils';\n\n/**\n * Activities related to operator user.\n *\n * @param userAddress\n * @returns {JSX.Element}\n * @constructor\n * @component\n */\nconst OperatorActivities = ({ userAddress }) => {\n\tconst [activities, setActivities] = useState([]);\n\tconst [maintenance, setMaintenance] = useState([]);\n\tconst [products, setProducts] = useState([]);\n\tconst [fetchErrors, setFetchErrors] = useState(false);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tsetProducts([]);\n\t\thandleFetch(userAddress, setProducts, setFetchErrors, setIsLoading, PRODUCT, 'Operator');\n\t\tsetActivities([]);\n\t\thandleFetch(userAddress, setActivities, setFetchErrors, setIsLoading, MAINTENANCE_ACTIVITIES, 'Operator');\n\t\tsetMaintenance([]);\n\t\thandleFetch(userAddress, setMaintenance, setFetchErrors, setIsLoading, PROD_ACTIVITIES, 'Operator');\n\t}, [userAddress, setProducts, setFetchErrors, setIsLoading]);\n\n\treturn (\n\t\t<>\n\t\t\t<Row className=\"my-3 align-items-center\">\n\t\t\t\t<Col xl=\"auto\">\n\t\t\t\t\t<h2>Attività di produzione, manutenzione e prodotti registrati</h2>\n\t\t\t\t</Col>\n\t\t\t\t<Col>\n\t\t\t\t\t<StyledBadge>\n\t\t\t\t\t\tOperator\n\t\t\t\t\t</StyledBadge>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row className=\"my-3 align-items-center\">\n\t\t\t\t<Col xl={12} sm={12}>\n\t\t\t\t\t{isLoading && (\n\t\t\t\t\t\t<StyledSpinner size=\"large\"/>\n\t\t\t\t\t)}\n\t\t\t\t\t{fetchErrors && (\n\t\t\t\t\t\t<Alert color=\"danger\" className=\"my-3\">Si è verificato un errore nel caricamento degli elementi</Alert>\n\t\t\t\t\t)}\n\t\t\t\t\t{!activities.length && (\n\t\t\t\t\t\t<Alert color=\"info\" className=\"my-3\">Nessuna attività di produzione registrata</Alert>\n\t\t\t\t\t)}\n\t\t\t\t\t{!maintenance.length && (\n\t\t\t\t\t\t<Alert color=\"info\" className=\"my-3\">Nessuna attività di produzione registrata</Alert>\n\t\t\t\t\t)}\n\t\t\t\t\t{!products.length && (\n\t\t\t\t\t\t<Alert color=\"info\" className=\"my-3\">Nessun prodotto registrato</Alert>\n\t\t\t\t\t)}\n\t\t\t\t\t<ListGroup flush>\n\t\t\t\t\t\t{activities.map((element, index) => (\n\t\t\t\t\t\t\t<ListGroupItem key={index}>\n\t\t\t\t\t\t\t\t<DiscoverActivityProduct {...element} element={PROD_ACTIVITIES} />\n\t\t\t\t\t\t\t</ListGroupItem>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t{maintenance.map((element, index) => (\n\t\t\t\t\t\t\t<ListGroupItem key={index}>\n\t\t\t\t\t\t\t\t<DiscoverActivityProduct {...element} element={MAINTENANCE_ACTIVITIES} />\n\t\t\t\t\t\t\t</ListGroupItem>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t{products.map((element, index) => (\n\t\t\t\t\t\t\t<ListGroupItem key={index}>\n\t\t\t\t\t\t\t\t<DiscoverActivityProduct {...element} element={PRODUCT} />\n\t\t\t\t\t\t\t</ListGroupItem>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ListGroup>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</>\n\t)\n};\n\nOperatorActivities.propTypes = {\n\t/**\n\t * Ethereum address for the current user\n\t */\n\tuserAddress: PropTypes.string\n};\n\nexport default OperatorActivities;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Row, Col, ListGroup, ListGroupItem, Alert } from 'reactstrap';\nimport { StyledBadge, StyledSpinner } from '../../../shared/styled';\nimport { DiscoverActivityProduct } from '../../../shared/views';\n\nimport { PROD_ACTIVITIES, PRODUCT } from '../../../shared/values';\nimport { handleFetch } from '../utils';\n\n/**\n * Activity related to the certification process for the current user.\n *\n * @param userAddress\n * @returns {JSX.Element}\n * @constructor\n * @component\n */\nconst CertifierActivities = ({ userAddress }) => {\n\tconst [activities, setActivities] = useState([]);\n\tconst [products, setProducts] = useState([]);\n\tconst [fetchErrors, setFetchErrors] = useState(false);\n\tconst [isLoading, setIsLoading] = useState(true);\n\n\tuseEffect(() => {\n\t\tsetProducts([]);\n\t\thandleFetch(userAddress, setProducts, setFetchErrors, setIsLoading, PRODUCT, 'Certifier');\n\t\tsetActivities([]);\n\t\thandleFetch(userAddress, setActivities, setFetchErrors, setIsLoading, PROD_ACTIVITIES, 'Certifier');\n\t}, [userAddress]);\n\n\treturn (\n\t\t<>\n\t\t\t<Row className=\"my-3 align-items-center\">\n\t\t\t\t<Col xl=\"auto\">\n\t\t\t\t\t<h2>Attività di produzione e prodotti certificati</h2>\n\t\t\t\t</Col>\n\t\t\t\t<Col>\n\t\t\t\t\t<StyledBadge>\n\t\t\t\t\t\tCertifier\n\t\t\t\t\t</StyledBadge>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row className=\"my-3 align-items-center\">\n\t\t\t\t<Col xl={12} sm={12}>\n\t\t\t\t\t{isLoading && (\n\t\t\t\t\t\t<StyledSpinner size=\"large\"/>\n\t\t\t\t\t)}\n\t\t\t\t\t{fetchErrors && (\n\t\t\t\t\t\t<Alert color=\"danger\" className=\"my-3\">Si è verificato un errore nel caricamento degli elementi</Alert>\n\t\t\t\t\t)}\n\t\t\t\t\t{!activities.length && (\n\t\t\t\t\t\t<Alert color=\"info\" className=\"my-3\">Nessuna attività certificata</Alert>\n\t\t\t\t\t)}\n\t\t\t\t\t{!products.length && (\n\t\t\t\t\t\t<Alert color=\"info\" className=\"my-3\">Nessun prodotto certificato</Alert>\n\t\t\t\t\t)}\n\t\t\t\t\t<ListGroup flush>\n\t\t\t\t\t\t{activities.map((element, index) => (\n\t\t\t\t\t\t\t<ListGroupItem key={index}>\n\t\t\t\t\t\t\t\t<DiscoverActivityProduct {...element} element={PROD_ACTIVITIES} />\n\t\t\t\t\t\t\t</ListGroupItem>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t{products.map((element, index) => (\n\t\t\t\t\t\t\t<ListGroupItem key={index}>\n\t\t\t\t\t\t\t\t<DiscoverActivityProduct {...element} element={PRODUCT} />\n\t\t\t\t\t\t\t</ListGroupItem>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ListGroup>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</>\n\t)\n};\n\nCertifierActivities.propTypes = {\n\t/**\n\t * Current user Ethereum address\n\t */\n\tuserAddress: PropTypes.string\n}\n\nexport default CertifierActivities;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { Container } from 'reactstrap';\nimport { ProfileData, OwnedLands, OwnedPortions, PurchasedPortions, OperatorActivities, CertifierActivities } from '../components';\n\nimport { Selector } from '../../../store/user/reducer';\nimport { CERTIFIER, OPERATOR, roles, USER } from '../../../shared/values';\n\n/**\n * User information containers.\n *\n * @param data\n * @returns {JSX.Element}\n * @constructor\n * @component\n */\nconst ProfileContainer = ({ user: { data } }) => {\n\tconst { attributes: { name } } = data;\n\tconst role = parseInt(data.attributes['custom:role']);\n\tconst isAdmin = Boolean(parseInt(data.attributes['custom:is_admin']));\n\tconst address = data.username;\n\n\treturn (\n\t\t<Container fluid>\n\t\t\t<ProfileData user={{\n\t\t\t\tusername: address,\n\t\t\t\tname\n\t\t\t}} />\n\t\t\t{!isAdmin && role === roles.indexOf(USER) && <OwnedLands userAddress={address} />}\n\t\t\t{!isAdmin && role === roles.indexOf(USER) && <OwnedPortions userAddress={address} />}\n\t\t\t{!isAdmin && role === roles.indexOf(USER) && <PurchasedPortions userAddress={address} />}\n\t\t\t{!isAdmin && role === roles.indexOf(OPERATOR) && <OperatorActivities userAddress={address} />}\n\t\t\t{!isAdmin && role === roles.indexOf(CERTIFIER) && <CertifierActivities userAddress={address} />}\n\t\t</Container>\n\t)\n};\n\nProfileContainer.propTypes = {\n\t/**\n\t * Logged in user\n\t */\n\tuser: PropTypes.object\n};\n\nconst mapStateToProps = (state) => ({\n\tuser: Selector.getUser(state)\n});\n\nexport default connect(mapStateToProps)(ProfileContainer);\n","import React from 'react';\n\nimport ProfileContainer from './containers';\nimport { PROFILE } from '../../config/routes';\nimport withAuthentication from '../../shared/auth';\n\nconst Profile = () => <ProfileContainer />;\n\nexport default withAuthentication(Profile, PROFILE);\n","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import contracts from '../../contracts';\nimport { LAND, PORTION } from '../values';\n\nconst fetchLandsByOwner = (userAddress, setElements, setIsLoading, setFetchErrors) => {\n\tsetIsLoading(true);\n\n\tconst landInstance = new window.web3.eth.Contract(contracts[LAND].ABI, contracts[LAND].address);\n\tlandInstance.methods.getByOwner(userAddress)\n\t\t.call({ from: userAddress })\n\t\t.then((lands) => {\n\t\t\tif (!lands.length) {\n\t\t\t\tsetElements([]);\n\t\t\t\tsetIsLoading(false);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlands.forEach((id, index) => {\n\t\t\t\tlandInstance.methods.getById(id)\n\t\t\t\t\t.call({ from: userAddress })\n\t\t\t\t\t.then((result) => {\n\t\t\t\t\t\tsetElements((elements) => ([\n\t\t\t\t\t\t\t...elements, {\n\t\t\t\t\t\t\t\t...result,\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t}]));\n\n\t\t\t\t\t\tif (index === lands.length - 1) {\n\t\t\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tsetFetchErrors(true);\n\t\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\t});\n\t\t\t});\n\t\t})\n\t\t.catch((error) => {\n\t\t\tsetFetchErrors(true);\n\t\t\tsetIsLoading(false);\n\t\t});\n};\n\nconst fetchPortionsByOwner = (userAddress, setElements, setIsLoading, setFetchErrors) => {\n\tsetIsLoading(true);\n\n\tconst portionInstance = new window.web3.eth.Contract(contracts[PORTION].ABI, contracts[PORTION].address);\n\tportionInstance.methods.getByOwner(userAddress)\n\t\t.call({ from: userAddress })\n\t\t.then((result) => {\n\t\t\tif (!result.length) {\n\t\t\t\tsetElements([]);\n\t\t\t\tsetIsLoading(false);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresult.forEach((id, index) => {\n\t\t\t\tportionInstance.methods.getById(id)\n\t\t\t\t\t.call({ from: userAddress })\n\t\t\t\t\t.then((portion) => {\n\t\t\t\t\t\tsetElements((elements) => ([\n\t\t\t\t\t\t\t...elements, {\n\t\t\t\t\t\t\t\t...portion[0],\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t}]));\n\n\t\t\t\t\t\tif (index === result.length - 1) {\n\t\t\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tsetFetchErrors(true);\n\t\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\t});\n\t\t\t});\n\t\t})\n\t\t.catch((error) => {\n\t\t\tsetIsLoading(false);\n\t\t\tsetFetchErrors(true);\n\t\t});\n}\n\nconst fetchPortionsByBuyer = (userAddress, setElements, setIsLoading, setFetchErrors) => {\n\tsetIsLoading(true);\n\n\tconst portionInstance = new window.web3.eth.Contract(contracts[PORTION].ABI, contracts[PORTION].address);\n\tportionInstance.methods.getByBuyer(userAddress)\n\t\t.call({ from: userAddress })\n\t\t.then((result) => {\n\t\t\tif (!result.length) {\n\t\t\t\tsetElements([]);\n\t\t\t\tsetIsLoading(false);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresult.forEach((id, index) => {\n\t\t\t\tportionInstance.methods.getById(id)\n\t\t\t\t\t.call({ from: userAddress })\n\t\t\t\t\t.then((portion) => {\n\t\t\t\t\t\tif (portion[1].buyer === userAddress) {\n\t\t\t\t\t\t\tsetElements((elements) => ([\n\t\t\t\t\t\t\t\t...elements, {\n\t\t\t\t\t\t\t\t\t...portion[0],\n\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t}]));\n\n\t\t\t\t\t\t\tif (index === result.length - 1) {\n\t\t\t\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tsetFetchErrors(true);\n\t\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\t});\n\t\t\t});\n\t\t})\n\t\t.catch((error) => {\n\t\t\tsetIsLoading(false);\n\t\t\tsetFetchErrors(true);\n\t\t});\n}\n\nexport {\n\tfetchLandsByOwner,\n\tfetchPortionsByOwner,\n\tfetchPortionsByBuyer\n}\n"],"sourceRoot":""}