{"version":3,"sources":["features/admin/components/RegisterUserForm.js","features/admin/values/index.js","features/admin/containers/AdminContainer.js","features/admin/index.js","shared/auth/index.js"],"names":["RegisterUserForm","values","touched","errors","isSubmitting","handleSubmit","handleChange","Form","onSubmit","noValidate","FormGroup","Label","for","Input","valid","name","type","id","onChange","value","FormText","color","address","placeholder","email","password","confirmPassword","disabled","initialValues","validationSchema","object","shape","string","required","length","oneOf","ref","AdminContainer","useState","registered","setRegistered","useEffect","setTimeout","useCallback","setSubmitting","setErrors","resetForm","userAttributes","Name","Value","userPool","signUp","map","attribute","CognitoUserAttribute","error","result","console","log","message","Container","fluid","Row","Col","md","props","Toast","style","position","bottom","right","isOpen","ToastHeader","icon","faCheck","ToastBody","withAuthentication","CognitoUserPool","UserPoolId","process","ClientId","AuthComponent","AuthContainer","auth","window","localStorage","getItem","state","user","data","loggedIn","JSON","parse","this","to","SIGNIN","Component","connect","Selector","getUser"],"mappings":"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","file":"static/js/6.0c7fedfc.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Form, FormGroup, FormText, Input, Label } from 'reactstrap';\nimport { StyledFilledButton } from '../../../shared/styled';\n\nconst RegisterUserForm = ({\n  values,\n  touched,\n  errors,\n  isSubmitting,\n  handleSubmit,\n  handleChange\n}) => (\n\t<Form onSubmit={handleSubmit} noValidate>\n\t\t<FormGroup>\n\t\t\t<Label for=\"username\">Nome</Label>\n\t\t\t<Input valid={touched.name && !errors.name} type=\"text\" name=\"name\" id=\"name\" onChange={handleChange} value={values.name}/>\n\t\t\t{ errors.name && <FormText color=\"danger\">{errors.name}</FormText>}\n\t\t</FormGroup>\n\t\t<FormGroup>\n\t\t\t<Label for=\"address\">Address</Label>\n\t\t\t<Input valid={touched.address && !errors.address} type=\"text\" name=\"address\" id=\"address\" placeholder=\"0xa1b2c3d4e5f6...\" onChange={handleChange} value={values.address}/>\n\t\t\t{ errors.address && <FormText color=\"danger\">{errors.address}</FormText>}\n\t\t</FormGroup>\n\t\t<FormGroup>\n\t\t\t<Label for=\"email\">E-mail</Label>\n\t\t\t<Input valid={touched.email && !errors.email} type=\"email\" name=\"email\" id=\"email\" placeholder=\"user@example.com\" onChange={handleChange} value={values.email}/>\n\t\t\t{ errors.email && <FormText color=\"danger\">{errors.email}</FormText>}\n\t\t</FormGroup>\n\t\t<FormGroup>\n\t\t\t<Label for=\"password\">Password</Label>\n\t\t\t<Input valid={touched.email && !errors.password} type=\"password\" name=\"password\" id=\"password\" onChange={handleChange} value={values.password}/>\n\t\t\t<FormText>Almeno 8 caratteri, lettere maiuscole, lettere minuscole, caratteri speciali, numeri</FormText>\n\t\t\t{ errors.password && <FormText color=\"danger\">{errors.password}</FormText>}\n\t\t</FormGroup>\n\t\t<FormGroup>\n\t\t\t<Label for=\"confirmPassword\">Conferma password</Label>\n\t\t\t<Input valid={touched.email && !errors.confirmPassword} type=\"password\" name=\"confirmPassword\" id=\"confirmPassword\" onChange={handleChange} value={values.confirmPassword}/>\n\t\t\t{ errors.confirmPassword && <FormText color=\"danger\">{errors.confirmPassword}</FormText>}\n\t\t</FormGroup>\n\t\t<StyledFilledButton type=\"submit\" disabled={isSubmitting}>\n\t\t\tAggiungi\n\t\t</StyledFilledButton>\n\t</Form>\n);\n\nexport default RegisterUserForm;\n","import { object, string, ref } from 'yup';\n\nconst initialValues = {\n\temail: '',\n\tpassword: '',\n\tname: '',\n\taddress: '',\n\tconfirmPassword: ''\n};\nconst validationSchema = object().shape(({\n\temail: string().email('E-mail non valida').required('Inserire l\\'e-mail'),\n\tpassword: string().required('Inserire la password').length(7, 'La password deve essere lunga almeno 8 caratteri'),\n\tconfirmPassword: string().required('Inserire la conferma per la password').oneOf([ref('password'), null], 'Le due password non coincidono'),\n\tname: string().required('Inserire il nome'),\n\taddress: string()\n\t\t.required('Inserire l\\'indirizzo')\n\t\t.length(42, 'L\\'address Ã¨ lungo esattamente 42 caratteri'),\n}));\n\nexport { initialValues, validationSchema };\n","import React, { useCallback, useEffect, useState } from 'react';\n\nimport { Formik } from 'formik';\nimport { Container, Row, Col, Toast, ToastHeader, ToastBody } from 'reactstrap';\nimport { CognitoUserAttribute } from 'amazon-cognito-identity-js';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons/faCheck';\n\nimport RegisterUserForm from '../components';\nimport { initialValues, validationSchema } from '../values';\nimport { userPool } from '../../../shared/auth';\n\nconst AdminContainer = () => {\n\tconst [registered, setRegistered] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (registered) {\n\t\t\tsetTimeout(() => setRegistered(false), 5000);\n\t\t}\n\t}, [registered]);\n\n\tconst onSubmit = useCallback(({ name, email, address, password }, { setSubmitting, setErrors, resetForm }) => {\n\t\tconst userAttributes = [{\n\t\t\tName: 'custom:role',\n\t\t\tValue: '1'\n\t\t},{\n\t\t\tName: 'email',\n\t\t\tValue: email\n\t\t}, {\n\t\t\tName: 'name',\n\t\t\tValue: name\n\t\t}, {\n\t\t\tName: 'custom:eth_address',\n\t\t\tValue: address\n\t\t}];\n\n\t\tuserPool.signUp(\n\t\t\temail,\n\t\t\tpassword,\n\t\t\tuserAttributes.map((attribute) => new CognitoUserAttribute(attribute)),\n\t\t\t[],\n\t\t\t(error, result) => {\n\t\t\tconsole.log(error, result);\n\t\t\tsetSubmitting(false);\n\n\t\t\tif (error) {\n\t\t\t\tsetErrors({ confirmPassword: error.message });\n\t\t\t} else {\n\t\t\t\tsetRegistered(true);\n\t\t\t\tresetForm();\n\t\t\t}\n\t\t})\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t<Container fluid>\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<h1>Aggiungi utente</h1>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<Col md={12}>\n\t\t\t\t\t<Formik\n\t\t\t\t\t\tinitialValues={initialValues}\n\t\t\t\t\t\tvalidationSchema={validationSchema}\n\t\t\t\t\t\tonSubmit={onSubmit}\n\t\t\t\t\t>\n\t\t\t\t\t\t{props => <RegisterUserForm {...props}/>}\n\t\t\t\t\t</Formik>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t\t<Toast style={{ position: 'fixed', bottom: '10%', right: '10%' }} color=\"primary\" isOpen={registered}>\n\t\t\t<ToastHeader><FontAwesomeIcon icon={faCheck} color=\"#006D77\"/> Utente registrato</ToastHeader>\n\t\t\t<ToastBody>L'utente Ã¨ stato registrato correttamente</ToastBody>\n\t\t</Toast>\n\t\t</>\n\t)\n}\n\nexport default AdminContainer;\n","import React from 'react';\n\nimport AdminContainer from './containers';\nimport withAuthentication from '../../shared/auth';\n\nconst Admin = () => {\n\treturn (\n\t\t<AdminContainer />\n\t);\n}\n\nexport default withAuthentication(Admin);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { CognitoUserPool } from \"amazon-cognito-identity-js\";\n\nimport { SIGNIN } from '../../config/routes';\n\nimport { loggedIn } from '../../store/user/action';\nimport { Selector } from '../../store/user/reducer';\n\nconst withAuthentication = (AuthComponent) => {\n    class AuthContainer extends Component {\n        constructor(props) {\n            super(props);\n\n            const auth = window.localStorage.getItem('LoggedIn');\n            this.state = { auth };\n\n            if (auth && !this.props.user.data) {\n                this.props.loggedIn({ data: JSON.parse(this.state.auth) });\n            }\n        }\n\n        render() {\n            if (this.state.auth) {\n                return <AuthComponent />;\n            }\n\n            return <Redirect to={SIGNIN} />\n        }\n    }\n\n    return connect((state) => ({ user: Selector.getUser(state) }), { loggedIn })(AuthContainer);\n}\n\nconst userPool = new CognitoUserPool({\n    UserPoolId: process.env.REACT_APP_COGNITO_USER_POOL_ID,\n    ClientId: process.env.REACT_APP_COGNITO_CLIENT_ID\n});\n\nexport default withAuthentication;\n\nexport { userPool };\n"],"sourceRoot":""}