{"version":3,"sources":["features/register/map/index.js","features/register/containers/RegisterFormContainer.js","features/register/index.js","contracts/index.js","shared/utils/index.js","shared/auth/index.js","shared/element-dropdown/ElementSelector.js","features/register/components/LandForm.js","features/register/components/PortionForm.js","features/register/components/ProductActivitiesForm.js","features/register/utils/index.js","features/register/components/DocumentField.js","features/register/components/ToastFeedback.js","features/register/components/ContractTermsForm.js","features/register/components/TransferOwnershipForm.js","features/register/components/DocumentForm.js","shared/transaction-loader/index.js","shared/wallet/SeedPhraseForm.js","shared/wallet/index.js"],"names":["forms","DOCUMENTS","component","props","initialValues","element","LAND","id","document","validationSchema","object","shape","string","required","number","name","file","mixed","base64","handleSubmit","handleFeedback","senderAddress","window","web3","eth","Contract","contracts","ABI","address","methods","registerDocument","utils","fromAscii","keccak256","send","from","then","result","Storage","put","catch","error","description","register","PORTION","land","documents","divide","CONTRACT_TERMS","portion","price","duration","periodicity","expectedProduction","expMainActivityCost","expProdActivityCost","min","integer","today","Date","deadline","getFullYear","getMonth","getDay","getTime","defineTerms","TRANSFER_OWNERSHIP","length","sell","PRODUCT","registerProduct","PROD_ACTIVITIES","registerProductionActivity","MAINTENANCE_ACTIVITIES","registerMaintenance","connect","state","user","Selector","getUser","history","useHistory","useEffect","data","attributes","roles","indexOf","CERTIFIER","toString","push","PROFILE","useState","OPERATOR","currentForm","setCurrentForm","useMemo","Form","isOpen","setIsOpen","isLoading","setIsLoading","hasErrors","setHasErrors","form","useRef","setTimeout","onSubmit","useCallback","values","setSubmitting","resetForm","current","reset","username","Container","fluid","Row","className","Col","xl","sm","elements","type","disabled","currentElement","setCurrentElement","reference","userAddress","Register","withWallet","RegisterFormContainer","withAuthentication","REGISTER","Land","abi","Portion","Product","Maintenance","ProductionActivity","fetchLandsByOwner","setElements","setFetchErrors","landInstance","getByOwner","call","lands","forEach","index","getById","fetchPortionsByOwner","portionInstance","fetchPortionsByBuyer","getByBuyer","buyer","AuthComponent","requestUser","isError","size","color","to","pathname","SIGNIN","ElementSelector","toggle","onClick","value","choices","map","DropdownItem","key","Dropdown","DropdownToggle","caret","block","DropdownMenu","LandForm","touched","errors","isSubmitting","handleChange","innerRef","noValidate","FormGroup","Label","for","Input","valid","onChange","FormText","PortionForm","fetchErrors","Alert","ProductActivitiesForm","getTotal","total","parseInt","i","createDocumentName","old","ulid","now","split","DocumentField","setFieldValue","handleFileChange","event","persist","files","currentTarget","reader","FileReader","addEventListener","readAsDataURL","xs","ToastFeedback","ToastSuccess","Toast","style","position","bottom","right","ToastHeader","icon","faCheck","ToastBody","ToastError","faTimes","ContractTermsForm","InputGroup","InputGroupAddon","addonType","faEuroSign","TransferOwnership","placeholder","DocumentForm","TransactionLoader","animated","SeedPhraseForm","phrase","Component","currentProvider","constructor","isHDWalletProvider","setIsHDWalletProvider","setErrors","provider","HDWalletProvider","mnemonic","providerOrUrl","shareNonce","getAddresses","includes","toLowerCase","setProvider","message","matches"],"mappings":"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","file":"static/js/10.eac065a9.chunk.js","sourcesContent":["import React from 'react';\nimport { object, string, number, mixed } from 'yup';\nimport Storage from '@aws-amplify/storage';\n\nimport {\n\tLandForm,\n\tPortionForm,\n\tProductActivitiesForm,\n\tContractTermsForm,\n\tTransferOwnershipForm,\n\tDocumentForm\n} from '../components';\nimport {\n\tLAND,\n\tPORTION,\n\tPRODUCT,\n\tPROD_ACTIVITIES,\n\tMAINTENANCE_ACTIVITIES,\n\tCONTRACT_TERMS,\n\tTRANSFER_OWNERSHIP,\n\tDOCUMENTS\n} from '../../../shared/values';\n\nimport contracts from '../../../contracts';\n\nconst forms = {\n\t[DOCUMENTS]: {\n\t\tcomponent: (props) => <DocumentForm {...props} />,\n\t\tinitialValues : {\n\t\t\telement: LAND,\n\t\t\tid: '',\n\t\t\tdocument: {}\n\t\t},\n\t\tvalidationSchema: object().shape({\n\t\t\telement: string().required('Selezionare l\\'elemento per il quale si vuole registrare il documento'),\n\t\t\tid: number().required('Selezionare un terreno o una porzione a cui allegare il documento'),\n\t\t\tdocument: object().shape({\n\t\t\t\tname: string().required('Inserire un allegato'),\n\t\t\t\tfile: mixed().required('Inserire un allegato'),\n\t\t\t\tbase64: string().required('Inserire un allegato')\n\t\t\t})\n\t\t}),\n\t\thandleSubmit: ({ element, id, document: { name, file, base64 }}, handleFeedback, senderAddress) => {\n\t\t\tconst instance = new window.web3.eth.Contract(contracts[element].ABI, contracts[element].address);\n\n\t\t\tinstance.methods.registerDocument(id, window.web3.utils.fromAscii(name), window.web3.utils.keccak256(base64))\n\t\t\t\t.send({ from: senderAddress })\n\t\t\t\t.then((result) => {\n\t\t\t\t\tStorage.put(name, file)\n\t\t\t\t\t\t.then((result) => {\n\t\t\t\t\t\t\thandleFeedback(false);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t\thandleFeedback(true);\n\t\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\thandleFeedback(true);\n\t\t\t\t});\n\t\t}\n\t},\n\t[LAND]: {\n\t\tcomponent: (props) => <LandForm {...props} />,\n\t\tinitialValues: {\n\t\t\tdescription: ''\n\t\t},\n\t\tvalidationSchema: object().shape({\n\t\t\tdescription: string().required('Il campo descrizione è obbligatorio'),\n\t\t}),\n\t\thandleSubmit: ({ description }, handleFeedback, senderAddress) => {\n\t\t\tconst landInstance = new window.web3.eth.Contract(contracts[LAND].ABI, contracts[LAND].address);\n\n\t\t\tlandInstance.methods.register(description)\n\t\t\t\t.send({ from: senderAddress })\n\t\t\t\t.then((result) => {\n\t\t\t\t\thandleFeedback(false);\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\thandleFeedback(true);\n\t\t\t\t});\n\t\t}\n\t},\n\t[PORTION]: {\n\t\tcomponent: (props) => <PortionForm {...props} />,\n\t\tinitialValues: {\n\t\t\tland: '',\n\t\t\tdescription: '',\n\t\t\tdocuments: null\n\t\t},\n\t\tvalidationSchema: object().shape({\n\t\t\tland: number().required('Selezionare il terreno al quale appartiene la porzione'),\n\t\t\tdescription: string().required('Il campo descrizione è obbligatorio')\n\t\t}),\n\t\thandleSubmit: ({ land, description }, handleFeedback, senderAddress) => {\n\t\t\tconst landInstance = new window.web3.eth.Contract(contracts[LAND].ABI, contracts[LAND].address);\n\n\t\t\tlandInstance.methods.divide(land, description, contracts[PORTION].address)\n\t\t\t\t.send({ from: senderAddress })\n\t\t\t\t.then((result) => {\n\t\t\t\t\thandleFeedback(false);\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\thandleFeedback(true);\n\t\t\t\t});\n\t\t}\n\t},\n\t[CONTRACT_TERMS]: {\n\t\tcomponent: (props) => <ContractTermsForm {...props} />,\n\t\tinitialValues: {\n\t\t\tportion: '',\n\t\t\tprice: '',\n\t\t\tduration: '',\n\t\t\tperiodicity: '',\n\t\t\texpectedProduction: '',\n\t\t\texpMainActivityCost: '',\n\t\t\texpProdActivityCost: ''\n\t\t},\n\t\tvalidationSchema: object().shape({\n\t\t\tportion: number().required('Selezionare la porzione relativa'),\n\t\t\tprice: number().required('Il costo relativo al contratto è obbligatorio'),\n\t\t\tduration: number()\n\t\t\t\t.min(0, 'Il dato deve essere maggiore o uguale a 0')\n\t\t\t\t.integer('Il dato deve essere un numero intero').required('Le informazioni sulla durata del contratto sono obbligatorie'),\n\t\t\tperiodicity: string().required('Inserire la periodicità della produzione attesa'),\n\t\t\texpectedProduction: string().required('Le informazioni sulla produzione attesa sono obbligatorie'),\n\t\t\texpMainActivityCost: number().required('I costi attesi per le attività di manutenzione sono obbligatori'),\n\t\t\texpProdActivityCost: number().required('I costi attesi per la produzione sono obbligatori')\n\t\t}),\n\t\thandleSubmit: ({ portion, price, duration, expectedProduction, periodicity, expMainActivityCost, expProdActivityCost }, handleFeedback, senderAddress) => {\n\t\t\tconst today = new Date();\n\t\t\tconst deadline = duration ?\n\t\t\t\tnew Date(today.getFullYear() + duration, today.getMonth(), today.getDay()).getTime() : 0;\n\n\t\t\tconst portionInstance = new window.web3.eth.Contract(contracts[PORTION].ABI, contracts[PORTION].address);\n\t\t\tportionInstance.methods.defineTerms(\n\t\t\t\tportion,\n\t\t\t\tprice * 100,\n\t\t\t\tdeadline,\n\t\t\t\texpectedProduction,\n\t\t\t\tperiodicity,\n\t\t\t\texpMainActivityCost * 100,\n\t\t\t\texpProdActivityCost * 100)\n\t\t\t\t.send({ from: senderAddress })\n\t\t\t\t.then((result) => {\n\t\t\t\t\thandleFeedback(false);\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\thandleFeedback(true);\n\t\t\t\t});\n\t\t}\n\t},\n\t[TRANSFER_OWNERSHIP]: {\n\t\tcomponent: (props) => <TransferOwnershipForm {...props} />,\n\t\tinitialValues: {\n\t\t\tportion: '',\n\t\t\taddress: ''\n\t\t},\n\t\tvalidationSchema: object().shape({\n\t\t\tportion: number().required('Selezionare la porzione di terra relativa'),\n\t\t\taddress: string()\n\t\t\t\t.required('Inserire l\\'indirizzo')\n\t\t\t\t.length(42, 'L\\'address è lungo esattamente 42 caratteri'),\n\t\t}),\n\t\thandleSubmit: ({ portion, address }, handleFeedback, senderAddress) => {\n\t\t\tconst portionInstance = new window.web3.eth.Contract(contracts[PORTION].ABI, contracts[PORTION].address);\n\t\t\tportionInstance.methods.sell(\n\t\t\t\tportion,\n\t\t\t\taddress\n\t\t\t)\n\t\t\t\t.send({ from: senderAddress })\n\t\t\t\t.then((result) => {\n\t\t\t\t\thandleFeedback(false);\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\thandleFeedback(true);\n\t\t\t\t});\n\t\t}\n\t},\n\t[PRODUCT]: {\n\t\tcomponent: (props) => <ProductActivitiesForm {...props} />,\n\t\tinitialValues: {\n\t\t\tportion: '',\n\t\t\tdescription: ''\n\t\t},\n\t\tvalidationSchema: object().shape({\n\t\t\tportion: number().required('Selezionare la porzione di terreno alla quale appartiene il prodotto'),\n\t\t\tdescription: string().required('Il campo descrizione è obbligatorio')\n\t\t}),\n\t\thandleSubmit: ({ portion, description }, handleFeedback, senderAddress) => {\n\t\t\tconst portionInstance = new window.web3.eth.Contract(contracts[PORTION].ABI, contracts[PORTION].address);\n\n\t\t\tportionInstance.methods.registerProduct(description, portion, contracts[PRODUCT].address)\n\t\t\t\t.send({ from: senderAddress })\n\t\t\t\t.then((result) => {\n\t\t\t\t\thandleFeedback(false);\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\thandleFeedback(true);\n\t\t\t});\n\t\t}\n\t},\n\t[PROD_ACTIVITIES]: {\n\t\tcomponent: (props) => <ProductActivitiesForm {...props} />,\n\t\tinitialValues: {\n\t\t\tportion: '',\n\t\t\tdescription: ''\n\t\t},\n\t\tvalidationSchema: object().shape({\n\t\t\tportion: number().required('Selezionare la porzione di terreno alla quale appartiene l\\'attività di produzione'),\n\t\t\tdescription: string().required('Il campo descrizione è obbligatorio')\n\t\t}),\n\t\thandleSubmit: ({ portion, description }, handleFeedback, senderAddress) => {\n\t\t\tconst portionInstance = new window.web3.eth.Contract(contracts[PORTION].ABI, contracts[PORTION].address);\n\n\t\t\tportionInstance.methods.registerProductionActivity(description, portion, contracts[PROD_ACTIVITIES].address)\n\t\t\t\t.send({ from: senderAddress })\n\t\t\t\t.then((result) => {\n\t\t\t\t\thandleFeedback(false);\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\thandleFeedback(true);\n\t\t\t\t});\n\t\t}\n\t},\n\t[MAINTENANCE_ACTIVITIES]: {\n\t\tcomponent: (props) => <ProductActivitiesForm {...props} />,\n\t\tinitialValues: {\n\t\t\tportion: '',\n\t\t\tdescription: ''\n\t\t},\n\t\tvalidationSchema: object().shape({\n\t\t\tportion: number().required('Selezionare la porzione di terreno alla quale appartiene l\\'attività di manutenzione'),\n\t\t\tdescription: string().required('Il campo descrizione è obbligatorio')\n\t\t}),\n\t\thandleSubmit: ({ portion, description }, handleFeedback, senderAddress) => {\n\t\t\tconst portionInstance = new window.web3.eth.Contract(contracts[PORTION].ABI, contracts[PORTION].address);\n\n\t\t\tportionInstance.methods.registerMaintenance(description, portion, contracts[MAINTENANCE_ACTIVITIES].address)\n\t\t\t\t.send({ from: senderAddress })\n\t\t\t\t.then((result) => {\n\t\t\t\t\thandleFeedback(false);\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\thandleFeedback(true);\n\t\t\t\t});\n\t\t}\n\t}\n}\n\nexport { forms };\n","import React, { useMemo, useState, useCallback, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'\n\nimport { Container, Row, Col } from 'reactstrap';\nimport { Formik } from 'formik';\n\nimport { ToastFeedback } from '../components';\nimport { ElementSelector } from '../../../shared/element-dropdown';\nimport TransactionLoader from '../../../shared/transaction-loader';\n\nimport {\n\tLAND,\n\tPORTION,\n\tPRODUCT,\n\tPROD_ACTIVITIES,\n\tMAINTENANCE_ACTIVITIES,\n\tCONTRACT_TERMS,\n\tTRANSFER_OWNERSHIP,\n\tDOCUMENTS,\n\tOPERATOR,\n\tCERTIFIER,\n\troles,\n} from '../../../shared/values';\nimport { forms } from '../map';\nimport { Selector } from '../../../store/user/reducer';\nimport { useHistory } from 'react-router-dom';\nimport { PROFILE } from '../../../config/routes';\n\n/**\n * Container for elements registration.\n *\n * @param user\n * @returns {JSX.Element}\n * @constructor\n * @component\n */\nconst RegisterFormContainer = ({ user }) => {\n\tconst history = useHistory();\n\n\tuseEffect(() => {\n\t\tif(user.data) {\n\t\t\tconst { attributes } = user.data;\n\t\t\tif (attributes['custom:role'] === roles.indexOf(CERTIFIER).toString()) {\n\t\t\t\thistory.push(PROFILE);\n\t\t\t}\n\t\t}\n\t}, [user, history]);\n\n\tconst [currentForm, setCurrentForm] = useState(\n\t\tuser.data.attributes['custom:role'] === roles.indexOf(OPERATOR).toString() ? PRODUCT : LAND\n\t);\n\tconst { component: Form, initialValues, validationSchema, handleSubmit } = useMemo(() => forms[currentForm], [currentForm]);\n\n\tconst [isOpen, setIsOpen] = useState(false);\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [hasErrors, setHasErrors] = useState(false);\n\n\tconst form = useRef(null);\n\n\tuseEffect(() => {\n\t\tif (hasErrors && isOpen) {\n\t\t\tsetTimeout(() => setHasErrors(false), 5000);\n\t\t}\n\t}, [hasErrors, setHasErrors, isOpen])\n\n\tconst onSubmit = useCallback((values, { setSubmitting, resetForm }) => {\n\t\tsetIsLoading(true);\n\n\t\tconst handleFeedback = (hasErrors) => {\n\t\t\tif (currentForm === DOCUMENTS && form.current) {\n\t\t\t\tform.current.reset();\n\t\t\t}\n\t\t\tresetForm(initialValues);\n\t\t\tsetSubmitting(false);\n\n\t\t\tsetHasErrors(hasErrors);\n\t\t\tsetIsOpen(true);\n\t\t\tsetIsLoading(false);\n\t\t}\n\n\t\thandleSubmit(values, handleFeedback, user.data.username);\n\t}, [currentForm, initialValues, handleSubmit, user]);\n\n\treturn (\n\t\t<>\n\t\t\t<Container fluid>\n\t\t\t\t<Row className=\"justify-content-between align-items-center\">\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<h1>Registra {currentForm}</h1>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xl={5} sm={12} className=\"justify-content-center\">\n\t\t\t\t\t\t<ElementSelector\n\t\t\t\t\t\t\telements={[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: LAND,\n\t\t\t\t\t\t\t\t\tdisabled: user.data.attributes['custom:role'] === roles.indexOf(OPERATOR).toString()\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: PORTION,\n\t\t\t\t\t\t\t\t\tdisabled: user.data.attributes['custom:role'] === roles.indexOf(OPERATOR).toString()\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DOCUMENTS,\n\t\t\t\t\t\t\t\t\tdisabled: user.data.attributes['custom:role'] === roles.indexOf(OPERATOR).toString()\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: CONTRACT_TERMS,\n\t\t\t\t\t\t\t\t\tdisabled: user.data.attributes['custom:role'] === roles.indexOf(OPERATOR).toString()\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: TRANSFER_OWNERSHIP,\n\t\t\t\t\t\t\t\t\tdisabled: user.data.attributes['custom:role'] === roles.indexOf(OPERATOR).toString()\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: PRODUCT,\n\t\t\t\t\t\t\t\t\tdisabled: user.data.attributes['custom:role'] !== roles.indexOf(OPERATOR).toString()\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: PROD_ACTIVITIES,\n\t\t\t\t\t\t\t\t\tdisabled: user.data.attributes['custom:role'] !== roles.indexOf(OPERATOR).toString()\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: MAINTENANCE_ACTIVITIES,\n\t\t\t\t\t\t\t\t\tdisabled: user.data.attributes['custom:role'] !== roles.indexOf(OPERATOR).toString()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\tcurrentElement={currentForm}\n\t\t\t\t\t\t\tsetCurrentElement={setCurrentForm}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t{isLoading && <TransactionLoader />}\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xl={12} sm={12}>\n\t\t\t\t\t\t<Formik\n\t\t\t\t\t\t\tinitialValues={initialValues}\n\t\t\t\t\t\t\tvalidationSchema={validationSchema}\n\t\t\t\t\t\t\tonSubmit={onSubmit}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{props => <Form reference={form} userAddress={user.data.username} {...props}/>}\n\t\t\t\t\t\t</Formik>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t<ToastFeedback isOpen={isOpen} setIsOpen={setIsOpen} hasErrors={hasErrors} />\n\t</>\n\t);\n}\n\nconst mapStateToProps = (state) => ({\n\tuser: Selector.getUser(state)\n});\n\nRegisterFormContainer.propTypes = {\n\t/**\n\t * Current user details\n\t */\n\tuser: PropTypes.object\n}\n\nexport default connect(mapStateToProps)(RegisterFormContainer);\n","import RegisterFormContainer from './containers';\nimport { REGISTER } from '../../config/routes';\n\nimport withAuthentication from '../../shared/auth';\nimport withWallet from '../../shared/wallet';\n\nconst Register = withWallet(RegisterFormContainer);\n\nexport default withAuthentication(Register, REGISTER);\n","import Land from './Land.json';\nimport Portion from './Portion.json';\nimport Product from './Product.json';\nimport Maintenance from './Maintenance.json';\nimport ProductionActivity from './ProductionActivity.json';\n\nimport {\n\tLAND,\n\tPORTION,\n\tPRODUCT,\n\tPROD_ACTIVITIES,\n\tMAINTENANCE_ACTIVITIES\n} from '../shared/values';\n\nconst contracts = {\n\t[LAND]: {\n\t\tABI: Land.abi,\n\t\taddress: '0x11f9Bb2A3295Ed393D9D1Fc7a233f753Fee5Bfb4'\n\t},\n\t[PORTION]: {\n\t\tABI: Portion.abi,\n\t\taddress: '0x7d88206781715A0C70cBb081Db0d3A1CC57a9f19'\n\t},\n\t[PRODUCT]: {\n\t\tABI: Product.abi,\n\t\taddress: '0x7A84dB3b5C017c5C151fCA97525F1843B4A6FEE6'\n\t},\n\t[MAINTENANCE_ACTIVITIES]: {\n\t\tABI: Maintenance.abi,\n\t\taddress: '0xFe86774d3C689A9896cB361Ec78CFBCAc29db5C9'\n\t},\n\t[PROD_ACTIVITIES]: {\n\t\tABI: ProductionActivity.abi,\n\t\taddress: '0xB81C9611ECe496C195a031180D44d74CEE7329e5'\n\t}\n};\n\nexport default contracts;\n","import contracts from '../../contracts';\nimport { LAND, PORTION } from '../values';\n\nconst fetchLandsByOwner = (userAddress, setElements, setIsLoading, setFetchErrors) => {\n\tconst elements = [];\n\n\tconst landInstance = new window.web3.eth.Contract(contracts[LAND].ABI, contracts[LAND].address);\n\tlandInstance.methods.getByOwner(userAddress)\n\t\t.call({ from: userAddress })\n\t\t.then((lands) => {\n\t\t\tif (!lands.length) {\n\t\t\t\tsetElements(elements);\n\t\t\t\tsetIsLoading(false);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlands.forEach((id, index) => {\n\t\t\t\tlandInstance.methods.getById(id)\n\t\t\t\t\t.call({ from: userAddress })\n\t\t\t\t\t.then((result) => {\n\t\t\t\t\t\telements.push({\n\t\t\t\t\t\t\t...result,\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (index === lands.length - 1) {\n\t\t\t\t\t\t\tsetElements(elements);\n\t\t\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tsetFetchErrors(true);\n\t\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\t});\n\t\t\t});\n\t\t})\n\t\t.catch((error) => {\n\t\t\tsetFetchErrors(true);\n\t\t\tsetIsLoading(false);\n\t\t});\n};\n\nconst fetchPortionsByOwner = (userAddress, setElements, setIsLoading, setFetchErrors) => {\n\tconst elements = [];\n\n\tconst portionInstance = new window.web3.eth.Contract(contracts[PORTION].ABI, contracts[PORTION].address);\n\tportionInstance.methods.getByOwner(userAddress)\n\t\t.call({ from: userAddress })\n\t\t.then((result) => {\n\t\t\tif (!result.length) {\n\t\t\t\tsetElements(elements);\n\t\t\t\tsetIsLoading(false);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresult.forEach((id, index) => {\n\t\t\t\tportionInstance.methods.getById(id)\n\t\t\t\t\t.call({ from: userAddress })\n\t\t\t\t\t.then((portion) => {\n\t\t\t\t\t\telements.push({\n\t\t\t\t\t\t\t...portion[0],\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (index === result.length - 1) {\n\t\t\t\t\t\t\tsetElements(elements);\n\t\t\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tsetFetchErrors(true);\n\t\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\t});\n\t\t\t});\n\t\t})\n\t\t.catch((error) => {\n\t\t\tsetIsLoading(false);\n\t\t\tsetFetchErrors(true);\n\t\t});\n}\n\nconst fetchPortionsByBuyer = (userAddress, setElements, setIsLoading, setFetchErrors) => {\n\tconst elements = [];\n\n\tconst portionInstance = new window.web3.eth.Contract(contracts[PORTION].ABI, contracts[PORTION].address);\n\tportionInstance.methods.getByBuyer(userAddress)\n\t\t.call({ from: userAddress })\n\t\t.then((result) => {\n\t\t\tif (!result.length) {\n\t\t\t\tsetElements(elements);\n\t\t\t\tsetIsLoading(false);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresult.forEach((id, index) => {\n\t\t\t\tportionInstance.methods.getById(id)\n\t\t\t\t\t.call({ from: userAddress })\n\t\t\t\t\t.then((portion) => {\n\t\t\t\t\t\tif (portion[1].buyer === userAddress) {\n\t\t\t\t\t\t\telements.push(portion[0]);\n\t\t\t\t\t\t\tif (index === result.length - 1) {\n\t\t\t\t\t\t\t\tsetElements(elements);\n\t\t\t\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tsetFetchErrors(true);\n\t\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\t});\n\t\t\t});\n\t\t})\n\t\t.catch((error) => {\n\t\t\tsetIsLoading(false);\n\t\t\tsetFetchErrors(true);\n\t\t});\n}\n\nexport {\n\tfetchLandsByOwner,\n\tfetchPortionsByOwner,\n\tfetchPortionsByBuyer\n}\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport { Col, Container, Row, Alert } from 'reactstrap';\nimport { StyledSpinner } from '../styled';\n\nimport { SIGNIN } from '../../config/routes';\n\nimport { requestUser } from '../../store/user/action';\nimport { Selector } from '../../store/user/reducer';\n\nconst withAuthentication = (AuthComponent, from) =>\n    connect((state) => ({ user: Selector.getUser(state) }), { requestUser })(\n        ({ requestUser, user: { data, isLoading, isError }}) => {\n            useEffect(() => {\n                if (!data) {\n                    requestUser();\n                }\n            }, [requestUser, data]);\n\n            if (isLoading) {\n                return (\n                    <Container fluid>\n                        <Row className=\"my-3 justify-content-center align-content-center align-items-center\">\n                            <Col xl=\"auto\" sm=\"auto\">\n                                <StyledSpinner size=\"large\"/>\n                            </Col>\n                        </Row>\n                    </Container>\n                )\n            }\n\n            if (isError) {\n                return (\n                    <Container fluid>\n                        <Row className=\"justify-content-center align-content-center align-items-center\">\n                            <Col xl={12} sm={12}>\n                                <Alert color=\"danger\" className=\"my-3\">Si è verificato un errore nel caricamento dell'account</Alert>\n                            </Col>\n                        </Row>\n                    </Container>\n                )\n            }\n\n            if (data) {\n                return <AuthComponent />;\n            } else {\n                return <Redirect to={{\n                    pathname: SIGNIN,\n                    state: { from }\n                }} />\n            }\n        });\n\nexport default withAuthentication;\n","import React, { useState, useCallback, useMemo } from 'react';\n\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nconst ElementSelector = ({ elements, currentElement, setCurrentElement }) => {\n\tconst [isOpen, setIsOpen] = useState(false);\n\n\tconst toggle = useCallback(() => setIsOpen((isOpen) => !isOpen), [setIsOpen]);\n\tconst onClick = useCallback((value) => () => {\n\t\tsetCurrentElement(value);\n\t}, [setCurrentElement]);\n\n\tconst choices = useMemo(() => {\n\t\treturn elements.map((value, index) =>\n\t\t\t<DropdownItem disabled={value.disabled} onClick={onClick(value.type)} key={index}>{value.type}</DropdownItem>\n\t\t)\n\t}, [onClick, elements]);\n\n\treturn (\n\t\t<Dropdown\n\t\t\tisOpen={isOpen}\n\t\t\ttoggle={toggle}\n\t\t>\n\t\t\t<DropdownToggle caret block>\n\t\t\t\t{currentElement}\n\t\t\t</DropdownToggle>\n\t\t\t<DropdownMenu>\n\t\t\t\t{choices}\n\t\t\t</DropdownMenu>\n\t\t</Dropdown>\n\t)\n};\n\nexport default ElementSelector;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, FormGroup, FormText, Input, Label } from 'reactstrap';\n\nimport { StyledFilledButton } from '../../../shared/styled';\n\n/**\n * Land registration form.\n *\n * @param reference\n * @param values\n * @param touched\n * @param errors\n * @param isSubmitting\n * @param handleSubmit\n * @param handleChange\n * @param resetForm\n * @param initialValues\n * @returns {JSX.Element}\n * @constructor\n * @component\n */\nconst LandForm = ({\n\treference,\n\tvalues,\n\ttouched,\n\terrors,\n\tisSubmitting,\n\thandleSubmit,\n\thandleChange,\n\tresetForm,\n\tinitialValues\n}) => {\n\tuseEffect(() => {\n\t\tresetForm(initialValues);\n\t}, [resetForm, initialValues]);\n\n\treturn (\n\t\t<Form innerRef={reference} onSubmit={handleSubmit} noValidate>\n\t\t\t<FormGroup>\n\t\t\t\t<Label for=\"description\">Descrizione</Label>\n\t\t\t\t<Input valid={touched.description && !errors.description} type=\"textarea\" name=\"description\" id=\"description\" onChange={handleChange} value={values.description}/>\n\t\t\t\t{errors.description && <FormText color=\"danger\">{errors.description}</FormText>}\n\t\t\t</FormGroup>\n\t\t\t<StyledFilledButton type=\"submit\" disabled={isSubmitting}>\n\t\t\t\tAggiungi\n\t\t\t</StyledFilledButton>\n\t\t</Form>\n\t);\n}\n\nLandForm.propTypes = {\n\t/**\n\t * Form reference\n\t */\n\treference: PropTypes.object,\n\t/**\n\t * Form values\n\t */\n\tvalues: PropTypes.object,\n\t/**\n\t * Touched fields\n\t */\n\ttouched: PropTypes.object,\n\t/**\n\t * Errors in fields\n\t */\n\terrors: PropTypes.object,\n\t/**\n\t * Form submission\n\t */\n\tisSubmitting: PropTypes.bool,\n\t/**\n\t * Form submission handling\n\t */\n\thandleSubmit: PropTypes.func,\n\t/**\n\t * Field changes handling\n\t */\n\thandleChange: PropTypes.func,\n\t/**\n\t * Form values reset\n\t */\n\tresetForm: PropTypes.func,\n\t/**\n\t * Initial form values\n\t */\n\tinitialValues: PropTypes.object,\n}\n\nexport default LandForm;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, FormGroup, FormText, Input, Label, Alert, Container, Row, Col } from 'reactstrap';\n\nimport { StyledFilledButton, StyledSpinner } from '../../../shared/styled';\n\nimport { fetchLandsByOwner } from '../../../shared/utils';\n\n/**\n * Portion registration form.\n *\n * @param reference\n * @param values\n * @param touched\n * @param errors\n * @param isSubmitting\n * @param handleSubmit\n * @param handleChange\n * @param resetForm\n * @param initialValues\n * @param userAddress\n * @returns {JSX.Element}\n * @constructor\n * @component\n */\nconst PortionForm = ({\n\treference,\n    values,\n    touched,\n    errors,\n    isSubmitting,\n    handleSubmit,\n    handleChange,\n\tresetForm,\n\tinitialValues,\n\tuserAddress\n}) => {\n\tuseEffect(() => {\n\t\tresetForm(initialValues);\n\t}, [resetForm, initialValues]);\n\n\tconst [elements, setElements] = useState([]);\n\tconst [fetchErrors, setFetchErrors] = useState(false);\n\tconst [isLoading, setIsLoading] = useState(true);\n\n\tuseEffect(() => {\n\t\tfetchLandsByOwner(userAddress, setElements, setIsLoading, setFetchErrors);\n\t}, [userAddress]);\n\n\tif (isLoading) {\n\t\treturn (\n\t\t\t<Container fluid>\n\t\t\t\t<Row className=\"my-3 justify-content-center align-content-center align-items-center\">\n\t\t\t\t\t<Col xl=\"auto\" sm=\"auto\">\n\t\t\t\t\t\t<StyledSpinner size=\"large\"/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t)\n\t}\n\n\tif (fetchErrors) {\n\t\treturn (\n\t\t\t<Alert color=\"danger\" className=\"my-3\">Si è verificato un errore nel caricamento dei terreni</Alert>\n\t\t);\n\t}\n\n\tif (!elements.length) {\n\t\treturn (\n\t\t\t<Alert color=\"info\" className=\"my-3\">Nessun terreno disponibile per la suddivisione</Alert>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Form innerRef={reference} onSubmit={handleSubmit} noValidate>\n\t\t\t<FormGroup>\n\t\t\t\t<Label for=\"land\">Terreno da dividere</Label>\n\t\t\t\t<Input valid={touched.land && !errors.land} type=\"select\" name=\"land\" id=\"land\" onChange={handleChange} value={values.land} disabled={isSubmitting}>\n\t\t\t\t\t<option value=\"\" />\n\t\t\t\t\t{elements.map((element, index) => <option key={index} value={element.id}>{element.description}</option>)}\n\t\t\t\t</Input>\n\t\t\t\t{errors.land && <FormText color=\"danger\">{errors.land}</FormText>}\n\t\t\t</FormGroup>\n\t\t\t<FormGroup>\n\t\t\t\t<Label for=\"description\">Descrizione</Label>\n\t\t\t\t<Input valid={touched.description && !errors.description} type=\"textarea\" name=\"description\" id=\"description\" onChange={handleChange} value={values.description}/>\n\t\t\t\t{errors.description && <FormText color=\"danger\">{errors.description}</FormText>}\n\t\t\t</FormGroup>\n\t\t\t<StyledFilledButton type=\"submit\" disabled={isSubmitting}>\n\t\t\t\tAggiungi\n\t\t\t</StyledFilledButton>\n\t\t</Form>\n\t);\n};\n\nPortionForm.propTypes = {\n\t/**\n\t * Form reference\n\t */\n\treference: PropTypes.object,\n\t/**\n\t * Form values\n\t */\n\tvalues: PropTypes.object,\n\t/**\n\t * Touched fields\n\t */\n\ttouched: PropTypes.object,\n\t/**\n\t * Errors in fields\n\t */\n\terrors: PropTypes.object,\n\t/**\n\t * Form submission\n\t */\n\tisSubmitting: PropTypes.bool,\n\t/**\n\t * Form submission handling\n\t */\n\thandleSubmit: PropTypes.func,\n\t/**\n\t * Field changes handling\n\t */\n\thandleChange: PropTypes.func,\n\t/**\n\t * Form values reset\n\t */\n\tresetForm: PropTypes.func,\n\t/**\n\t * Initial form values\n\t */\n\tinitialValues: PropTypes.object,\n};\n\nexport default PortionForm;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, FormGroup, FormText, Input, Label, Alert, Container, Row, Col } from 'reactstrap';\n\nimport { StyledFilledButton, StyledSpinner } from '../../../shared/styled';\n\nimport contracts from '../../../contracts';\nimport { PORTION } from '../../../shared/values';\n\n/**\n * Product, production activities and maintenance activities registration form.\n *\n * @param values\n * @param touched\n * @param errors\n * @param isSubmitting\n * @param handleSubmit\n * @param handleChange\n * @param resetForm\n * @param initialValues\n * @param userAddress\n * @returns {JSX.Element}\n * @constructor\n * @component\n */\nconst ProductActivitiesForm = ({\n    values,\n    touched,\n    errors,\n    isSubmitting,\n    handleSubmit,\n    handleChange,\n\tresetForm,\n\tinitialValues,\n\tuserAddress\n}) => {\n\tconst [elements, setElements] = useState([]);\n\tconst [fetchErrors, setFetchErrors] = useState(false);\n\tconst [isLoading, setIsLoading] = useState(true);\n\n\tuseEffect(() => {\n\t\tresetForm(initialValues);\n\t}, [resetForm, initialValues]);\n\n\tuseEffect(() => {\n\t\tconst elements = [];\n\n\t\tconst portionInstance = new window.web3.eth.Contract(contracts[PORTION].ABI, contracts[PORTION].address);\n\t\tportionInstance.methods.getTotal()\n\t\t\t.call({ from : userAddress })\n\t\t\t.then((total) => {\n\t\t\t\ttotal = parseInt(total);\n\t\t\t\tif (!total) {\n\t\t\t\t\tsetElements(elements);\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0; i < total; i++) {\n\t\t\t\t\tportionInstance.methods.getById(i)\n\t\t\t\t\t\t.call({ from: userAddress })\n\t\t\t\t\t\t.then((result) => {\n\t\t\t\t\t\t\telements.push({\n\t\t\t\t\t\t\t\t...result,\n\t\t\t\t\t\t\t\tid: i\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tif (i === total - 1) {\n\t\t\t\t\t\t\t\tsetElements(elements);\n\t\t\t\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t\tsetFetchErrors(true);\n\t\t\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tsetFetchErrors(true);\n\t\t\t\tsetIsLoading(false);\n\t\t\t});\n\t}, [userAddress]);\n\n\tif (isLoading) {\n\t\treturn (\n\t\t\t<Container fluid>\n\t\t\t\t<Row className=\"my-3 justify-content-center align-content-center align-items-center\">\n\t\t\t\t\t<Col xl=\"auto\" sm=\"auto\">\n\t\t\t\t\t\t<StyledSpinner size=\"large\"/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t)\n\t}\n\n\tif (fetchErrors) {\n\t\treturn (\n\t\t\t<Alert color=\"danger\" className=\"my-3\">Si è verificato un errore nel caricamento delle porzioni</Alert>\n\t\t);\n\t}\n\n\tif (!elements.length) {\n\t\treturn (\n\t\t\t<Alert color=\"info\" className=\"my-3\">Nessuna porzione di terreno disponibile per registrare l'elemento</Alert>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Form onSubmit={handleSubmit} noValidate>\n\t\t\t<FormGroup>\n\t\t\t\t<Label for=\"portion\">Porzione relativa all'oggetto della registrazione</Label>\n\t\t\t\t<Input valid={touched.portion && !errors.portion} type=\"select\" name=\"portion\" id=\"portion\" onChange={handleChange} value={values.portion} disabled={isSubmitting}>\n\t\t\t\t\t<option value=\"\" />\n\t\t\t\t\t{elements.map((element, index) => <option key={index} value={element.id}>{element[0].description}</option>)}\n\t\t\t\t</Input>\n\t\t\t\t{errors.portion && <FormText color=\"danger\">{errors.portion}</FormText>}\n\t\t\t</FormGroup>\n\t\t\t<FormGroup>\n\t\t\t\t<Label for=\"description\">Descrizione</Label>\n\t\t\t\t<Input valid={\n\t\t\t\t\ttouched.description && !errors.description} type=\"textarea\" name=\"description\" id=\"description\" onChange={handleChange} value={values.description} disabled={isSubmitting}/>\n\t\t\t\t{errors.description && <FormText color=\"danger\">{errors.description}</FormText>}\n\t\t\t</FormGroup>\n\t\t\t<StyledFilledButton type=\"submit\" disabled={isSubmitting}>\n\t\t\t\tAggiungi\n\t\t\t</StyledFilledButton>\n\t\t</Form>\n\t);\n};\n\nProductActivitiesForm.propTypes = {\n\t/**\n\t * Form values\n\t */\n\tvalues: PropTypes.object,\n\t/**\n\t * Touched fields\n\t */\n\ttouched: PropTypes.object,\n\t/**\n\t * Errors in fields\n\t */\n\terrors: PropTypes.object,\n\t/**\n\t * Form submission\n\t */\n\tisSubmitting: PropTypes.bool,\n\t/**\n\t * Form submission handling\n\t */\n\thandleSubmit: PropTypes.func,\n\t/**\n\t * Field changes handling\n\t */\n\thandleChange: PropTypes.func,\n\t/**\n\t * Form values reset\n\t */\n\tresetForm: PropTypes.func,\n\t/**\n\t * Initial form values\n\t */\n\tinitialValues: PropTypes.object,\n\t/**\n\t * Current user's Ethereum address\n\t */\n\tuserAddress: PropTypes.string\n};\n\nexport default ProductActivitiesForm;\n","import { ulid } from 'ulid';\n\nconst createDocumentName = (old) => {\n\tconst id = ulid(Date.now());\n\tconst split = old.split('.');\n\n\treturn `${id}.${split[split.length - 1]}`;\n}\n\nexport default createDocumentName;\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormText, Input, Row, Col, Label } from 'reactstrap';\n\nimport createDocumentName from '../utils';\n\n/**\n * Custom field for handling document upload.\n *\n * @param touched\n * @param errors\n * @param setFieldValue\n * @param isSubmitting\n * @returns {JSX.Element}\n * @constructor\n * @component\n */\nconst DocumentField = ({\n\ttouched,\n\terrors,\n\tsetFieldValue,\n\tisSubmitting\n}) => {\n\tconst handleFileChange = useCallback((event) => {\n\t\tevent.persist();\n\n\t\tconst files = event.currentTarget.files;\n\t\tif (files && files.length) {\n\t\t\tconst file = files[0];\n\n\t\t\tconst reader = new FileReader();\n\t\t\treader.addEventListener('load', () => {\n\t\t\t\tconst base64 = reader.result;\n\n\t\t\t\tsetFieldValue('document', {\n\t\t\t\t\tfile,\n\t\t\t\t\tname: createDocumentName(file.name),\n\t\t\t\t\tbase64\n\t\t\t\t});\n\t\t\t});\n\t\t\treader.readAsDataURL(file);\n\t\t} else {\n\t\t\tsetFieldValue('document', {});\n\t\t}\n\t}, [setFieldValue]);\n\n\treturn (\n\t\t<>\n\t\t<Label for=\"documents\">Documenti</Label>\n\t\t<Row className=\"my-3\" form>\n\t\t\t<Col xl={12} xs={12}>\n\t\t\t\t<Input\n\t\t\t\t\tvalid={touched.document && errors.document}\n\t\t\t\t\ttype=\"file\"\n\t\t\t\t\tname=\"document\"\n\t\t\t\t\tid=\"document\"\n\t\t\t\t\tonChange={handleFileChange}\n\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t/>\n\t\t\t\t{(errors.document && (errors.document.name || errors.document.file)) && (\n\t\t\t\t\t<FormText color=\"danger\">{errors.document.name || errors.document.file || errors.document.base64}</FormText>\n\t\t\t\t)}\n\t\t\t</Col>\n\t\t\t<Col>\n\t\t\t\t<FormText>Il documento è obbligatorio</FormText>\n\t\t\t</Col>\n\t\t</Row>\n\t\t</>\n\t);\n};\n\nDocumentField.propTypes = {\n\t/**\n\t * Touched fields\n\t */\n\ttouched: PropTypes.object,\n\t/**\n\t * Errors in fields\n\t */\n\terrors: PropTypes.object,\n\t/**\n\t * Field changes handling\n\t */\n\tsetFieldValue: PropTypes.func,\n\t/**\n\t * Form submission flag\n\t */\n\tisSubmitting: PropTypes.bool\n};\n\nexport default DocumentField;\n","import React, { useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Toast, ToastBody, ToastHeader } from 'reactstrap';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons/faCheck';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons/faTimes';\n\n/**\n * Toast feedback for registration process.\n *\n * @param isOpen\n * @param setIsOpen\n * @param hasErrors\n * @returns {JSX.Element}\n * @constructor\n * @component\n */\nconst ToastFeedback = ({ isOpen, setIsOpen, hasErrors }) => {\n\tuseEffect(() => {\n\t\tsetTimeout(() => {\n\t\t\tif (isOpen) {\n\t\t\t\tsetIsOpen(false);\n\t\t\t}\n\t\t}, 5000);\n\t}, [isOpen, setIsOpen]);\n\n\tconst ToastSuccess = useCallback(() => (\n\t\t<Toast style={{ position: 'fixed', bottom: '10%', right: '10%' }} color=\"primary\" isOpen={isOpen}>\n\t\t\t<ToastHeader><FontAwesomeIcon icon={faCheck} color=\"#006D77\"/> Registrazione completata</ToastHeader>\n\t\t\t<ToastBody>L'elemento è stato aggiunto con successo</ToastBody>\n\t\t</Toast>\n\t), [isOpen]);\n\n\tconst ToastError = useCallback(() => (\n\t\t<Toast style={{ position: 'fixed', bottom: '10%', right: '10%' }} color=\"primary\" isOpen={isOpen}>\n\t\t\t<ToastHeader><FontAwesomeIcon icon={faTimes} color=\"#D9534F\"/> Si è verificato un errore durante la registrazione</ToastHeader>\n\t\t\t<ToastBody>L'elemento non è stato aggiunto</ToastBody>\n\t\t</Toast>\n\t), [isOpen]);\n\n\treturn hasErrors ? <ToastError /> : <ToastSuccess />;\n};\n\nToastFeedback.propTypes = {\n\t/**\n\t * Is toast open?\n\t */\n\tisOpen: PropTypes.bool,\n\t/**\n\t * Change open status\n\t */\n\tsetIsOpen: PropTypes.func,\n\t/**\n\t * Severity feedback\n\t */\n\thasErrors: PropTypes.bool\n};\n\nexport default ToastFeedback;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n\tForm,\n\tFormGroup,\n\tFormText,\n\tInput,\n\tLabel,\n\tInputGroup,\n\tInputGroupAddon,\n\tContainer,\n\tRow,\n\tCol,\n\tAlert\n} from 'reactstrap';\n\nimport { faEuroSign } from '@fortawesome/free-solid-svg-icons/faEuroSign';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { StyledFilledButton, StyledSpinner } from '../../../shared/styled';\n\nimport { fetchPortionsByOwner } from '../../../shared/utils';\n\n/**\n * Form for registering portion contract terms.\n *\n * @param values\n * @param touched\n * @param errors\n * @param isSubmitting\n * @param handleSubmit\n * @param handleChange\n * @param initialValues\n * @param resetForm\n * @param userAddress\n * @returns {JSX.Element}\n * @constructor\n * @component\n */\nconst ContractTermsForm = ({\n    values,\n    touched,\n    errors,\n    isSubmitting,\n    handleSubmit,\n    handleChange,\n\tinitialValues,\n\tresetForm,\n\tuserAddress\n}) => {\n\tconst [elements, setElements] = useState([]);\n\tconst [fetchErrors, setFetchErrors] = useState(false);\n\tconst [isLoading, setIsLoading] = useState(true);\n\n\tuseEffect(() => {\n\t\tresetForm(initialValues);\n\t}, [resetForm, initialValues]);\n\n\tuseEffect(() => {\n\t\tfetchPortionsByOwner(userAddress, setElements, setIsLoading, setFetchErrors);\n\t}, [userAddress, setElements, setIsLoading, setFetchErrors]);\n\n\tif (isLoading) {\n\t\treturn (\n\t\t\t<Container fluid>\n\t\t\t\t<Row className=\"my-3 justify-content-center align-content-center align-items-center\">\n\t\t\t\t\t<Col xl=\"auto\" sm=\"auto\">\n\t\t\t\t\t\t<StyledSpinner size=\"large\"/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t)\n\t}\n\n\tif (fetchErrors) {\n\t\treturn (\n\t\t\t<Alert color=\"danger\" className=\"my-3\">Si è verificato un errore nel caricamento delle porzioni di terreno</Alert>\n\t\t);\n\t}\n\n\tif (!elements.length) {\n\t\treturn (\n\t\t\t<Alert color=\"info\" className=\"my-3\">Nessuna porzione di terreno disponibile per il trasferimento di proprietà o per la vendita</Alert>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Form onSubmit={handleSubmit} noValidate>\n\t\t\t<FormGroup>\n\t\t\t\t<Label for=\"portion\">Porzione relativa</Label>\n\t\t\t\t<Input valid={touched.portion && !errors.portion} type=\"select\" name=\"portion\" id=\"portion\" onChange={handleChange} value={values.portion} disabled={isSubmitting}>\n\t\t\t\t\t<option value=\"\" />\n\t\t\t\t\t{elements.map((element, index) => <option key={index} value={element.id}>{element.description}</option>)}\n\t\t\t\t</Input>\n\t\t\t\t{errors.portion && <FormText color=\"danger\">{errors.portion}</FormText>}\n\t\t\t</FormGroup>\n\t\t\t<FormGroup>\n\t\t\t\t<Label for=\"price\">Prezzo</Label>\n\t\t\t\t<InputGroup>\n\t\t\t\t\t<InputGroupAddon addonType=\"prepend\" className=\"align-items-center mx-3\">\n\t\t\t\t\t\t<FontAwesomeIcon icon={faEuroSign} size=\"lg\"/>\n\t\t\t\t\t</InputGroupAddon>\n\t\t\t\t\t<Input valid={touched.price && !errors.price} type=\"number\" name=\"price\" id=\"price\" onChange={handleChange} value={values.price} disabled={isSubmitting}/>\n\t\t\t\t</InputGroup>\n\t\t\t\t{errors.price && <FormText color=\"danger\">{errors.price}</FormText>}\n\t\t\t</FormGroup>\n\t\t\t<FormGroup>\n\t\t\t\t<Label for=\"duration\">Durata</Label>\n\t\t\t\t<Input valid={touched.duration && !errors.duration} type=\"number\" name=\"duration\" id=\"duration\" onChange={handleChange} value={values.duration} disabled={isSubmitting}/>\n\t\t\t\t<FormText>Inserire 0 se perpetuo, altrimenti indicare il numero di anni</FormText>\n\t\t\t\t{errors.duration && <FormText color=\"danger\">{errors.duration}</FormText>}\n\t\t\t</FormGroup>\n\t\t\t<FormGroup>\n\t\t\t\t<Label for=\"expectedProduction\">Produzione attesa</Label>\n\t\t\t\t<Input valid={touched.expectedProduction && !errors.expectedProduction} type=\"text\" name=\"expectedProduction\" id=\"expectedProduction\" onChange={handleChange} value={values.expectedProduction} disabled={isSubmitting}/>\n\t\t\t\t{errors.expectedProduction && <FormText color=\"danger\">{errors.expectedProduction}</FormText>}\n\t\t\t</FormGroup>\n\t\t\t<FormGroup>\n\t\t\t\t<Label for=\"periodicity\">Periodicità</Label>\n\t\t\t\t<Input valid={touched.periodicity && !errors.periodicity} type=\"text\" name=\"periodicity\" id=\"periodicity\" onChange={handleChange} value={values.periodicity} disabled={isSubmitting}/>\n\t\t\t\t<FormText>Ogni estate, ...</FormText>\n\t\t\t\t{errors.periodicity && <FormText color=\"danger\">{errors.periodicity}</FormText>}\n\t\t\t</FormGroup>\n\t\t\t<FormGroup>\n\t\t\t\t<Label for=\"expMainActivityCost\">Costi di manutenzione attesi</Label>\n\t\t\t\t<InputGroup>\n\t\t\t\t\t<InputGroupAddon addonType=\"prepend\" className=\"align-items-center mx-3\">\n\t\t\t\t\t\t<FontAwesomeIcon icon={faEuroSign} size=\"lg\"/>\n\t\t\t\t\t</InputGroupAddon>\n\t\t\t\t\t<Input valid={touched.expMainActivityCost && !errors.expMainActivityCost} type=\"number\" name=\"expMainActivityCost\" id=\"expMainActivityCost\" onChange={handleChange} value={values.expMainActivityCost} disabled={isSubmitting}/>\n\t\t\t\t</InputGroup>\n\t\t\t\t{errors.expMainActivityCost && <FormText color=\"danger\">{errors.expMainActivityCost}</FormText>}\n\t\t\t</FormGroup>\n\t\t\t<FormGroup>\n\t\t\t\t<Label for=\"expProdActivityCost\">Costi di produzione attesi</Label>\n\t\t\t\t<InputGroup>\n\t\t\t\t\t<InputGroupAddon addonType=\"prepend\" className=\"align-items-center mx-3\">\n\t\t\t\t\t\t<FontAwesomeIcon icon={faEuroSign} size=\"lg\"/>\n\t\t\t\t\t</InputGroupAddon>\n\t\t\t\t\t<Input valid={touched.expProdActivityCost && !errors.expProdActivityCost} type=\"number\" name=\"expProdActivityCost\" id=\"expProdActivityCost\" onChange={handleChange} value={values.expProdActivityCost} disabled={isSubmitting}/>\n\t\t\t\t</InputGroup>\n\t\t\t\t{errors.expProdActivityCost && <FormText color=\"danger\">{errors.expProdActivityCost}</FormText>}\n\t\t\t</FormGroup>\n\t\t\t<StyledFilledButton type=\"submit\" disabled={isSubmitting}>\n\t\t\t\tAggiungi\n\t\t\t</StyledFilledButton>\n\t\t</Form>\n\t);\n};\n\nContractTermsForm.propTypes = {\n\t/**\n\t * Form values\n\t */\n\tvalues: PropTypes.object,\n\t/**\n\t * Touched fields\n\t */\n\ttouched: PropTypes.object,\n\t/**\n\t * Errors in fields\n\t */\n\terrors: PropTypes.object,\n\t/**\n\t * Form submission\n\t */\n\tisSubmitting: PropTypes.bool,\n\t/**\n\t * Form submission handling\n\t */\n\thandleSubmit: PropTypes.func,\n\t/**\n\t * Field changes handling\n\t */\n\thandleChange: PropTypes.func,\n\t/**\n\t * Current user's address\n\t */\n\tuserAddress: PropTypes.string\n}\n\nexport default ContractTermsForm;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert, Col, Container, Form, FormGroup, FormText, Input, Label, Row } from 'reactstrap';\n\nimport { StyledFilledButton, StyledSpinner } from '../../../shared/styled';\n\nimport { fetchPortionsByBuyer, fetchPortionsByOwner } from '../../../shared/utils';\n\n/**\n * Form for selling portion or transfer its ownership.\n *\n * @param values\n * @param touched\n * @param errors\n * @param isSubmitting\n * @param handleSubmit\n * @param handleChange\n * @param resetForm\n * @param initialValues\n * @param userAddress\n * @returns {JSX.Element}\n * @constructor\n * @component\n */\nconst TransferOwnership = ({\n    values,\n    touched,\n    errors,\n    isSubmitting,\n    handleSubmit,\n    handleChange,\n\tresetForm,\n\tinitialValues,\n\tuserAddress\n}) => {\n\tconst [elements, setElements] = useState([]);\n\tconst [fetchErrors, setFetchErrors] = useState(false);\n\tconst [isLoading, setIsLoading] = useState(true);\n\n\tuseEffect(() => {\n\t\tresetForm(initialValues);\n\t}, [resetForm, initialValues]);\n\n\tuseEffect(() => {\n\t\tfetchPortionsByOwner(userAddress, setElements, setIsLoading, setFetchErrors);\n\t\tfetchPortionsByBuyer(userAddress, setElements, setIsLoading, setFetchErrors);\n\t}, [userAddress, setElements, setIsLoading, setFetchErrors]);\n\n\tif (isLoading) {\n\t\treturn (\n\t\t\t<Container fluid>\n\t\t\t\t<Row className=\"my-3 justify-content-center align-content-center align-items-center\">\n\t\t\t\t\t<Col xl=\"auto\" sm=\"auto\">\n\t\t\t\t\t\t<StyledSpinner size=\"large\"/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t)\n\t}\n\n\tif (fetchErrors) {\n\t\treturn (\n\t\t\t<Alert color=\"danger\" className=\"my-3\">Si è verificato un errore nel caricamento delle porzioni di terreno</Alert>\n\t\t);\n\t}\n\n\tif (!elements.length) {\n\t\treturn (\n\t\t\t<Alert color=\"info\" className=\"my-3\">Nessuna porzione di terreno disponibile per il trasferimento di proprietà o per la vendita</Alert>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Form onSubmit={handleSubmit} noValidate>\n\t\t\t<FormGroup>\n\t\t\t\t<Label for=\"portion\">Porzione relativa</Label>\n\t\t\t\t<Input valid={touched.portion && !errors.portion} type=\"select\" name=\"portion\" id=\"portion\" onChange={handleChange} value={values.portion} disabled={isSubmitting}>\n\t\t\t\t\t<option value=\"\" />\n\t\t\t\t\t{elements.map((element, index) => <option key={index} value={element.id}>{element.description}</option>)}\n\t\t\t\t</Input>\n\t\t\t\t{errors.portion && <FormText color=\"danger\">{errors.portion}</FormText>}\n\t\t\t</FormGroup>\n\t\t\t<FormGroup>\n\t\t\t\t<Label for=\"address\">Address</Label>\n\t\t\t\t<Input valid={touched.address && !errors.address} type=\"text\" name=\"address\" id=\"address\" placeholder=\"0xa1b2c3d4e5f6...\" onChange={handleChange} value={values.address} disabled={isSubmitting}/>\n\t\t\t\t{errors.address && <FormText color=\"danger\">{errors.address}</FormText>}\n\t\t\t</FormGroup>\n\t\t\t<StyledFilledButton type=\"submit\" disabled={isSubmitting}>\n\t\t\t\tTrasferisci\n\t\t\t</StyledFilledButton>\n\t\t</Form>\n\t);\n};\n\nTransferOwnership.propTypes = {\n\t/**\n\t * Form values\n\t */\n\tvalues: PropTypes.object,\n\t/**\n\t * Touched fields\n\t */\n\ttouched: PropTypes.object,\n\t/**\n\t * Errors in fields\n\t */\n\terrors: PropTypes.object,\n\t/**\n\t * Form submission\n\t */\n\tisSubmitting: PropTypes.bool,\n\t/**\n\t * Form submission handling\n\t */\n\thandleSubmit: PropTypes.func,\n\t/**\n\t * Field changes handling\n\t */\n\thandleChange: PropTypes.func,\n\t/**\n\t * Form values reset\n\t */\n\tresetForm: PropTypes.func,\n\t/**\n\t * Initial form values\n\t */\n\tinitialValues: PropTypes.object,\n\t/**\n\t * Ethereum address\n\t */\n\tuserAddress: PropTypes.string\n};\n\nexport default TransferOwnership;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert, Col, Container, Form, FormGroup, FormText, Input, Label, Row } from 'reactstrap';\n\nimport DocumentField from './DocumentField';\nimport { StyledFilledButton, StyledSpinner } from '../../../shared/styled';\n\nimport { LAND, PORTION } from '../../../shared/values';\nimport { fetchLandsByOwner, fetchPortionsByOwner } from '../../../shared/utils';\n\n/**\n * Document registration form.\n *\n * @param reference\n * @param values\n * @param touched\n * @param errors\n * @param isSubmitting\n * @param handleSubmit\n * @param handleChange\n * @param setFieldValue\n * @param resetForm\n * @param initialValues\n * @param userAddress\n * @returns {JSX.Element}\n * @constructor\n * @component\n */\nconst DocumentForm = ({\n\treference,\n\tvalues,\n\ttouched,\n\terrors,\n\tisSubmitting,\n\thandleSubmit,\n\thandleChange,\n\tsetFieldValue,\n\tresetForm,\n\tinitialValues,\n\tuserAddress\n}) => {\n\tuseEffect(() => {\n\t\tresetForm(initialValues);\n\t}, [resetForm, initialValues]);\n\n\tconst [elements, setElements] = useState([]);\n\tconst [fetchErrors, setFetchErrors] = useState(false);\n\tconst [isLoading, setIsLoading] = useState(true);\n\n\tuseEffect(() => {\n\t\tsetIsLoading(true);\n\n\t\tswitch (values.element) {\n\t\t\tcase LAND:\n\t\t\t\tfetchLandsByOwner(userAddress, setElements, setIsLoading, setFetchErrors);\n\t\t\t\tbreak;\n\t\t\tcase PORTION:\n\t\t\t\tfetchPortionsByOwner(userAddress, setElements, setIsLoading, setFetchErrors);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tsetIsLoading(false);\n\t\t}\n\t}, [values.element, userAddress]);\n\n\tif (isLoading) {\n\t\treturn (\n\t\t\t<Container fluid>\n\t\t\t\t<Row className=\"my-3 justify-content-center align-content-center align-items-center\">\n\t\t\t\t\t<Col xl=\"auto\" sm=\"auto\">\n\t\t\t\t\t\t<StyledSpinner size=\"large\"/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{!elements.length && <Alert color=\"info\" className=\"my-3\">Nessun elemento disponibile per la registrazione di documenti</Alert>}\n\t\t\t{fetchErrors && <Alert color=\"danger\" className=\"my-3\">Si è verificato un errore nel caricamento degli elementi</Alert>}\n\t\t\t<Form innerRef={reference} onSubmit={handleSubmit} noValidate>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Label for=\"element\">Elemento per il quale registrare il documento</Label>\n\t\t\t\t\t<Input valid={touched.element && !errors.element} type=\"select\" name=\"element\" id=\"element\" onChange={handleChange} value={values.element} disabled={isSubmitting}>\n\t\t\t\t\t\t<option value=\"\" />\n\t\t\t\t\t\t<option value={LAND}>{LAND}</option>\n\t\t\t\t\t\t<option value={PORTION}>{PORTION}</option>\n\t\t\t\t\t</Input>\n\t\t\t\t\t{errors.element && <FormText color=\"danger\">{errors.element}</FormText>}\n\t\t\t\t</FormGroup>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Label for=\"id\">{values.element}</Label>\n\t\t\t\t\t<Input valid={touched.id && !errors.id} type=\"select\" name=\"id\" id=\"id\" onChange={handleChange} value={values.id} disabled={isSubmitting}>\n\t\t\t\t\t\t<option value=\"\" />\n\t\t\t\t\t\t{elements.map((element, index) => <option key={index} value={element.id}>{element.description}</option>)}\n\t\t\t\t\t</Input>\n\t\t\t\t\t{errors.id && <FormText color=\"danger\">{errors.id}</FormText>}\n\t\t\t\t</FormGroup>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<DocumentField\n\t\t\t\t\t\tisSubmitting={isSubmitting}\n\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\tvalues={values}\n\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\ttouched={touched}\n\t\t\t\t\t/>\n\t\t\t\t</FormGroup>\n\t\t\t\t<StyledFilledButton type=\"submit\" disabled={isSubmitting}>\n\t\t\t\t\tAggiungi\n\t\t\t\t</StyledFilledButton>\n\t\t\t</Form>\n\t\t</>\n\t);\n}\n\nDocumentForm.propTypes = {\n\t/**\n\t * Form reference\n\t */\n\treference: PropTypes.object,\n\t/**\n\t * Form values\n\t */\n\tvalues: PropTypes.object,\n\t/**\n\t * Touched fields\n\t */\n\ttouched: PropTypes.object,\n\t/**\n\t * Errors in fields\n\t */\n\terrors: PropTypes.object,\n\t/**\n\t * Form submission\n\t */\n\tisSubmitting: PropTypes.bool,\n\t/**\n\t * Form submission handling\n\t */\n\thandleSubmit: PropTypes.func,\n\t/**\n\t * Field changes handling\n\t */\n\thandleChange: PropTypes.func,\n\t/**\n\t * Field specific setter\n\t */\n\tsetFieldValue: PropTypes.func,\n\t/**\n\t * Form values reset\n\t */\n\tresetForm: PropTypes.func,\n\t/**\n\t * Initial form values\n\t */\n\tinitialValues: PropTypes.object,\n}\n\nexport default DocumentForm;\n","import React from 'react';\nimport { Col, Container, Row, Progress } from 'reactstrap';\n\nconst TransactionLoader = () => (\n\t<Container fluid>\n\t\t<Row className=\"my-3 justify-content-center align-content-center align-items-center\">\n\t\t\t<Col xl=\"12\" sm=\"12\">\n\t\t\t\t<Progress animated value=\"100\" className=\"progress-bar-custom\" />\n\t\t\t</Col>\n\t\t</Row>\n\t</Container>\n);\n\nexport default TransactionLoader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, FormGroup, FormText, Input, Label } from 'reactstrap';\n\nimport { StyledFilledButton } from '../styled';\n\n/**\n * Wallet Seed Phrase management\n *\n * @param values\n * @param touched\n * @param errors\n * @param isSubmitting\n * @param handleSubmit\n * @param handleChange\n * @returns {JSX.Element}\n * @constructor\n * @component\n */\nconst SeedPhraseForm = ({\n    values,\n    touched,\n    errors,\n    isSubmitting,\n    handleSubmit,\n    handleChange\n}) => (\n\t<Form onSubmit={handleSubmit} noValidate>\n\t\t<FormGroup>\n\t\t\t<Label for=\"phrase\">Seed Phrase</Label>\n\t\t\t<Input valid={touched.phrase && !errors.phrase} type=\"textarea\" name=\"phrase\" id=\"phrase\" onChange={handleChange} value={values.phrase}/>\n\t\t\t{errors.phrase && <FormText color=\"danger\">{errors.phrase}</FormText>}\n\t\t\t<FormText>Inserire la frase composta da 12 parole utilizzata per sbloccare il wallet</FormText>\n\t\t</FormGroup>\n\t\t<StyledFilledButton type=\"submit\" disabled={isSubmitting}>\n\t\t\tConferma\n\t\t</StyledFilledButton>\n\t</Form>\n);\n\nSeedPhraseForm.propTypes = {\n\t/**\n\t * Form values\n\t */\n\tvalues: PropTypes.object,\n\t/**\n\t * Touched fields\n\t */\n\ttouched: PropTypes.object,\n\t/**\n\t * Errors in fields\n\t */\n\terrors: PropTypes.object,\n\t/**\n\t * Form submission\n\t */\n\tisSubmitting: PropTypes.bool,\n\t/**\n\t * Form submission handling\n\t */\n\thandleSubmit: PropTypes.func,\n\t/**\n\t * Field changes handling\n\t */\n\thandleChange: PropTypes.func\n}\n\nexport default SeedPhraseForm;\n","import React, { useCallback, useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Formik } from 'formik';\nimport { string, object, number } from 'yup';\nimport { Col, Container, Row } from 'reactstrap';\nimport HDWalletProvider from '@truffle/hdwallet-provider';\n\nimport SeedPhraseForm from './SeedPhraseForm';\nimport { Selector } from '../../store/user/reducer';\n\nconst withWallet = (Component) =>\n\tconnect((state) => ({ user: Selector.getUser(state) }))(\n\t\t({ user: { data: { username } }}) => {\n\t\tconst [isHDWalletProvider, setIsHDWalletProvider] = useState(window.web3.currentProvider.constructor.name === 'HDWalletProvider');\n\n\t\tconst onSubmit = useCallback(({ phrase }, { setSubmitting, setErrors }) => {\n\t\t\tsetSubmitting(false);\n\n\t\t\ttry {\n\t\t\t\tconst provider = new HDWalletProvider({\n\t\t\t\t\tmnemonic: phrase,\n\t\t\t\t\tproviderOrUrl: 'https://goerli.infura.io/v3/2825ef3aeb9047b7ab6e108500f89b60',\n\t\t\t\t\t// providerOrUrl: 'http://localhost:7545',\n\t\t\t\t\tshareNonce: false\n\t\t\t\t});\n\n\t\t\t\tif (!provider.getAddresses().includes(username.toLowerCase())) {\n\t\t\t\t\tsetErrors({ phrase: 'L\\'address dell\\'account non è incluso in questo wallet' });\n\t\t\t\t} else {\n\t\t\t\t\twindow.web3.setProvider(provider);\n\t\t\t\t\tsetIsHDWalletProvider(true);\n\t\t\t\t}\n\t\t\t} catch(error) {\n\t\t\t\tsetErrors({ phrase: error.message });\n\t\t\t}\n\t\t}, [username, setIsHDWalletProvider]);\n\n\t\tif (!isHDWalletProvider) {\n\t\t\treturn (\n\t\t\t\t<Container fluid>\n\t\t\t\t\t<Row className=\"justify-content-center align-content-center align-items-center\">\n\t\t\t\t\t\t<Col xl={8} sm={8}>\n\t\t\t\t\t\t\t<h3>Seed Phrase</h3>\n\t\t\t\t\t\t\t<p>Inserire la Seed Phrase del proprio wallet per continuare</p>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row className=\"justify-content-center align-content-center align-items-center\">\n\t\t\t\t\t\t<Col xl={8} sm={8}>\n\t\t\t\t\t\t\t<Formik\n\t\t\t\t\t\t\t\tinitialValues={{ phrase: '', index: 0 }}\n\t\t\t\t\t\t\t\tvalidationSchema={object().shape(({\n\t\t\t\t\t\t\t\t\tindex: number()\n\t\t\t\t\t\t\t\t\t\t.min(0, 'L\\'indice deve essere maggiore o uguale a 0')\n\t\t\t\t\t\t\t\t\t\t.integer('L\\'indice deve essere un numero intero')\n\t\t\t\t\t\t\t\t\t\t.required('Inserire l\\'indice dell\\'address'),\n\t\t\t\t\t\t\t\t\tphrase: string()\n\t\t\t\t\t\t\t\t\t\t.required('Inserire la seed phrase.')\n\t\t\t\t\t\t\t\t\t\t.matches(/([a-z]*){12}/, 'La frase deve contenere esattamente 12 parole')\n\t\t\t\t\t\t\t\t}))}\n\t\t\t\t\t\t\t\tonSubmit={onSubmit}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{props => <SeedPhraseForm {...props}/>}\n\t\t\t\t\t\t\t</Formik>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t);\n\t\t} else {\n\t\t\treturn <Component />;\n\t\t}\n\t});\n\nexport default withWallet;\n"],"sourceRoot":""}