{"version":3,"sources":["shared/styled/index.js","store/user/reducer.js","shared/values/index.js","store/utils/index.js","store/user/action.js","config/routes/index.js","store/config/reducers.js","api/user/index.js","store/user/saga.js","store/config/sagas.js","store/index.js","store/config/configureStore.js","App.js","shared/header/data/index.js","shared/header/components/Header.js","Root.js","serviceWorker.js","aws-exports.js","config/aws-amplify/index.js","index.js"],"names":["StyledNavbar","styled","Navbar","StyledFilledButton","Button","StyledLinkButton","StyledSpinner","Spinner","StyledBadge","Badge","StyledTitle","level","user","handleActions","requestLogin","state","Object","assign","isError","isLoading","requestLogout","requestUser","loggedIn","data","payload","loggedOut","userReceived","userError","error","Selector","getUser","LAND","PORTION","PROD_ACTIVITIES","PRODUCT","MAINTENANCE_ACTIVITIES","CERTIFIER","OPERATOR","CONTRACT_TERMS","TRANSFER_OWNERSHIP","roles","createActionType","domain","type","TYPES","REQUEST_USER","USER_RECEIVED","REQUEST_LOGIN","LOGGED_IN","REQUEST_LOGOUT","LOGGED_OUT","USER_ERROR","createActions","Profile","lazy","Admin","Discover","Certify","Register","SignIn","SignOut","PROFILE","REGISTER","CERTIFY","DISCOVER","SIGNIN","SIGNOUT","ADMIN","routes","path","component","rootReducer","combineReducers","signIn","address","password","Auth","then","result","catch","signOut","currentUserInfo","handleLogin","handleLogout","call","put","userSaga","takeLatest","rootSaga","all","store","middlewares","sagaMiddleware","createSagaMiddleware","push","enhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","createStore","run","configureStore","App","Container","fluid","style","margin","Row","className","Col","xl","sm","fallback","size","map","index","key","exact","menu","route","label","connect","pathname","useLocation","useState","isAdmin","setIsAdmin","isCertifier","setIsCertifier","useEffect","attributes","Boolean","parseInt","indexOf","toString","dark","expand","Nav","navbar","width","lg","md","NavItem","active","NavLink","to","offset","align","icon","faUser","color","faSignOutAlt","Root","location","hostname","match","awsmobile","configureAwsAmplify","configure","aws_exports","Storage","addEventListener","web3","Web3","currentProvider","providers","HttpProvider","ethereum","enable","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.58846594.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nimport { Navbar, Badge, Button, Spinner } from 'reactstrap';\n\nconst StyledNavbar = styled(Navbar)`\n\tbackground-color: #006D77 !important;\n`\n\nconst StyledFilledButton = styled(Button)`\n\tbackground-color: #006D77 !important;\n\n\t&:hover {\n\t\tbackground-color: #005059 !important;\n\t}\n\n\t&:active {\n\t\tbackground-color: #005059 !important;\n\t}\n\n\t&:focus {\n\t\tbackground-color: #005059 !important;\n\t}\n`\n\nconst StyledLinkButton = styled(Button)`\n\tcolor: #006D77 !important;\n\n\t&:hover {\n\t\tcolor: #005059 !important;\n\t}\n\n\t&:active {\n\t\tcolor: #005059 !important;\n\t}\n\n\t&:focus {\n\t\tcolor: #005059 !important;\n\t}\n`\n\nconst StyledSpinner = styled(Spinner)`\n\tcolor: #006D77;\n`\nconst StyledBadge = styled(Badge)`\n\tbackground-color: #006D77;\n`\n\nconst StyledTitle = (level) => styled(level)`\n\tcolor: #006D77;\n`\n\nexport { StyledNavbar, StyledFilledButton, StyledLinkButton, StyledSpinner, StyledBadge, StyledTitle };\n","import { handleActions } from 'redux-actions';\nimport {\n\trequestLogin,\n\trequestLogout,\n\trequestUser,\n\tloggedIn,\n\tloggedOut,\n\tuserReceived,\n\tuserError\n} from './action';\n\nconst defaultState = {\n\tdata: null,\n\terror: null,\n\tisLoading: false,\n\tisError: false\n};\n\nconst user = handleActions({\n\t[requestLogin]: (state) => Object.assign({}, state, {\n\t\tisError: false,\n\t\tisLoading: true\n\t}),\n\t[requestLogout]: (state) => Object.assign({}, state, {\n\t\tisError: false,\n\t\tisLoading: true\n\t}),\n\t[requestUser]: (state) => Object.assign({}, state, {\n\t\tisError: false,\n\t\tisLoading: true\n\t}),\n\t[loggedIn]: (state, { payload: { data }}) => Object.assign({}, state, {\n\t\tdata,\n\t\tisError: false,\n\t\tisLoading: false\n\t}),\n\t[loggedOut]: (state) => Object.assign({}, state, {\n\t\tdata: null,\n\t\tisError: false,\n\t\tisLoading: false\n\t}),\n\t[userReceived]: (state, { payload: { data }}) => Object.assign({}, state, {\n\t\tdata,\n\t\tisError: false,\n\t\tisLoading: false\n\t}),\n\t[userError]: (state, { payload: { error }}) => Object.assign({}, state, {\n\t\terror,\n\t\tisError: true,\n\t\tisLoading: false\n\t})\n}, defaultState);\n\nconst Selector = {\n\tgetUser: (state) => state.user\n};\n\nexport default user;\nexport { Selector };\n","const LAND = 'Terreno';\nconst PORTION = 'Porzione di terreno';\nconst PROD_ACTIVITIES = 'Attività legate alla produzione';\nconst PRODUCT = 'Prodotto';\nconst MAINTENANCE_ACTIVITIES = 'Attività di manutenzione';\n\nconst ADMIN = 'Amministratore';\nconst CERTIFIER = 'Certificatore';\nconst OPERATOR = 'Operatore';\nconst USER = 'Utente';\n\nconst CONTRACT_TERMS = 'Termini del contratto';\nconst TRANSFER_OWNERSHIP = 'Trasferimento proprietà'\n\nconst roles = [\n\tUSER,\n\tCERTIFIER,\n\tOPERATOR\n]\n\nexport {\n\tLAND,\n\tPORTION,\n\tPROD_ACTIVITIES,\n\tPRODUCT,\n\tMAINTENANCE_ACTIVITIES,\n\tADMIN,\n\tCERTIFIER,\n\tOPERATOR,\n\tUSER,\n\tCONTRACT_TERMS,\n\tTRANSFER_OWNERSHIP,\n\troles\n};\n","const createActionType = (domain, type) => `${domain}/${type}`;\n\nexport {\n\tcreateActionType\n};\n","import { createActions } from 'redux-actions';\nimport { createActionType } from '../utils';\n\nconst DOMAIN = '@user';\n\nconst TYPES = {\n\tREQUEST_USER: createActionType(DOMAIN, 'REQUEST_USER'),\n\tUSER_RECEIVED: createActionType(DOMAIN, 'USER_RECEIVED'),\n\tREQUEST_LOGIN: createActionType(DOMAIN, 'REQUEST_LOGIN'),\n\tLOGGED_IN: createActionType(DOMAIN, 'LOGGED_IN'),\n\tREQUEST_LOGOUT: createActionType(DOMAIN, 'REQUEST_LOGOUT'),\n\tLOGGED_OUT: createActionType(DOMAIN, 'LOGGED_OUT'),\n\tUSER_ERROR: createActionType(DOMAIN, 'USER_ERROR')\n};\n\nconst {\n\trequestLogin,\n\trequestLogout,\n\trequestUser,\n\tloggedIn,\n\tloggedOut,\n\tuserReceived,\n\tuserError\n} = createActions({\n\t[TYPES.REQUEST_LOGIN]: null,\n\t[TYPES.REQUEST_LOGOUT]: null,\n\t[TYPES.REQUEST_USER]: null,\n\t[TYPES.LOGGED_IN]: ({ data }) => ({ data }),\n\t[TYPES.LOGGED_OUT]: null,\n\t[TYPES.USER_RECEIVED]: ({ data }) => ({ data }),\n\t[TYPES.USER_ERROR]: ({ error }) => ({ error })\n}).user;\n\nexport {\n\tTYPES,\n\trequestLogin,\n\trequestLogout,\n\trequestUser,\n\tloggedIn,\n\tloggedOut,\n\tuserReceived,\n\tuserError\n};\n","import { lazy } from 'react';\n\nconst Profile =  lazy(() => import('../../features/profile'));\nconst Admin =  lazy(() => import('../../features/admin'));\nconst Discover =  lazy(() => import('../../features/discover'));\nconst Certify =  lazy(() => import('../../features/certify'));\nconst Register =  lazy(() => import('../../features/register'));\nconst SignIn =  lazy(() => import('../../features/sign-in'));\nconst SignOut =  lazy(() => import('../../features/sign-out'));\n\nconst PROFILE = '/profile';\nconst REGISTER = '/register';\nconst CERTIFY = '/certify';\nconst DISCOVER = '/discover';\nconst SIGNIN = '/sign-in';\nconst SIGNOUT = '/sign-out';\nconst ADMIN = '/admin'\n\nconst routes = [\n\t{\n\t\tpath: PROFILE,\n\t\tcomponent: Profile\n\t},\n\t{\n\t\tpath: REGISTER,\n\t\tcomponent: Register\n\t},\n\t{\n\t\tpath: CERTIFY,\n\t\tcomponent: Certify\n\t},\n\t{\n\t\tpath: DISCOVER,\n\t\tcomponent: Discover\n\t},\n\t{\n\t\tpath: SIGNIN,\n\t\tcomponent: SignIn\n\t},\n\t{\n\t\tpath: SIGNOUT,\n\t\tcomponent: SignOut\n\t},\n\t{\n\t\tpath: ADMIN,\n\t\tcomponent: Admin\n\t}\n];\n\nexport default routes;\n\nexport { PROFILE, REGISTER, CERTIFY, DISCOVER, SIGNOUT, ADMIN, SIGNIN };\n","import { combineReducers } from 'redux';\n\nimport user from '../user/reducer';\n\nconst rootReducer = combineReducers({\n\tuser\n});\n\nexport default rootReducer;\n","import { Auth } from '@aws-amplify/auth';\n\nconst signIn = (address, password) => Auth.signIn(address, password)\n\t.then((result) => {\n\t\treturn { result };\n\t})\n\t.catch((error) => {\n\t\treturn { error };\n\t});\n\nconst signOut = () => Auth.signOut();\n\nconst currentUserInfo = () => Auth.currentUserInfo()\n\t.then((result) => {\n\t\treturn { result };\n\t})\n\t.catch((error) => {\n\t\treturn { error };\n\t});\n\nexport {\n\tsignIn,\n\tsignOut,\n\tcurrentUserInfo\n}\n","import { takeLatest, put, call } from 'redux-saga/effects';\n\nimport {\n\tloggedIn, loggedOut,\n\tTYPES, userError, userReceived\n} from './action';\n\nimport { currentUserInfo, signIn, signOut } from '../../api/user';\n\nfunction* handleLogin ({ payload: { data }}) {\n\ttry {\n\t\tconst { address, password } = data;\n\n\t\tconst { result, error } = yield call(signIn, address, password);\n\n\t\tif (result) {\n\t\t\tyield put(loggedIn({ data: result }));\n\t\t} else {\n\t\t\tyield put(userError({ error }));\n\t\t}\n\t} catch (error) {\n\t\tyield put(userError({ error }));\n\t}\n}\n\nfunction* handleLogout () {\n\ttry {\n\t\tyield call(signOut);\n\t\tyield put(loggedOut());\n\t} catch (error) {\n\t\tyield put(userError({ error }));\n\t}\n}\n\nfunction* getUser () {\n\ttry {\n\t\tconst { result, error } = yield call(currentUserInfo);\n\n\t\tif (error) {\n\t\t\tyield put(userError({ error }));\n\t\t} else {\n\t\t\tyield put(userReceived({ data: result }));\n\t\t}\n\t} catch (error) {\n\t\tyield put(userError({ error }));\n\t}\n}\n\nconst userSaga = [\n\ttakeLatest(TYPES.REQUEST_LOGIN, handleLogin),\n\ttakeLatest(TYPES.REQUEST_LOGOUT, handleLogout),\n\ttakeLatest(TYPES.REQUEST_USER, getUser),\n];\n\nexport default userSaga;\nexport {\n\thandleLogin,\n\thandleLogout,\n\tgetUser\n}\n","import { all } from 'redux-saga/effects';\n\nimport userSaga from '../user/saga';\n\nfunction* rootSaga() {\n\tyield all([\n\t\t...userSaga\n\t]);\n}\n\nexport default rootSaga;\n","import configureStore from './config';\n\nconst store = configureStore();\n\nexport default store;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './reducers';\nimport rootSaga from './sagas';\n\nconst configureStore = () => {\n\tconst middlewares = [];\n\tconst sagaMiddleware = createSagaMiddleware();\n\n\tmiddlewares.push(sagaMiddleware);\n\n\tconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\tconst enhancers = composeEnhancers(applyMiddleware(...middlewares));\n\n\tconst store = createStore(rootReducer, enhancers);\n\tsagaMiddleware.run(rootSaga);\n\n\treturn store;\n};\n\nexport default configureStore;\n","import React, { Suspense } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { Container, Row, Col } from 'reactstrap';\n\nimport { StyledSpinner } from './shared/styled';\n\nimport routes from './config/routes';\n\nconst App = () => (\n\t<Container fluid style={{ margin: '2rem 0' }}>\n\t\t<Row className=\"justify-content-center\">\n\t\t\t<Col xl={6} sm={10}>\n\t\t\t\t<Suspense fallback={\n\t\t\t\t\t<Container fluid>\n\t\t\t\t\t\t<Row className=\"justify-content-center align-content-center align-items-center\">\n\t\t\t\t\t\t\t<Col xl={1} sm={1}>\n\t\t\t\t\t\t\t\t<StyledSpinner size=\"large\"/>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Container>\n\t\t\t\t\t}>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t{ routes.map(({ path, component }, index) =>\n\t\t\t\t\t\t\t<Route key={index} path={path} component={component}>\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Route exact path=\"/\" component={routes[0].component} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</Suspense>\n\t\t\t</Col>\n\t\t</Row>\n\t</Container>\n);\n\nexport default App;\n","import { REGISTER, CERTIFY, DISCOVER } from '../../../config/routes';\n\nconst menu = [\n\t{\n\t\troute: REGISTER,\n\t\tlabel:'Registra'\n\t},\n\t{\n\t\troute: CERTIFY,\n\t\tlabel: 'Certifica'\n\t},\n\t{\n\t\troute: DISCOVER,\n\t\tlabel: 'Esplora'\n\t}\n]\n\nexport { menu };\n","import React, { useEffect, useState } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { Nav, NavItem, NavLink, Container, Row, Col } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser } from '@fortawesome/free-solid-svg-icons/faUser';\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons/faSignOutAlt';\n\nimport { StyledNavbar } from '../../styled';\n\nimport { menu } from '../data';\nimport { ADMIN, PROFILE, SIGNOUT } from '../../../config/routes';\nimport { Selector } from '../../../store/user/reducer';\nimport { CERTIFIER, roles } from '../../values';\n\nconst Header = ({ user }) => {\n\tconst { pathname } = useLocation();\n\n\tconst [isAdmin, setIsAdmin] = useState(false);\n\tconst [isCertifier, setIsCertifier] = useState(false);\n\tuseEffect(() => {\n\t\tif (user.data) {\n\t\t\tconst { attributes } = user.data;\n\t\t\tsetIsAdmin(Boolean(parseInt(attributes['custom:is_admin'])));\n\t\t\tsetIsCertifier(attributes['custom:role'] === roles.indexOf(CERTIFIER).toString());\n\t\t}\n\t}, [user]);\n\n\treturn (\n\t\t<header>\n\t\t\t{user.data && (\n\t\t\t<StyledNavbar dark expand>\n\t\t\t\t<Nav navbar style={{ width: '100%' }}>\n\t\t\t\t\t<Container fluid>\n\t\t\t\t\t\t<Row style={{ width: '100%' }} className=\"justify-content-center\">\n\t\t\t\t\t\t\t\t{menu.map(({ route, label }, index) => {\n\t\t\t\t\t\t\t\t\tif ((!index && !isCertifier) || (index === 1 && isCertifier) || index > 1) {\n\t\t\t\t\t\t\t\t\t\treturn <Col lg={1} md={2} key={index}>\n\t\t\t\t\t\t\t\t\t\t\t<NavItem active={pathname === route}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Link component={NavLink} to={route}>{label}</Link>\n\t\t\t\t\t\t\t\t\t\t\t</NavItem>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t{isAdmin && (\n\t\t\t\t\t\t\t\t\t<Col lg={{ size: 2, offset: 1 }} md={{ size: 3, offset: 1 }}>\n\t\t\t\t\t\t\t\t\t\t<NavItem active={pathname === ADMIN}>\n\t\t\t\t\t\t\t\t\t\t\t<Link component={NavLink} to={ADMIN}>\n\t\t\t\t\t\t\t\t\t\t\t\tAggiungi Utente\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t</NavItem>\n\t\t\t\t\t\t\t\t\t</Col>)}\n\t\t\t\t\t\t\t\t<Col align=\"center\" lg={{ size: 1, offset: isAdmin ? 0 : 1 }} md={{ size: 1, offset: isAdmin ? 0 : 3 }}>\n\t\t\t\t\t\t\t\t\t<NavItem active={pathname === PROFILE}>\n\t\t\t\t\t\t\t\t\t\t<Link component={NavLink} to={PROFILE}>\n\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faUser} color=\"inherit\" size=\"lg\" />\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t</NavItem>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col align=\"center\" lg={1} md={1}>\n\t\t\t\t\t\t\t\t\t<NavItem active={pathname === SIGNOUT}>\n\t\t\t\t\t\t\t\t\t\t<Link component={NavLink} to={SIGNOUT}>\n\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faSignOutAlt} color=\"inherit\" size=\"lg\" />\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t</NavItem>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Container>\n\t\t\t\t</Nav>\n\t\t\t</StyledNavbar>)}\n\t\t</header>\n\t)\n}\n\nconst mapStateToProps = (state) => ({\n\tuser: Selector.getUser(state)\n});\n\nexport default connect(mapStateToProps)(Header);\n","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\nimport { Header } from './shared/header';\n\nconst Root = () => {\n\treturn (\n\t\t<HashRouter>\n\t\t\t<Header />\n\t\t\t<App />\n\t\t</HashRouter>\n\t);\n}\n\nexport default Root;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/* eslint-disable */\n// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-east-1\",\n    \"aws_cognito_identity_pool_id\": \"us-east-1:126f8d78-55b9-46e9-a4b2-ee5a2198fa6e\",\n    \"aws_cognito_region\": \"us-east-1\",\n    \"aws_user_pools_id\": \"us-east-1_MlRbfPcvO\",\n    \"aws_user_pools_web_client_id\": \"6nqhl0ck17fvuue78qrhf9msbt\",\n    \"oauth\": {},\n    \"aws_user_files_s3_bucket\": \"psab-documents225914-dev\",\n    \"aws_user_files_s3_bucket_region\": \"us-east-1\"\n};\n\n\nexport default awsmobile;\n","import Auth from '@aws-amplify/auth';\nimport Storage from '@aws-amplify/storage';\n\nimport aws_exports from '../../aws-exports';\n\nconst configureAwsAmplify = () => {\n\tAuth.configure(aws_exports);\n\tStorage.configure(aws_exports);\n}\n\nexport default configureAwsAmplify;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// eslint-disable-next-line\nimport Web3 from 'web3';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\nimport configureAwsAmplify from './config/aws-amplify';\n\nwindow.addEventListener('load', () => {\n\tconfigureAwsAmplify();\n\n\tif (typeof window.web3 !== 'undefined') {\n\t\twindow.web3 = new Web3(window.web3.currentProvider);\n\t} else {\n\t\twindow.web3 = new Web3(new Web3.providers.HttpProvider(\"http://localhost:7545\"));\n\t}\n\n    window.ethereum.enable(\n\t\tReactDOM.render(\n\t\t\t<Provider store={store}>\n\t\t\t\t<Root />\n\t\t\t</Provider>,\n\t\t\tdocument.getElementById('root')\n\t\t)\n\t);\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}