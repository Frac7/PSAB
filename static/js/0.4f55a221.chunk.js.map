{"version":3,"sources":["../node_modules/amazon-cognito-identity-js/es/AuthenticationDetails.js","../node_modules/amazon-cognito-identity-js/es/BigInteger.js","../node_modules/amazon-cognito-identity-js/es/AuthenticationHelper.js","../node_modules/amazon-cognito-identity-js/es/CognitoJwtToken.js","../node_modules/amazon-cognito-identity-js/es/CognitoAccessToken.js","../node_modules/amazon-cognito-identity-js/es/CognitoIdToken.js","../node_modules/amazon-cognito-identity-js/es/CognitoRefreshToken.js","../node_modules/amazon-cognito-identity-js/es/CognitoUserSession.js","../node_modules/amazon-cognito-identity-js/es/DateHelper.js","../node_modules/amazon-cognito-identity-js/es/CognitoUserAttribute.js","../node_modules/amazon-cognito-identity-js/es/StorageHelper.js","../node_modules/amazon-cognito-identity-js/es/CognitoUser.js","../node_modules/amazon-cognito-identity-js/es/UserAgent.js","../node_modules/amazon-cognito-identity-js/es/Client.js","../node_modules/amazon-cognito-identity-js/es/CognitoUserPool.js","../node_modules/crypto-js/core.js","../node_modules/crypto-js/lib-typedarrays.js","../node_modules/crypto-js/sha256.js","../node_modules/crypto-js/hmac-sha256.js","../node_modules/crypto-js/hmac.js","../node_modules/crypto-js/enc-base64.js","../node_modules/js-cookie/src/js.cookie.js"],"names":["dbits","AuthenticationDetails","data","_ref","ValidationData","Username","Password","AuthParameters","ClientMetadata","this","validationData","authParameters","clientMetadata","username","password","_proto","prototype","getUsername","getPassword","getValidationData","getAuthParameters","getClientMetadata","BigInteger","a","b","fromString","nbi","inBrowser","navigator","appName","am","i","x","w","j","c","n","xl","xh","l","h","m","v","Math","floor","DB","DM","DV","FV","pow","F1","F2","rr","vv","BI_RC","Array","charCodeAt","int2char","charAt","intAt","s","nbv","r","fromInt","nbits","t","Montgomery","mp","invDigit","mpl","mph","um","mt2","convert","abs","dlShiftTo","divRemTo","compareTo","ZERO","subTo","revert","copyTo","reduce","u0","clamp","drShiftTo","mulTo","y","multiplyTo","sqrTo","squareTo","k","Error","length","mi","sh","max","lShiftTo","bs","cbs","bm","ds","rShiftTo","min","q","pm","pt","ts","ms","nsh","ys","y0","yt","d1","d2","e","ONE","qd","addTo","toString","negate","d","km","p","bitLength","mod","equals","add","subtract","multiply","divide","modPow","callback","z","g","k1","g2","is1","r2","result","randomBytes","nBytes","Buffer","from","CryptoJS","lib","WordArray","random","AuthenticationHelper","PoolName","N","hexHash","smallAValue","generateRandomSmallA","getLargeAValue","infoBits","poolName","getSmallAValue","_this","largeAValue","calculateA","err","hexRandom","generateRandomString","getRandomPassword","randomPassword","getSaltDevices","SaltToHashDevices","getVerifierDevices","verifierDevices","generateHashDevice","deviceGroupKey","_this2","combinedString","hashedString","hash","padHex","verifierDevicesNotPadded","_this3","A","calculateU","B","UHexHash","buf","str","create","hashHex","SHA256","join","hexStr","computehkdf","ikm","salt","infoBitsWordArray","concat","String","fromCharCode","ikmWordArray","saltWordArray","prk","HmacSHA256","hmac","slice","getPasswordAuthenticationKey","serverBValue","_this4","UValue","usernamePassword","usernamePasswordHash","xValue","calculateS","sValue","hkdf","_this5","gModPowXN","err2","getNewPasswordRequiredChallengeUserAttributePrefix","bigInt","hashStr","indexOf","CognitoJwtToken","token","jwtToken","payload","decodePayload","getJwtToken","getExpiration","exp","getIssuedAt","iat","split","JSON","parse","CognitoAccessToken","_CognitoJwtToken","subClass","superClass","_temp","AccessToken","call","Object","constructor","__proto__","CognitoIdToken","IdToken","CognitoRefreshToken","RefreshToken","getToken","CognitoUserSession","ClockDrift","idToken","refreshToken","accessToken","clockDrift","undefined","calculateClockDrift","getIdToken","getRefreshToken","getAccessToken","getClockDrift","Date","isValid","adjusted","monthNames","weekNames","DateHelper","getNowString","now","weekDay","getUTCDay","month","getUTCMonth","day","getUTCDate","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","getUTCFullYear","CognitoUserAttribute","Name","Value","getValue","setValue","value","getName","setName","name","stringify","toJSON","dataMemory","MemoryStorage","setItem","key","getItem","hasOwnProperty","removeItem","clear","StorageHelper","storageWindow","window","localStorage","exception","getStorage","userAgent","CognitoUser","Pool","pool","Session","client","signInUserSession","authenticationFlowType","storage","Storage","keyPrefix","getClientId","userDataKey","setSignInUserSession","clearCachedUserData","cacheTokens","getSignInUserSession","getAuthenticationFlowType","setAuthenticationFlowType","initiateAuth","authDetails","USERNAME","clientMetaData","keys","jsonReq","AuthFlow","ClientId","getUserContextData","UserContextData","request","onFailure","challengeName","ChallengeName","challengeParameters","ChallengeParameters","customChallenge","getCognitoUserSession","AuthenticationResult","onSuccess","authenticateUser","authenticateUserPlainUsernamePassword","authenticateUserDefaultAuth","authenticationHelper","getUserPoolId","dateHelper","deviceKey","DEVICE_KEY","errOnAValue","aValue","SRP_A","CHALLENGE_NAME","USER_ID_FOR_SRP","SRP_B","SALT","getCachedDeviceKeyAndPassword","errOnHkdf","dateNow","message","SECRET_BLOCK","signatureString","Base64","challengeResponses","PASSWORD_CLAIM_SECRET_BLOCK","TIMESTAMP","PASSWORD_CLAIM_SIGNATURE","jsonReqResp","ChallengeResponses","respondToAuthChallenge","challenge","challengeCallback","errChallenge","dataChallenge","code","toLowerCase","clearCachedDeviceKeyAndPassword","errAuthenticate","dataAuthenticate","authenticateUserInternal","PASSWORD","authResult","mfaRequired","selectMFAType","mfaSetup","totpRequired","userAttributes","rawRequiredAttributes","requiredAttributes","userAttributesPrefix","substr","newPasswordRequired","newDeviceMetadata","NewDeviceMetadata","DeviceGroupKey","DeviceKey","errGenHash","deviceSecretVerifierConfig","Salt","PasswordVerifier","DeviceSecretVerifierConfig","DeviceName","errConfirm","dataConfirm","cacheDeviceKeyAndPassword","UserConfirmationNecessary","getDeviceResponse","completeNewPasswordChallenge","newPassword","requiredAttributeData","finalUserAttributes","forEach","NEW_PASSWORD","_this6","errAValue","errHkdf","confirmRegistration","confirmationCode","forceAliasCreation","ConfirmationCode","ForceAliasCreation","sendCustomChallengeAnswer","answerChallenge","_this7","ANSWER","sendMFACode","mfaType","_this8","SMS_MFA_CODE","mfaTypeSelection","SOFTWARE_TOKEN_MFA_CODE","changePassword","oldUserPassword","newUserPassword","PreviousPassword","ProposedPassword","enableMFA","mfaOptions","push","DeliveryMedium","AttributeName","MFAOptions","setUserMfaPreference","smsMfaSettings","softwareTokenMfaSettings","SMSMfaSettings","SoftwareTokenMfaSettings","disableMFA","deleteUser","_this9","clearCachedUser","updateAttributes","attributes","_this10","UserAttributes","getUserData","bypassCache","getUserAttributes","userData","attributeList","attribute","userAttribute","getMFAOptions","createGetUserRequest","promisifyRequest","refreshSessionIfPossible","_this11","Promise","resolve","refresh","refreshSession","params","_this12","getUserDataFromCache","isFetchUserDataAndTokenRequired","fetchUserData","then","_ref$bypassCache","_this13","cacheUserData","deleteAttributes","UserAttributeNames","resendConfirmationCode","getSession","idTokenKey","accessTokenKey","refreshTokenKey","clockDriftKey","parseInt","cachedSession","_this14","REFRESH_TOKEN","lastUserKey","deviceKeyKey","authenticationResult","clearCachedTokens","randomPasswordKey","deviceGroupKeyKey","forgotPassword","inputVerificationCode","confirmPassword","getAttributeVerificationCode","attributeName","verifyAttribute","Code","getDevice","forgetSpecificDevice","forgetDevice","_this15","setDeviceStatusRemembered","DeviceRememberedStatus","setDeviceStatusNotRemembered","listDevices","limit","paginationToken","requestParams","Limit","PaginationToken","globalSignOut","_this16","signOut","sendMFASelectionAnswer","_this17","associateSoftwareToken","_this18","associateSecretCode","SecretCode","verifySoftwareToken","totpCode","friendlyDeviceName","_this19","UserCode","FriendlyDeviceName","errRespond","dataRespond","UserAgent","_wrapNativeSuper","Class","_cache","Map","fn","Function","TypeError","has","get","set","Wrapper","_construct","arguments","_getPrototypeOf","enumerable","writable","configurable","_setPrototypeOf","Parent","args","_isNativeReflectConstruct","Reflect","construct","apply","instance","bind","sham","Proxy","o","setPrototypeOf","getPrototypeOf","CognitoError","_Error","statusCode","Client","region","endpoint","fetchOptions","credentials","operation","reject","response","headers","options","assign","method","mode","cache","body","fetch","resp","json","ok","__type","pop","error","Message","_error","status","ex","CognitoUserPool","UserPoolId","AdvancedSecurityDataCollectionFlag","test","userPoolId","clientId","advancedSecurityDataCollectionFlag","signUp","cognitoUser","returnData","user","userConfirmed","UserConfirmed","userSub","UserSub","codeDeliveryDetails","CodeDeliveryDetails","getCurrentUser","lastAuthUser","AmazonCognitoAdvancedSecurityData","amazonCognitoAdvancedSecurityDataConst","advancedSecurityData","getData","EncodedData","module","exports","F","obj","subtype","C","C_lib","Base","extend","overrides","mixIn","init","$super","properties","propertyName","clone","words","sigBytes","encoder","Hex","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","thatByte","ceil","rcache","m_w","m_z","mask","_r","C_enc","enc","hexChars","bite","hexStrLength","Latin1","latin1Chars","latin1Str","latin1StrLength","Utf8","decodeURIComponent","escape","utf8Str","unescape","encodeURIComponent","BufferedBlockAlgorithm","reset","_data","_nDataBytes","_append","_process","doFlush","dataWords","dataSigBytes","blockSize","nBlocksReady","nWordsReady","_minBufferSize","nBytesReady","offset","_doProcessBlock","processedWords","splice","C_algo","Hasher","cfg","_doReset","update","messageUpdate","finalize","_doFinalize","_createHelper","hasher","_createHmacHelper","HMAC","algo","factory","root","require","ArrayBuffer","superInit","typedArray","Uint8Array","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","buffer","byteOffset","byteLength","typedArrayByteLength","H","K","isPrime","sqrtN","sqrt","factor","getFractionalBits","nPrime","W","_hash","M","f","gamma0x","gamma0","gamma1x","gamma1","maj","sigma0","t1","nBitsTotal","nBitsLeft","undef","_hasher","hasherBlockSize","hasherBlockSizeBytes","oKey","_oKey","iKey","_iKey","oKeyWords","iKeyWords","innerHash","map","_map","base64Chars","triplet","paddingChar","base64Str","base64StrLength","reverseMap","_reverseMap","paddingIndex","bits1","bits2","parseLoop","define","OldCookies","Cookies","api","noConflict","decode","replace","converter","document","path","defaults","expires","toUTCString","write","stringifiedAttributes","cookie","jar","cookies","parts","read","getJSON","remove","withConverter"],"mappings":"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","file":"static/js/0.4f55a221.chunk.js","sourcesContent":["/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @class */\nvar AuthenticationDetails = /*#__PURE__*/function () {\n  /**\n   * Constructs a new AuthenticationDetails object\n   * @param {object=} data Creation options.\n   * @param {string} data.Username User being authenticated.\n   * @param {string} data.Password Plain-text password to authenticate with.\n   * @param {(AttributeArg[])?} data.ValidationData Application extra metadata.\n   * @param {(AttributeArg[])?} data.AuthParamaters Authentication paramaters for custom auth.\n   */\n  function AuthenticationDetails(data) {\n    var _ref = data || {},\n        ValidationData = _ref.ValidationData,\n        Username = _ref.Username,\n        Password = _ref.Password,\n        AuthParameters = _ref.AuthParameters,\n        ClientMetadata = _ref.ClientMetadata;\n\n    this.validationData = ValidationData || {};\n    this.authParameters = AuthParameters || {};\n    this.clientMetadata = ClientMetadata || {};\n    this.username = Username;\n    this.password = Password;\n  }\n  /**\n   * @returns {string} the record's username\n   */\n\n\n  var _proto = AuthenticationDetails.prototype;\n\n  _proto.getUsername = function getUsername() {\n    return this.username;\n  }\n  /**\n   * @returns {string} the record's password\n   */\n  ;\n\n  _proto.getPassword = function getPassword() {\n    return this.password;\n  }\n  /**\n   * @returns {Array} the record's validationData\n   */\n  ;\n\n  _proto.getValidationData = function getValidationData() {\n    return this.validationData;\n  }\n  /**\n   * @returns {Array} the record's authParameters\n   */\n  ;\n\n  _proto.getAuthParameters = function getAuthParameters() {\n    return this.authParameters;\n  }\n  /**\n   * @returns {ClientMetadata} the clientMetadata for a Lambda trigger\n   */\n  ;\n\n  _proto.getClientMetadata = function getClientMetadata() {\n    return this.clientMetadata;\n  };\n\n  return AuthenticationDetails;\n}();\n\nexport { AuthenticationDetails as default };","// A small implementation of BigInteger based on http://www-cs-students.stanford.edu/~tjw/jsbn/\n//\n// All public methods have been removed except the following:\n//   new BigInteger(a, b) (only radix 2, 4, 8, 16 and 32 supported)\n//   toString (only radix 2, 4, 8, 16 and 32 supported)\n//   negate\n//   abs\n//   compareTo\n//   bitLength\n//   mod\n//   equals\n//   add\n//   subtract\n//   multiply\n//   divide\n//   modPow\nexport default BigInteger;\n/*\n * Copyright (c) 2003-2005  Tom Wu\n * All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY\n * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n *\n * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,\n * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER\n * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF\n * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT\n * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n *\n * In addition, the following condition applies:\n *\n * All redistributions must retain an intact copy of this copyright notice\n * and disclaimer.\n */\n// (public) Constructor\n\nfunction BigInteger(a, b) {\n  if (a != null) this.fromString(a, b);\n} // return new, unset BigInteger\n\n\nfunction nbi() {\n  return new BigInteger(null);\n} // Bits per digit\n\n\nvar dbits; // JavaScript engine analysis\n\nvar canary = 0xdeadbeefcafe;\nvar j_lm = (canary & 0xffffff) == 0xefcafe; // am: Compute w_j += (x*this_i), propagate carries,\n// c is initial carry, returns final carry.\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n// We need to select the fastest one that works in this environment.\n// am1: use a single mult and divide to get the high bits,\n// max digit bits should be 26 because\n// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\n\nfunction am1(i, x, w, j, c, n) {\n  while (--n >= 0) {\n    var v = x * this[i++] + w[j] + c;\n    c = Math.floor(v / 0x4000000);\n    w[j++] = v & 0x3ffffff;\n  }\n\n  return c;\n} // am2 avoids a big mult-and-extract completely.\n// Max digit bits should be <= 30 because we do bitwise ops\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\n\n\nfunction am2(i, x, w, j, c, n) {\n  var xl = x & 0x7fff,\n      xh = x >> 15;\n\n  while (--n >= 0) {\n    var l = this[i] & 0x7fff;\n    var h = this[i++] >> 15;\n    var m = xh * l + h * xl;\n    l = xl * l + ((m & 0x7fff) << 15) + w[j] + (c & 0x3fffffff);\n    c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30);\n    w[j++] = l & 0x3fffffff;\n  }\n\n  return c;\n} // Alternately, set max digit bits to 28 since some\n// browsers slow down when dealing with 32-bit numbers.\n\n\nfunction am3(i, x, w, j, c, n) {\n  var xl = x & 0x3fff,\n      xh = x >> 14;\n\n  while (--n >= 0) {\n    var l = this[i] & 0x3fff;\n    var h = this[i++] >> 14;\n    var m = xh * l + h * xl;\n    l = xl * l + ((m & 0x3fff) << 14) + w[j] + c;\n    c = (l >> 28) + (m >> 14) + xh * h;\n    w[j++] = l & 0xfffffff;\n  }\n\n  return c;\n}\n\nvar inBrowser = typeof navigator !== 'undefined';\n\nif (inBrowser && j_lm && navigator.appName == 'Microsoft Internet Explorer') {\n  BigInteger.prototype.am = am2;\n  dbits = 30;\n} else if (inBrowser && j_lm && navigator.appName != 'Netscape') {\n  BigInteger.prototype.am = am1;\n  dbits = 26;\n} else {\n  // Mozilla/Netscape seems to prefer am3\n  BigInteger.prototype.am = am3;\n  dbits = 28;\n}\n\nBigInteger.prototype.DB = dbits;\nBigInteger.prototype.DM = (1 << dbits) - 1;\nBigInteger.prototype.DV = 1 << dbits;\nvar BI_FP = 52;\nBigInteger.prototype.FV = Math.pow(2, BI_FP);\nBigInteger.prototype.F1 = BI_FP - dbits;\nBigInteger.prototype.F2 = 2 * dbits - BI_FP; // Digit conversions\n\nvar BI_RM = '0123456789abcdefghijklmnopqrstuvwxyz';\nvar BI_RC = new Array();\nvar rr, vv;\nrr = '0'.charCodeAt(0);\n\nfor (vv = 0; vv <= 9; ++vv) {\n  BI_RC[rr++] = vv;\n}\n\nrr = 'a'.charCodeAt(0);\n\nfor (vv = 10; vv < 36; ++vv) {\n  BI_RC[rr++] = vv;\n}\n\nrr = 'A'.charCodeAt(0);\n\nfor (vv = 10; vv < 36; ++vv) {\n  BI_RC[rr++] = vv;\n}\n\nfunction int2char(n) {\n  return BI_RM.charAt(n);\n}\n\nfunction intAt(s, i) {\n  var c = BI_RC[s.charCodeAt(i)];\n  return c == null ? -1 : c;\n} // (protected) copy this to r\n\n\nfunction bnpCopyTo(r) {\n  for (var i = this.t - 1; i >= 0; --i) {\n    r[i] = this[i];\n  }\n\n  r.t = this.t;\n  r.s = this.s;\n} // (protected) set from integer value x, -DV <= x < DV\n\n\nfunction bnpFromInt(x) {\n  this.t = 1;\n  this.s = x < 0 ? -1 : 0;\n  if (x > 0) this[0] = x;else if (x < -1) this[0] = x + this.DV;else this.t = 0;\n} // return bigint initialized to value\n\n\nfunction nbv(i) {\n  var r = nbi();\n  r.fromInt(i);\n  return r;\n} // (protected) set from string and radix\n\n\nfunction bnpFromString(s, b) {\n  var k;\n  if (b == 16) k = 4;else if (b == 8) k = 3;else if (b == 2) k = 1;else if (b == 32) k = 5;else if (b == 4) k = 2;else throw new Error('Only radix 2, 4, 8, 16, 32 are supported');\n  this.t = 0;\n  this.s = 0;\n  var i = s.length,\n      mi = false,\n      sh = 0;\n\n  while (--i >= 0) {\n    var x = intAt(s, i);\n\n    if (x < 0) {\n      if (s.charAt(i) == '-') mi = true;\n      continue;\n    }\n\n    mi = false;\n    if (sh == 0) this[this.t++] = x;else if (sh + k > this.DB) {\n      this[this.t - 1] |= (x & (1 << this.DB - sh) - 1) << sh;\n      this[this.t++] = x >> this.DB - sh;\n    } else this[this.t - 1] |= x << sh;\n    sh += k;\n    if (sh >= this.DB) sh -= this.DB;\n  }\n\n  this.clamp();\n  if (mi) BigInteger.ZERO.subTo(this, this);\n} // (protected) clamp off excess high words\n\n\nfunction bnpClamp() {\n  var c = this.s & this.DM;\n\n  while (this.t > 0 && this[this.t - 1] == c) {\n    --this.t;\n  }\n} // (public) return string representation in given radix\n\n\nfunction bnToString(b) {\n  if (this.s < 0) return '-' + this.negate().toString(b);\n  var k;\n  if (b == 16) k = 4;else if (b == 8) k = 3;else if (b == 2) k = 1;else if (b == 32) k = 5;else if (b == 4) k = 2;else throw new Error('Only radix 2, 4, 8, 16, 32 are supported');\n  var km = (1 << k) - 1,\n      d,\n      m = false,\n      r = '',\n      i = this.t;\n  var p = this.DB - i * this.DB % k;\n\n  if (i-- > 0) {\n    if (p < this.DB && (d = this[i] >> p) > 0) {\n      m = true;\n      r = int2char(d);\n    }\n\n    while (i >= 0) {\n      if (p < k) {\n        d = (this[i] & (1 << p) - 1) << k - p;\n        d |= this[--i] >> (p += this.DB - k);\n      } else {\n        d = this[i] >> (p -= k) & km;\n\n        if (p <= 0) {\n          p += this.DB;\n          --i;\n        }\n      }\n\n      if (d > 0) m = true;\n      if (m) r += int2char(d);\n    }\n  }\n\n  return m ? r : '0';\n} // (public) -this\n\n\nfunction bnNegate() {\n  var r = nbi();\n  BigInteger.ZERO.subTo(this, r);\n  return r;\n} // (public) |this|\n\n\nfunction bnAbs() {\n  return this.s < 0 ? this.negate() : this;\n} // (public) return + if this > a, - if this < a, 0 if equal\n\n\nfunction bnCompareTo(a) {\n  var r = this.s - a.s;\n  if (r != 0) return r;\n  var i = this.t;\n  r = i - a.t;\n  if (r != 0) return this.s < 0 ? -r : r;\n\n  while (--i >= 0) {\n    if ((r = this[i] - a[i]) != 0) return r;\n  }\n\n  return 0;\n} // returns bit length of the integer x\n\n\nfunction nbits(x) {\n  var r = 1,\n      t;\n\n  if ((t = x >>> 16) != 0) {\n    x = t;\n    r += 16;\n  }\n\n  if ((t = x >> 8) != 0) {\n    x = t;\n    r += 8;\n  }\n\n  if ((t = x >> 4) != 0) {\n    x = t;\n    r += 4;\n  }\n\n  if ((t = x >> 2) != 0) {\n    x = t;\n    r += 2;\n  }\n\n  if ((t = x >> 1) != 0) {\n    x = t;\n    r += 1;\n  }\n\n  return r;\n} // (public) return the number of bits in \"this\"\n\n\nfunction bnBitLength() {\n  if (this.t <= 0) return 0;\n  return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ this.s & this.DM);\n} // (protected) r = this << n*DB\n\n\nfunction bnpDLShiftTo(n, r) {\n  var i;\n\n  for (i = this.t - 1; i >= 0; --i) {\n    r[i + n] = this[i];\n  }\n\n  for (i = n - 1; i >= 0; --i) {\n    r[i] = 0;\n  }\n\n  r.t = this.t + n;\n  r.s = this.s;\n} // (protected) r = this >> n*DB\n\n\nfunction bnpDRShiftTo(n, r) {\n  for (var i = n; i < this.t; ++i) {\n    r[i - n] = this[i];\n  }\n\n  r.t = Math.max(this.t - n, 0);\n  r.s = this.s;\n} // (protected) r = this << n\n\n\nfunction bnpLShiftTo(n, r) {\n  var bs = n % this.DB;\n  var cbs = this.DB - bs;\n  var bm = (1 << cbs) - 1;\n  var ds = Math.floor(n / this.DB),\n      c = this.s << bs & this.DM,\n      i;\n\n  for (i = this.t - 1; i >= 0; --i) {\n    r[i + ds + 1] = this[i] >> cbs | c;\n    c = (this[i] & bm) << bs;\n  }\n\n  for (i = ds - 1; i >= 0; --i) {\n    r[i] = 0;\n  }\n\n  r[ds] = c;\n  r.t = this.t + ds + 1;\n  r.s = this.s;\n  r.clamp();\n} // (protected) r = this >> n\n\n\nfunction bnpRShiftTo(n, r) {\n  r.s = this.s;\n  var ds = Math.floor(n / this.DB);\n\n  if (ds >= this.t) {\n    r.t = 0;\n    return;\n  }\n\n  var bs = n % this.DB;\n  var cbs = this.DB - bs;\n  var bm = (1 << bs) - 1;\n  r[0] = this[ds] >> bs;\n\n  for (var i = ds + 1; i < this.t; ++i) {\n    r[i - ds - 1] |= (this[i] & bm) << cbs;\n    r[i - ds] = this[i] >> bs;\n  }\n\n  if (bs > 0) r[this.t - ds - 1] |= (this.s & bm) << cbs;\n  r.t = this.t - ds;\n  r.clamp();\n} // (protected) r = this - a\n\n\nfunction bnpSubTo(a, r) {\n  var i = 0,\n      c = 0,\n      m = Math.min(a.t, this.t);\n\n  while (i < m) {\n    c += this[i] - a[i];\n    r[i++] = c & this.DM;\n    c >>= this.DB;\n  }\n\n  if (a.t < this.t) {\n    c -= a.s;\n\n    while (i < this.t) {\n      c += this[i];\n      r[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n\n    c += this.s;\n  } else {\n    c += this.s;\n\n    while (i < a.t) {\n      c -= a[i];\n      r[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n\n    c -= a.s;\n  }\n\n  r.s = c < 0 ? -1 : 0;\n  if (c < -1) r[i++] = this.DV + c;else if (c > 0) r[i++] = c;\n  r.t = i;\n  r.clamp();\n} // (protected) r = this * a, r != this,a (HAC 14.12)\n// \"this\" should be the larger one if appropriate.\n\n\nfunction bnpMultiplyTo(a, r) {\n  var x = this.abs(),\n      y = a.abs();\n  var i = x.t;\n  r.t = i + y.t;\n\n  while (--i >= 0) {\n    r[i] = 0;\n  }\n\n  for (i = 0; i < y.t; ++i) {\n    r[i + x.t] = x.am(0, y[i], r, i, 0, x.t);\n  }\n\n  r.s = 0;\n  r.clamp();\n  if (this.s != a.s) BigInteger.ZERO.subTo(r, r);\n} // (protected) r = this^2, r != this (HAC 14.16)\n\n\nfunction bnpSquareTo(r) {\n  var x = this.abs();\n  var i = r.t = 2 * x.t;\n\n  while (--i >= 0) {\n    r[i] = 0;\n  }\n\n  for (i = 0; i < x.t - 1; ++i) {\n    var c = x.am(i, x[i], r, 2 * i, 0, 1);\n\n    if ((r[i + x.t] += x.am(i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >= x.DV) {\n      r[i + x.t] -= x.DV;\n      r[i + x.t + 1] = 1;\n    }\n  }\n\n  if (r.t > 0) r[r.t - 1] += x.am(i, x[i], r, 2 * i, 0, 1);\n  r.s = 0;\n  r.clamp();\n} // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n// r != q, this != m.  q or r may be null.\n\n\nfunction bnpDivRemTo(m, q, r) {\n  var pm = m.abs();\n  if (pm.t <= 0) return;\n  var pt = this.abs();\n\n  if (pt.t < pm.t) {\n    if (q != null) q.fromInt(0);\n    if (r != null) this.copyTo(r);\n    return;\n  }\n\n  if (r == null) r = nbi();\n  var y = nbi(),\n      ts = this.s,\n      ms = m.s;\n  var nsh = this.DB - nbits(pm[pm.t - 1]); // normalize modulus\n\n  if (nsh > 0) {\n    pm.lShiftTo(nsh, y);\n    pt.lShiftTo(nsh, r);\n  } else {\n    pm.copyTo(y);\n    pt.copyTo(r);\n  }\n\n  var ys = y.t;\n  var y0 = y[ys - 1];\n  if (y0 == 0) return;\n  var yt = y0 * (1 << this.F1) + (ys > 1 ? y[ys - 2] >> this.F2 : 0);\n  var d1 = this.FV / yt,\n      d2 = (1 << this.F1) / yt,\n      e = 1 << this.F2;\n  var i = r.t,\n      j = i - ys,\n      t = q == null ? nbi() : q;\n  y.dlShiftTo(j, t);\n\n  if (r.compareTo(t) >= 0) {\n    r[r.t++] = 1;\n    r.subTo(t, r);\n  }\n\n  BigInteger.ONE.dlShiftTo(ys, t);\n  t.subTo(y, y); // \"negative\" y so we can replace sub with am later\n\n  while (y.t < ys) {\n    y[y.t++] = 0;\n  }\n\n  while (--j >= 0) {\n    // Estimate quotient digit\n    var qd = r[--i] == y0 ? this.DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2);\n\n    if ((r[i] += y.am(0, qd, r, j, 0, ys)) < qd) {\n      // Try it out\n      y.dlShiftTo(j, t);\n      r.subTo(t, r);\n\n      while (r[i] < --qd) {\n        r.subTo(t, r);\n      }\n    }\n  }\n\n  if (q != null) {\n    r.drShiftTo(ys, q);\n    if (ts != ms) BigInteger.ZERO.subTo(q, q);\n  }\n\n  r.t = ys;\n  r.clamp();\n  if (nsh > 0) r.rShiftTo(nsh, r); // Denormalize remainder\n\n  if (ts < 0) BigInteger.ZERO.subTo(r, r);\n} // (public) this mod a\n\n\nfunction bnMod(a) {\n  var r = nbi();\n  this.abs().divRemTo(a, null, r);\n  if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r, r);\n  return r;\n} // (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n// justification:\n//         xy == 1 (mod m)\n//         xy =  1+km\n//   xy(2-xy) = (1+km)(1-km)\n// x[y(2-xy)] = 1-k^2m^2\n// x[y(2-xy)] == 1 (mod m^2)\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n// JS multiply \"overflows\" differently from C/C++, so care is needed here.\n\n\nfunction bnpInvDigit() {\n  if (this.t < 1) return 0;\n  var x = this[0];\n  if ((x & 1) == 0) return 0;\n  var y = x & 3; // y == 1/x mod 2^2\n\n  y = y * (2 - (x & 0xf) * y) & 0xf; // y == 1/x mod 2^4\n\n  y = y * (2 - (x & 0xff) * y) & 0xff; // y == 1/x mod 2^8\n\n  y = y * (2 - ((x & 0xffff) * y & 0xffff)) & 0xffff; // y == 1/x mod 2^16\n  // last step - calculate inverse mod DV directly;\n  // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n\n  y = y * (2 - x * y % this.DV) % this.DV; // y == 1/x mod 2^dbits\n  // we really want the negative inverse, and -DV < y < DV\n\n  return y > 0 ? this.DV - y : -y;\n}\n\nfunction bnEquals(a) {\n  return this.compareTo(a) == 0;\n} // (protected) r = this + a\n\n\nfunction bnpAddTo(a, r) {\n  var i = 0,\n      c = 0,\n      m = Math.min(a.t, this.t);\n\n  while (i < m) {\n    c += this[i] + a[i];\n    r[i++] = c & this.DM;\n    c >>= this.DB;\n  }\n\n  if (a.t < this.t) {\n    c += a.s;\n\n    while (i < this.t) {\n      c += this[i];\n      r[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n\n    c += this.s;\n  } else {\n    c += this.s;\n\n    while (i < a.t) {\n      c += a[i];\n      r[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n\n    c += a.s;\n  }\n\n  r.s = c < 0 ? -1 : 0;\n  if (c > 0) r[i++] = c;else if (c < -1) r[i++] = this.DV + c;\n  r.t = i;\n  r.clamp();\n} // (public) this + a\n\n\nfunction bnAdd(a) {\n  var r = nbi();\n  this.addTo(a, r);\n  return r;\n} // (public) this - a\n\n\nfunction bnSubtract(a) {\n  var r = nbi();\n  this.subTo(a, r);\n  return r;\n} // (public) this * a\n\n\nfunction bnMultiply(a) {\n  var r = nbi();\n  this.multiplyTo(a, r);\n  return r;\n} // (public) this / a\n\n\nfunction bnDivide(a) {\n  var r = nbi();\n  this.divRemTo(a, r, null);\n  return r;\n} // Montgomery reduction\n\n\nfunction Montgomery(m) {\n  this.m = m;\n  this.mp = m.invDigit();\n  this.mpl = this.mp & 0x7fff;\n  this.mph = this.mp >> 15;\n  this.um = (1 << m.DB - 15) - 1;\n  this.mt2 = 2 * m.t;\n} // xR mod m\n\n\nfunction montConvert(x) {\n  var r = nbi();\n  x.abs().dlShiftTo(this.m.t, r);\n  r.divRemTo(this.m, null, r);\n  if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r, r);\n  return r;\n} // x/R mod m\n\n\nfunction montRevert(x) {\n  var r = nbi();\n  x.copyTo(r);\n  this.reduce(r);\n  return r;\n} // x = x/R mod m (HAC 14.32)\n\n\nfunction montReduce(x) {\n  while (x.t <= this.mt2) {\n    // pad x so am has enough room later\n    x[x.t++] = 0;\n  }\n\n  for (var i = 0; i < this.m.t; ++i) {\n    // faster way of calculating u0 = x[i]*mp mod DV\n    var j = x[i] & 0x7fff;\n    var u0 = j * this.mpl + ((j * this.mph + (x[i] >> 15) * this.mpl & this.um) << 15) & x.DM; // use am to combine the multiply-shift-add into one call\n\n    j = i + this.m.t;\n    x[j] += this.m.am(0, u0, x, i, 0, this.m.t); // propagate carry\n\n    while (x[j] >= x.DV) {\n      x[j] -= x.DV;\n      x[++j]++;\n    }\n  }\n\n  x.clamp();\n  x.drShiftTo(this.m.t, x);\n  if (x.compareTo(this.m) >= 0) x.subTo(this.m, x);\n} // r = \"x^2/R mod m\"; x != r\n\n\nfunction montSqrTo(x, r) {\n  x.squareTo(r);\n  this.reduce(r);\n} // r = \"xy/R mod m\"; x,y != r\n\n\nfunction montMulTo(x, y, r) {\n  x.multiplyTo(y, r);\n  this.reduce(r);\n}\n\nMontgomery.prototype.convert = montConvert;\nMontgomery.prototype.revert = montRevert;\nMontgomery.prototype.reduce = montReduce;\nMontgomery.prototype.mulTo = montMulTo;\nMontgomery.prototype.sqrTo = montSqrTo; // (public) this^e % m (HAC 14.85)\n\nfunction bnModPow(e, m, callback) {\n  var i = e.bitLength(),\n      k,\n      r = nbv(1),\n      z = new Montgomery(m);\n  if (i <= 0) return r;else if (i < 18) k = 1;else if (i < 48) k = 3;else if (i < 144) k = 4;else if (i < 768) k = 5;else k = 6; // precomputation\n\n  var g = new Array(),\n      n = 3,\n      k1 = k - 1,\n      km = (1 << k) - 1;\n  g[1] = z.convert(this);\n\n  if (k > 1) {\n    var g2 = nbi();\n    z.sqrTo(g[1], g2);\n\n    while (n <= km) {\n      g[n] = nbi();\n      z.mulTo(g2, g[n - 2], g[n]);\n      n += 2;\n    }\n  }\n\n  var j = e.t - 1,\n      w,\n      is1 = true,\n      r2 = nbi(),\n      t;\n  i = nbits(e[j]) - 1;\n\n  while (j >= 0) {\n    if (i >= k1) w = e[j] >> i - k1 & km;else {\n      w = (e[j] & (1 << i + 1) - 1) << k1 - i;\n      if (j > 0) w |= e[j - 1] >> this.DB + i - k1;\n    }\n    n = k;\n\n    while ((w & 1) == 0) {\n      w >>= 1;\n      --n;\n    }\n\n    if ((i -= n) < 0) {\n      i += this.DB;\n      --j;\n    }\n\n    if (is1) {\n      // ret == 1, don't bother squaring or multiplying it\n      g[w].copyTo(r);\n      is1 = false;\n    } else {\n      while (n > 1) {\n        z.sqrTo(r, r2);\n        z.sqrTo(r2, r);\n        n -= 2;\n      }\n\n      if (n > 0) z.sqrTo(r, r2);else {\n        t = r;\n        r = r2;\n        r2 = t;\n      }\n      z.mulTo(r2, g[w], r);\n    }\n\n    while (j >= 0 && (e[j] & 1 << i) == 0) {\n      z.sqrTo(r, r2);\n      t = r;\n      r = r2;\n      r2 = t;\n\n      if (--i < 0) {\n        i = this.DB - 1;\n        --j;\n      }\n    }\n  }\n\n  var result = z.revert(r);\n  callback(null, result);\n  return result;\n} // protected\n\n\nBigInteger.prototype.copyTo = bnpCopyTo;\nBigInteger.prototype.fromInt = bnpFromInt;\nBigInteger.prototype.fromString = bnpFromString;\nBigInteger.prototype.clamp = bnpClamp;\nBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\nBigInteger.prototype.drShiftTo = bnpDRShiftTo;\nBigInteger.prototype.lShiftTo = bnpLShiftTo;\nBigInteger.prototype.rShiftTo = bnpRShiftTo;\nBigInteger.prototype.subTo = bnpSubTo;\nBigInteger.prototype.multiplyTo = bnpMultiplyTo;\nBigInteger.prototype.squareTo = bnpSquareTo;\nBigInteger.prototype.divRemTo = bnpDivRemTo;\nBigInteger.prototype.invDigit = bnpInvDigit;\nBigInteger.prototype.addTo = bnpAddTo; // public\n\nBigInteger.prototype.toString = bnToString;\nBigInteger.prototype.negate = bnNegate;\nBigInteger.prototype.abs = bnAbs;\nBigInteger.prototype.compareTo = bnCompareTo;\nBigInteger.prototype.bitLength = bnBitLength;\nBigInteger.prototype.mod = bnMod;\nBigInteger.prototype.equals = bnEquals;\nBigInteger.prototype.add = bnAdd;\nBigInteger.prototype.subtract = bnSubtract;\nBigInteger.prototype.multiply = bnMultiply;\nBigInteger.prototype.divide = bnDivide;\nBigInteger.prototype.modPow = bnModPow; // \"constants\"\n\nBigInteger.ZERO = nbv(0);\nBigInteger.ONE = nbv(1);","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Buffer } from 'buffer';\nimport CryptoJS from 'crypto-js/core';\nimport 'crypto-js/lib-typedarrays'; // necessary for crypto js\n\nimport SHA256 from 'crypto-js/sha256';\nimport HmacSHA256 from 'crypto-js/hmac-sha256';\n\nvar randomBytes = function randomBytes(nBytes) {\n  return Buffer.from(CryptoJS.lib.WordArray.random(nBytes).toString(), 'hex');\n};\n\nimport BigInteger from './BigInteger';\nvar initN = 'FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD1' + '29024E088A67CC74020BBEA63B139B22514A08798E3404DD' + 'EF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245' + 'E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7ED' + 'EE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3D' + 'C2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F' + '83655D23DCA3AD961C62F356208552BB9ED529077096966D' + '670C354E4ABC9804F1746C08CA18217C32905E462E36CE3B' + 'E39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9' + 'DE2BCBF6955817183995497CEA956AE515D2261898FA0510' + '15728E5A8AAAC42DAD33170D04507A33A85521ABDF1CBA64' + 'ECFB850458DBEF0A8AEA71575D060C7DB3970F85A6E1E4C7' + 'ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6B' + 'F12FFA06D98A0864D87602733EC86A64521F2B18177B200C' + 'BBE117577A615D6C770988C0BAD946E208E24FA074E5AB31' + '43DB5BFCE0FD108E4B82D120A93AD2CAFFFFFFFFFFFFFFFF';\nvar newPasswordRequiredChallengeUserAttributePrefix = 'userAttributes.';\n/** @class */\n\nvar AuthenticationHelper = /*#__PURE__*/function () {\n  /**\n   * Constructs a new AuthenticationHelper object\n   * @param {string} PoolName Cognito user pool name.\n   */\n  function AuthenticationHelper(PoolName) {\n    this.N = new BigInteger(initN, 16);\n    this.g = new BigInteger('2', 16);\n    this.k = new BigInteger(this.hexHash(\"00\" + this.N.toString(16) + \"0\" + this.g.toString(16)), 16);\n    this.smallAValue = this.generateRandomSmallA();\n    this.getLargeAValue(function () {});\n    this.infoBits = Buffer.from('Caldera Derived Key', 'utf8');\n    this.poolName = PoolName;\n  }\n  /**\n   * @returns {BigInteger} small A, a random number\n   */\n\n\n  var _proto = AuthenticationHelper.prototype;\n\n  _proto.getSmallAValue = function getSmallAValue() {\n    return this.smallAValue;\n  }\n  /**\n   * @param {nodeCallback<BigInteger>} callback Called with (err, largeAValue)\n   * @returns {void}\n   */\n  ;\n\n  _proto.getLargeAValue = function getLargeAValue(callback) {\n    var _this = this;\n\n    if (this.largeAValue) {\n      callback(null, this.largeAValue);\n    } else {\n      this.calculateA(this.smallAValue, function (err, largeAValue) {\n        if (err) {\n          callback(err, null);\n        }\n\n        _this.largeAValue = largeAValue;\n        callback(null, _this.largeAValue);\n      });\n    }\n  }\n  /**\n   * helper function to generate a random big integer\n   * @returns {BigInteger} a random value.\n   * @private\n   */\n  ;\n\n  _proto.generateRandomSmallA = function generateRandomSmallA() {\n    var hexRandom = randomBytes(128).toString('hex');\n    var randomBigInt = new BigInteger(hexRandom, 16);\n    var smallABigInt = randomBigInt.mod(this.N);\n    return smallABigInt;\n  }\n  /**\n   * helper function to generate a random string\n   * @returns {string} a random value.\n   * @private\n   */\n  ;\n\n  _proto.generateRandomString = function generateRandomString() {\n    return randomBytes(40).toString('base64');\n  }\n  /**\n   * @returns {string} Generated random value included in password hash.\n   */\n  ;\n\n  _proto.getRandomPassword = function getRandomPassword() {\n    return this.randomPassword;\n  }\n  /**\n   * @returns {string} Generated random value included in devices hash.\n   */\n  ;\n\n  _proto.getSaltDevices = function getSaltDevices() {\n    return this.SaltToHashDevices;\n  }\n  /**\n   * @returns {string} Value used to verify devices.\n   */\n  ;\n\n  _proto.getVerifierDevices = function getVerifierDevices() {\n    return this.verifierDevices;\n  }\n  /**\n   * Generate salts and compute verifier.\n   * @param {string} deviceGroupKey Devices to generate verifier for.\n   * @param {string} username User to generate verifier for.\n   * @param {nodeCallback<null>} callback Called with (err, null)\n   * @returns {void}\n   */\n  ;\n\n  _proto.generateHashDevice = function generateHashDevice(deviceGroupKey, username, callback) {\n    var _this2 = this;\n\n    this.randomPassword = this.generateRandomString();\n    var combinedString = \"\" + deviceGroupKey + username + \":\" + this.randomPassword;\n    var hashedString = this.hash(combinedString);\n    var hexRandom = randomBytes(16).toString('hex');\n    this.SaltToHashDevices = this.padHex(new BigInteger(hexRandom, 16));\n    this.g.modPow(new BigInteger(this.hexHash(this.SaltToHashDevices + hashedString), 16), this.N, function (err, verifierDevicesNotPadded) {\n      if (err) {\n        callback(err, null);\n      }\n\n      _this2.verifierDevices = _this2.padHex(verifierDevicesNotPadded);\n      callback(null, null);\n    });\n  }\n  /**\n   * Calculate the client's public value A = g^a%N\n   * with the generated random number a\n   * @param {BigInteger} a Randomly generated small A.\n   * @param {nodeCallback<BigInteger>} callback Called with (err, largeAValue)\n   * @returns {void}\n   * @private\n   */\n  ;\n\n  _proto.calculateA = function calculateA(a, callback) {\n    var _this3 = this;\n\n    this.g.modPow(a, this.N, function (err, A) {\n      if (err) {\n        callback(err, null);\n      }\n\n      if (A.mod(_this3.N).equals(BigInteger.ZERO)) {\n        callback(new Error('Illegal paramater. A mod N cannot be 0.'), null);\n      }\n\n      callback(null, A);\n    });\n  }\n  /**\n   * Calculate the client's value U which is the hash of A and B\n   * @param {BigInteger} A Large A value.\n   * @param {BigInteger} B Server B value.\n   * @returns {BigInteger} Computed U value.\n   * @private\n   */\n  ;\n\n  _proto.calculateU = function calculateU(A, B) {\n    this.UHexHash = this.hexHash(this.padHex(A) + this.padHex(B));\n    var finalU = new BigInteger(this.UHexHash, 16);\n    return finalU;\n  }\n  /**\n   * Calculate a hash from a bitArray\n   * @param {Buffer} buf Value to hash.\n   * @returns {String} Hex-encoded hash.\n   * @private\n   */\n  ;\n\n  _proto.hash = function hash(buf) {\n    var str = buf instanceof Buffer ? CryptoJS.lib.WordArray.create(buf) : buf;\n    var hashHex = SHA256(str).toString();\n    return new Array(64 - hashHex.length).join('0') + hashHex;\n  }\n  /**\n   * Calculate a hash from a hex string\n   * @param {String} hexStr Value to hash.\n   * @returns {String} Hex-encoded hash.\n   * @private\n   */\n  ;\n\n  _proto.hexHash = function hexHash(hexStr) {\n    return this.hash(Buffer.from(hexStr, 'hex'));\n  }\n  /**\n   * Standard hkdf algorithm\n   * @param {Buffer} ikm Input key material.\n   * @param {Buffer} salt Salt value.\n   * @returns {Buffer} Strong key material.\n   * @private\n   */\n  ;\n\n  _proto.computehkdf = function computehkdf(ikm, salt) {\n    var infoBitsWordArray = CryptoJS.lib.WordArray.create(Buffer.concat([this.infoBits, Buffer.from(String.fromCharCode(1), 'utf8')]));\n    var ikmWordArray = ikm instanceof Buffer ? CryptoJS.lib.WordArray.create(ikm) : ikm;\n    var saltWordArray = salt instanceof Buffer ? CryptoJS.lib.WordArray.create(salt) : salt;\n    var prk = HmacSHA256(ikmWordArray, saltWordArray);\n    var hmac = HmacSHA256(infoBitsWordArray, prk);\n    return Buffer.from(hmac.toString(), 'hex').slice(0, 16);\n  }\n  /**\n   * Calculates the final hkdf based on computed S value, and computed U value and the key\n   * @param {String} username Username.\n   * @param {String} password Password.\n   * @param {BigInteger} serverBValue Server B value.\n   * @param {BigInteger} salt Generated salt.\n   * @param {nodeCallback<Buffer>} callback Called with (err, hkdfValue)\n   * @returns {void}\n   */\n  ;\n\n  _proto.getPasswordAuthenticationKey = function getPasswordAuthenticationKey(username, password, serverBValue, salt, callback) {\n    var _this4 = this;\n\n    if (serverBValue.mod(this.N).equals(BigInteger.ZERO)) {\n      throw new Error('B cannot be zero.');\n    }\n\n    this.UValue = this.calculateU(this.largeAValue, serverBValue);\n\n    if (this.UValue.equals(BigInteger.ZERO)) {\n      throw new Error('U cannot be zero.');\n    }\n\n    var usernamePassword = \"\" + this.poolName + username + \":\" + password;\n    var usernamePasswordHash = this.hash(usernamePassword);\n    var xValue = new BigInteger(this.hexHash(this.padHex(salt) + usernamePasswordHash), 16);\n    this.calculateS(xValue, serverBValue, function (err, sValue) {\n      if (err) {\n        callback(err, null);\n      }\n\n      var hkdf = _this4.computehkdf(Buffer.from(_this4.padHex(sValue), 'hex'), Buffer.from(_this4.padHex(_this4.UValue.toString(16)), 'hex'));\n\n      callback(null, hkdf);\n    });\n  }\n  /**\n   * Calculates the S value used in getPasswordAuthenticationKey\n   * @param {BigInteger} xValue Salted password hash value.\n   * @param {BigInteger} serverBValue Server B value.\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n  ;\n\n  _proto.calculateS = function calculateS(xValue, serverBValue, callback) {\n    var _this5 = this;\n\n    this.g.modPow(xValue, this.N, function (err, gModPowXN) {\n      if (err) {\n        callback(err, null);\n      }\n\n      var intValue2 = serverBValue.subtract(_this5.k.multiply(gModPowXN));\n      intValue2.modPow(_this5.smallAValue.add(_this5.UValue.multiply(xValue)), _this5.N, function (err2, result) {\n        if (err2) {\n          callback(err2, null);\n        }\n\n        callback(null, result.mod(_this5.N));\n      });\n    });\n  }\n  /**\n   * Return constant newPasswordRequiredChallengeUserAttributePrefix\n   * @return {newPasswordRequiredChallengeUserAttributePrefix} constant prefix value\n   */\n  ;\n\n  _proto.getNewPasswordRequiredChallengeUserAttributePrefix = function getNewPasswordRequiredChallengeUserAttributePrefix() {\n    return newPasswordRequiredChallengeUserAttributePrefix;\n  }\n  /**\n   * Converts a BigInteger (or hex string) to hex format padded with zeroes for hashing\n   * @param {BigInteger|String} bigInt Number or string to pad.\n   * @returns {String} Padded hex string.\n   */\n  ;\n\n  _proto.padHex = function padHex(bigInt) {\n    var hashStr = bigInt.toString(16);\n\n    if (hashStr.length % 2 === 1) {\n      hashStr = \"0\" + hashStr;\n    } else if ('89ABCDEFabcdef'.indexOf(hashStr[0]) !== -1) {\n      hashStr = \"00\" + hashStr;\n    }\n\n    return hashStr;\n  };\n\n  return AuthenticationHelper;\n}();\n\nexport { AuthenticationHelper as default };","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Buffer } from 'buffer';\n/** @class */\n\nvar CognitoJwtToken = /*#__PURE__*/function () {\n  /**\n   * Constructs a new CognitoJwtToken object\n   * @param {string=} token The JWT token.\n   */\n  function CognitoJwtToken(token) {\n    // Assign object\n    this.jwtToken = token || '';\n    this.payload = this.decodePayload();\n  }\n  /**\n   * @returns {string} the record's token.\n   */\n\n\n  var _proto = CognitoJwtToken.prototype;\n\n  _proto.getJwtToken = function getJwtToken() {\n    return this.jwtToken;\n  }\n  /**\n   * @returns {int} the token's expiration (exp member).\n   */\n  ;\n\n  _proto.getExpiration = function getExpiration() {\n    return this.payload.exp;\n  }\n  /**\n   * @returns {int} the token's \"issued at\" (iat member).\n   */\n  ;\n\n  _proto.getIssuedAt = function getIssuedAt() {\n    return this.payload.iat;\n  }\n  /**\n   * @returns {object} the token's payload.\n   */\n  ;\n\n  _proto.decodePayload = function decodePayload() {\n    var payload = this.jwtToken.split('.')[1];\n\n    try {\n      return JSON.parse(Buffer.from(payload, 'base64').toString('utf8'));\n    } catch (err) {\n      return {};\n    }\n  };\n\n  return CognitoJwtToken;\n}();\n\nexport { CognitoJwtToken as default };","function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/*\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\nimport CognitoJwtToken from './CognitoJwtToken';\n/** @class */\n\nvar CognitoAccessToken = /*#__PURE__*/function (_CognitoJwtToken) {\n  _inheritsLoose(CognitoAccessToken, _CognitoJwtToken);\n\n  /**\n   * Constructs a new CognitoAccessToken object\n   * @param {string=} AccessToken The JWT access token.\n   */\n  function CognitoAccessToken(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        AccessToken = _ref.AccessToken;\n\n    return _CognitoJwtToken.call(this, AccessToken || '') || this;\n  }\n\n  return CognitoAccessToken;\n}(CognitoJwtToken);\n\nexport { CognitoAccessToken as default };","function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\nimport CognitoJwtToken from './CognitoJwtToken';\n/** @class */\n\nvar CognitoIdToken = /*#__PURE__*/function (_CognitoJwtToken) {\n  _inheritsLoose(CognitoIdToken, _CognitoJwtToken);\n\n  /**\n   * Constructs a new CognitoIdToken object\n   * @param {string=} IdToken The JWT Id token\n   */\n  function CognitoIdToken(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        IdToken = _ref.IdToken;\n\n    return _CognitoJwtToken.call(this, IdToken || '') || this;\n  }\n\n  return CognitoIdToken;\n}(CognitoJwtToken);\n\nexport { CognitoIdToken as default };","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @class */\nvar CognitoRefreshToken = /*#__PURE__*/function () {\n  /**\n   * Constructs a new CognitoRefreshToken object\n   * @param {string=} RefreshToken The JWT refresh token.\n   */\n  function CognitoRefreshToken(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        RefreshToken = _ref.RefreshToken;\n\n    // Assign object\n    this.token = RefreshToken || '';\n  }\n  /**\n   * @returns {string} the record's token.\n   */\n\n\n  var _proto = CognitoRefreshToken.prototype;\n\n  _proto.getToken = function getToken() {\n    return this.token;\n  };\n\n  return CognitoRefreshToken;\n}();\n\nexport { CognitoRefreshToken as default };","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @class */\nvar CognitoUserSession = /*#__PURE__*/function () {\n  /**\n   * Constructs a new CognitoUserSession object\n   * @param {CognitoIdToken} IdToken The session's Id token.\n   * @param {CognitoRefreshToken=} RefreshToken The session's refresh token.\n   * @param {CognitoAccessToken} AccessToken The session's access token.\n   * @param {int} ClockDrift The saved computer's clock drift or undefined to force calculation.\n   */\n  function CognitoUserSession(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        IdToken = _ref.IdToken,\n        RefreshToken = _ref.RefreshToken,\n        AccessToken = _ref.AccessToken,\n        ClockDrift = _ref.ClockDrift;\n\n    if (AccessToken == null || IdToken == null) {\n      throw new Error('Id token and Access Token must be present.');\n    }\n\n    this.idToken = IdToken;\n    this.refreshToken = RefreshToken;\n    this.accessToken = AccessToken;\n    this.clockDrift = ClockDrift === undefined ? this.calculateClockDrift() : ClockDrift;\n  }\n  /**\n   * @returns {CognitoIdToken} the session's Id token\n   */\n\n\n  var _proto = CognitoUserSession.prototype;\n\n  _proto.getIdToken = function getIdToken() {\n    return this.idToken;\n  }\n  /**\n   * @returns {CognitoRefreshToken} the session's refresh token\n   */\n  ;\n\n  _proto.getRefreshToken = function getRefreshToken() {\n    return this.refreshToken;\n  }\n  /**\n   * @returns {CognitoAccessToken} the session's access token\n   */\n  ;\n\n  _proto.getAccessToken = function getAccessToken() {\n    return this.accessToken;\n  }\n  /**\n   * @returns {int} the session's clock drift\n   */\n  ;\n\n  _proto.getClockDrift = function getClockDrift() {\n    return this.clockDrift;\n  }\n  /**\n   * @returns {int} the computer's clock drift\n   */\n  ;\n\n  _proto.calculateClockDrift = function calculateClockDrift() {\n    var now = Math.floor(new Date() / 1000);\n    var iat = Math.min(this.accessToken.getIssuedAt(), this.idToken.getIssuedAt());\n    return now - iat;\n  }\n  /**\n   * Checks to see if the session is still valid based on session expiry information found\n   * in tokens and the current time (adjusted with clock drift)\n   * @returns {boolean} if the session is still valid\n   */\n  ;\n\n  _proto.isValid = function isValid() {\n    var now = Math.floor(new Date() / 1000);\n    var adjusted = now - this.clockDrift;\n    return adjusted < this.accessToken.getExpiration() && adjusted < this.idToken.getExpiration();\n  };\n\n  return CognitoUserSession;\n}();\n\nexport { CognitoUserSession as default };","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\nvar monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nvar weekNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n/** @class */\n\nvar DateHelper = /*#__PURE__*/function () {\n  function DateHelper() {}\n\n  var _proto = DateHelper.prototype;\n\n  /**\n   * @returns {string} The current time in \"ddd MMM D HH:mm:ss UTC YYYY\" format.\n   */\n  _proto.getNowString = function getNowString() {\n    var now = new Date();\n    var weekDay = weekNames[now.getUTCDay()];\n    var month = monthNames[now.getUTCMonth()];\n    var day = now.getUTCDate();\n    var hours = now.getUTCHours();\n\n    if (hours < 10) {\n      hours = \"0\" + hours;\n    }\n\n    var minutes = now.getUTCMinutes();\n\n    if (minutes < 10) {\n      minutes = \"0\" + minutes;\n    }\n\n    var seconds = now.getUTCSeconds();\n\n    if (seconds < 10) {\n      seconds = \"0\" + seconds;\n    }\n\n    var year = now.getUTCFullYear(); // ddd MMM D HH:mm:ss UTC YYYY\n\n    var dateNow = weekDay + \" \" + month + \" \" + day + \" \" + hours + \":\" + minutes + \":\" + seconds + \" UTC \" + year;\n    return dateNow;\n  };\n\n  return DateHelper;\n}();\n\nexport { DateHelper as default };","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @class */\nvar CognitoUserAttribute = /*#__PURE__*/function () {\n  /**\n   * Constructs a new CognitoUserAttribute object\n   * @param {string=} Name The record's name\n   * @param {string=} Value The record's value\n   */\n  function CognitoUserAttribute(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        Name = _ref.Name,\n        Value = _ref.Value;\n\n    this.Name = Name || '';\n    this.Value = Value || '';\n  }\n  /**\n   * @returns {string} the record's value.\n   */\n\n\n  var _proto = CognitoUserAttribute.prototype;\n\n  _proto.getValue = function getValue() {\n    return this.Value;\n  }\n  /**\n   * Sets the record's value.\n   * @param {string} value The new value.\n   * @returns {CognitoUserAttribute} The record for method chaining.\n   */\n  ;\n\n  _proto.setValue = function setValue(value) {\n    this.Value = value;\n    return this;\n  }\n  /**\n   * @returns {string} the record's name.\n   */\n  ;\n\n  _proto.getName = function getName() {\n    return this.Name;\n  }\n  /**\n   * Sets the record's name\n   * @param {string} name The new name.\n   * @returns {CognitoUserAttribute} The record for method chaining.\n   */\n  ;\n\n  _proto.setName = function setName(name) {\n    this.Name = name;\n    return this;\n  }\n  /**\n   * @returns {string} a string representation of the record.\n   */\n  ;\n\n  _proto.toString = function toString() {\n    return JSON.stringify(this);\n  }\n  /**\n   * @returns {object} a flat object representing the record.\n   */\n  ;\n\n  _proto.toJSON = function toJSON() {\n    return {\n      Name: this.Name,\n      Value: this.Value\n    };\n  };\n\n  return CognitoUserAttribute;\n}();\n\nexport { CognitoUserAttribute as default };","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\nvar dataMemory = {};\n/** @class */\n\nvar MemoryStorage = /*#__PURE__*/function () {\n  function MemoryStorage() {}\n\n  /**\n   * This is used to set a specific item in storage\n   * @param {string} key - the key for the item\n   * @param {object} value - the value\n   * @returns {string} value that was set\n   */\n  MemoryStorage.setItem = function setItem(key, value) {\n    dataMemory[key] = value;\n    return dataMemory[key];\n  }\n  /**\n   * This is used to get a specific key from storage\n   * @param {string} key - the key for the item\n   * This is used to clear the storage\n   * @returns {string} the data item\n   */\n  ;\n\n  MemoryStorage.getItem = function getItem(key) {\n    return Object.prototype.hasOwnProperty.call(dataMemory, key) ? dataMemory[key] : undefined;\n  }\n  /**\n   * This is used to remove an item from storage\n   * @param {string} key - the key being set\n   * @returns {string} value - value that was deleted\n   */\n  ;\n\n  MemoryStorage.removeItem = function removeItem(key) {\n    return delete dataMemory[key];\n  }\n  /**\n   * This is used to clear the storage\n   * @returns {string} nothing\n   */\n  ;\n\n  MemoryStorage.clear = function clear() {\n    dataMemory = {};\n    return dataMemory;\n  };\n\n  return MemoryStorage;\n}();\n/** @class */\n\n\nvar StorageHelper = /*#__PURE__*/function () {\n  /**\n   * This is used to get a storage object\n   * @returns {object} the storage\n   */\n  function StorageHelper() {\n    try {\n      this.storageWindow = window.localStorage;\n      this.storageWindow.setItem('aws.cognito.test-ls', 1);\n      this.storageWindow.removeItem('aws.cognito.test-ls');\n    } catch (exception) {\n      this.storageWindow = MemoryStorage;\n    }\n  }\n  /**\n   * This is used to return the storage\n   * @returns {object} the storage\n   */\n\n\n  var _proto = StorageHelper.prototype;\n\n  _proto.getStorage = function getStorage() {\n    return this.storageWindow;\n  };\n\n  return StorageHelper;\n}();\n\nexport { StorageHelper as default };","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Buffer } from 'buffer';\nimport CryptoJS from 'crypto-js/core';\nimport TypedArrays from 'crypto-js/lib-typedarrays'; // necessary for crypto js\n\nimport Base64 from 'crypto-js/enc-base64';\nimport HmacSHA256 from 'crypto-js/hmac-sha256';\nimport BigInteger from './BigInteger';\nimport AuthenticationHelper from './AuthenticationHelper';\nimport CognitoAccessToken from './CognitoAccessToken';\nimport CognitoIdToken from './CognitoIdToken';\nimport CognitoRefreshToken from './CognitoRefreshToken';\nimport CognitoUserSession from './CognitoUserSession';\nimport DateHelper from './DateHelper';\nimport CognitoUserAttribute from './CognitoUserAttribute';\nimport StorageHelper from './StorageHelper';\n/**\n * @callback nodeCallback\n * @template T result\n * @param {*} err The operation failure reason, or null.\n * @param {T} result The operation result.\n */\n\n/**\n * @callback onFailure\n * @param {*} err Failure reason.\n */\n\n/**\n * @callback onSuccess\n * @template T result\n * @param {T} result The operation result.\n */\n\n/**\n * @callback mfaRequired\n * @param {*} details MFA challenge details.\n */\n\n/**\n * @callback customChallenge\n * @param {*} details Custom challenge details.\n */\n\n/**\n * @callback inputVerificationCode\n * @param {*} data Server response.\n */\n\n/**\n * @callback authSuccess\n * @param {CognitoUserSession} session The new session.\n * @param {bool=} userConfirmationNecessary User must be confirmed.\n */\n\nvar isBrowser = typeof navigator !== 'undefined';\nvar userAgent = isBrowser ? navigator.userAgent : 'nodejs';\n/** @class */\n\nvar CognitoUser = /*#__PURE__*/function () {\n  /**\n   * Constructs a new CognitoUser object\n   * @param {object} data Creation options\n   * @param {string} data.Username The user's username.\n   * @param {CognitoUserPool} data.Pool Pool containing the user.\n   * @param {object} data.Storage Optional storage object.\n   */\n  function CognitoUser(data) {\n    if (data == null || data.Username == null || data.Pool == null) {\n      throw new Error('Username and pool information are required.');\n    }\n\n    this.username = data.Username || '';\n    this.pool = data.Pool;\n    this.Session = null;\n    this.client = data.Pool.client;\n    this.signInUserSession = null;\n    this.authenticationFlowType = 'USER_SRP_AUTH';\n    this.storage = data.Storage || new StorageHelper().getStorage();\n    this.keyPrefix = \"CognitoIdentityServiceProvider.\" + this.pool.getClientId();\n    this.userDataKey = this.keyPrefix + \".\" + this.username + \".userData\";\n  }\n  /**\n   * Sets the session for this user\n   * @param {CognitoUserSession} signInUserSession the session\n   * @returns {void}\n   */\n\n\n  var _proto = CognitoUser.prototype;\n\n  _proto.setSignInUserSession = function setSignInUserSession(signInUserSession) {\n    this.clearCachedUserData();\n    this.signInUserSession = signInUserSession;\n    this.cacheTokens();\n  }\n  /**\n   * @returns {CognitoUserSession} the current session for this user\n   */\n  ;\n\n  _proto.getSignInUserSession = function getSignInUserSession() {\n    return this.signInUserSession;\n  }\n  /**\n   * @returns {string} the user's username\n   */\n  ;\n\n  _proto.getUsername = function getUsername() {\n    return this.username;\n  }\n  /**\n   * @returns {String} the authentication flow type\n   */\n  ;\n\n  _proto.getAuthenticationFlowType = function getAuthenticationFlowType() {\n    return this.authenticationFlowType;\n  }\n  /**\n   * sets authentication flow type\n   * @param {string} authenticationFlowType New value.\n   * @returns {void}\n   */\n  ;\n\n  _proto.setAuthenticationFlowType = function setAuthenticationFlowType(authenticationFlowType) {\n    this.authenticationFlowType = authenticationFlowType;\n  }\n  /**\n   * This is used for authenticating the user through the custom authentication flow.\n   * @param {AuthenticationDetails} authDetails Contains the authentication data\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {customChallenge} callback.customChallenge Custom challenge\n   *        response required to continue.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @returns {void}\n   */\n  ;\n\n  _proto.initiateAuth = function initiateAuth(authDetails, callback) {\n    var _this = this;\n\n    var authParameters = authDetails.getAuthParameters();\n    authParameters.USERNAME = this.username;\n    var clientMetaData = Object.keys(authDetails.getValidationData()).length !== 0 ? authDetails.getValidationData() : authDetails.getClientMetadata();\n    var jsonReq = {\n      AuthFlow: 'CUSTOM_AUTH',\n      ClientId: this.pool.getClientId(),\n      AuthParameters: authParameters,\n      ClientMetadata: clientMetaData\n    };\n\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n\n    this.client.request('InitiateAuth', jsonReq, function (err, data) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      var challengeName = data.ChallengeName;\n      var challengeParameters = data.ChallengeParameters;\n\n      if (challengeName === 'CUSTOM_CHALLENGE') {\n        _this.Session = data.Session;\n        return callback.customChallenge(challengeParameters);\n      }\n\n      _this.signInUserSession = _this.getCognitoUserSession(data.AuthenticationResult);\n\n      _this.cacheTokens();\n\n      return callback.onSuccess(_this.signInUserSession);\n    });\n  }\n  /**\n   * This is used for authenticating the user.\n   * stuff\n   * @param {AuthenticationDetails} authDetails Contains the authentication data\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {newPasswordRequired} callback.newPasswordRequired new\n   *        password and any required attributes are required to continue\n   * @param {mfaRequired} callback.mfaRequired MFA code\n   *        required to continue.\n   * @param {customChallenge} callback.customChallenge Custom challenge\n   *        response required to continue.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @returns {void}\n   */\n  ;\n\n  _proto.authenticateUser = function authenticateUser(authDetails, callback) {\n    if (this.authenticationFlowType === 'USER_PASSWORD_AUTH') {\n      return this.authenticateUserPlainUsernamePassword(authDetails, callback);\n    } else if (this.authenticationFlowType === 'USER_SRP_AUTH' || this.authenticationFlowType === 'CUSTOM_AUTH') {\n      return this.authenticateUserDefaultAuth(authDetails, callback);\n    }\n\n    return callback.onFailure(new Error('Authentication flow type is invalid.'));\n  }\n  /**\n   * PRIVATE ONLY: This is an internal only method and should not\n   * be directly called by the consumers.\n   * It calls the AuthenticationHelper for SRP related\n   * stuff\n   * @param {AuthenticationDetails} authDetails Contains the authentication data\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {newPasswordRequired} callback.newPasswordRequired new\n   *        password and any required attributes are required to continue\n   * @param {mfaRequired} callback.mfaRequired MFA code\n   *        required to continue.\n   * @param {customChallenge} callback.customChallenge Custom challenge\n   *        response required to continue.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @returns {void}\n   */\n  ;\n\n  _proto.authenticateUserDefaultAuth = function authenticateUserDefaultAuth(authDetails, callback) {\n    var _this2 = this;\n\n    var authenticationHelper = new AuthenticationHelper(this.pool.getUserPoolId().split('_')[1]);\n    var dateHelper = new DateHelper();\n    var serverBValue;\n    var salt;\n    var authParameters = {};\n\n    if (this.deviceKey != null) {\n      authParameters.DEVICE_KEY = this.deviceKey;\n    }\n\n    authParameters.USERNAME = this.username;\n    authenticationHelper.getLargeAValue(function (errOnAValue, aValue) {\n      // getLargeAValue callback start\n      if (errOnAValue) {\n        callback.onFailure(errOnAValue);\n      }\n\n      authParameters.SRP_A = aValue.toString(16);\n\n      if (_this2.authenticationFlowType === 'CUSTOM_AUTH') {\n        authParameters.CHALLENGE_NAME = 'SRP_A';\n      }\n\n      var clientMetaData = Object.keys(authDetails.getValidationData()).length !== 0 ? authDetails.getValidationData() : authDetails.getClientMetadata();\n      var jsonReq = {\n        AuthFlow: _this2.authenticationFlowType,\n        ClientId: _this2.pool.getClientId(),\n        AuthParameters: authParameters,\n        ClientMetadata: clientMetaData\n      };\n\n      if (_this2.getUserContextData(_this2.username)) {\n        jsonReq.UserContextData = _this2.getUserContextData(_this2.username);\n      }\n\n      _this2.client.request('InitiateAuth', jsonReq, function (err, data) {\n        if (err) {\n          return callback.onFailure(err);\n        }\n\n        var challengeParameters = data.ChallengeParameters;\n        _this2.username = challengeParameters.USER_ID_FOR_SRP;\n        serverBValue = new BigInteger(challengeParameters.SRP_B, 16);\n        salt = new BigInteger(challengeParameters.SALT, 16);\n\n        _this2.getCachedDeviceKeyAndPassword();\n\n        authenticationHelper.getPasswordAuthenticationKey(_this2.username, authDetails.getPassword(), serverBValue, salt, function (errOnHkdf, hkdf) {\n          // getPasswordAuthenticationKey callback start\n          if (errOnHkdf) {\n            callback.onFailure(errOnHkdf);\n          }\n\n          var dateNow = dateHelper.getNowString();\n          var message = CryptoJS.lib.WordArray.create(Buffer.concat([Buffer.from(_this2.pool.getUserPoolId().split('_')[1], 'utf8'), Buffer.from(_this2.username, 'utf8'), Buffer.from(challengeParameters.SECRET_BLOCK, 'base64'), Buffer.from(dateNow, 'utf8')]));\n          var key = CryptoJS.lib.WordArray.create(hkdf);\n          var signatureString = Base64.stringify(HmacSHA256(message, key));\n          var challengeResponses = {};\n          challengeResponses.USERNAME = _this2.username;\n          challengeResponses.PASSWORD_CLAIM_SECRET_BLOCK = challengeParameters.SECRET_BLOCK;\n          challengeResponses.TIMESTAMP = dateNow;\n          challengeResponses.PASSWORD_CLAIM_SIGNATURE = signatureString;\n\n          if (_this2.deviceKey != null) {\n            challengeResponses.DEVICE_KEY = _this2.deviceKey;\n          }\n\n          var respondToAuthChallenge = function respondToAuthChallenge(challenge, challengeCallback) {\n            return _this2.client.request('RespondToAuthChallenge', challenge, function (errChallenge, dataChallenge) {\n              if (errChallenge && errChallenge.code === 'ResourceNotFoundException' && errChallenge.message.toLowerCase().indexOf('device') !== -1) {\n                challengeResponses.DEVICE_KEY = null;\n                _this2.deviceKey = null;\n                _this2.randomPassword = null;\n                _this2.deviceGroupKey = null;\n\n                _this2.clearCachedDeviceKeyAndPassword();\n\n                return respondToAuthChallenge(challenge, challengeCallback);\n              }\n\n              return challengeCallback(errChallenge, dataChallenge);\n            });\n          };\n\n          var jsonReqResp = {\n            ChallengeName: 'PASSWORD_VERIFIER',\n            ClientId: _this2.pool.getClientId(),\n            ChallengeResponses: challengeResponses,\n            Session: data.Session,\n            ClientMetadata: clientMetaData\n          };\n\n          if (_this2.getUserContextData()) {\n            jsonReqResp.UserContextData = _this2.getUserContextData();\n          }\n\n          respondToAuthChallenge(jsonReqResp, function (errAuthenticate, dataAuthenticate) {\n            if (errAuthenticate) {\n              return callback.onFailure(errAuthenticate);\n            }\n\n            return _this2.authenticateUserInternal(dataAuthenticate, authenticationHelper, callback);\n          });\n          return undefined; // getPasswordAuthenticationKey callback end\n        });\n        return undefined;\n      }); // getLargeAValue callback end\n\n    });\n  }\n  /**\n   * PRIVATE ONLY: This is an internal only method and should not\n   * be directly called by the consumers.\n   * @param {AuthenticationDetails} authDetails Contains the authentication data.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {mfaRequired} callback.mfaRequired MFA code\n   *        required to continue.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @returns {void}\n   */\n  ;\n\n  _proto.authenticateUserPlainUsernamePassword = function authenticateUserPlainUsernamePassword(authDetails, callback) {\n    var _this3 = this;\n\n    var authParameters = {};\n    authParameters.USERNAME = this.username;\n    authParameters.PASSWORD = authDetails.getPassword();\n\n    if (!authParameters.PASSWORD) {\n      callback.onFailure(new Error('PASSWORD parameter is required'));\n      return;\n    }\n\n    var authenticationHelper = new AuthenticationHelper(this.pool.getUserPoolId().split('_')[1]);\n    this.getCachedDeviceKeyAndPassword();\n\n    if (this.deviceKey != null) {\n      authParameters.DEVICE_KEY = this.deviceKey;\n    }\n\n    var clientMetaData = Object.keys(authDetails.getValidationData()).length !== 0 ? authDetails.getValidationData() : authDetails.getClientMetadata();\n    var jsonReq = {\n      AuthFlow: 'USER_PASSWORD_AUTH',\n      ClientId: this.pool.getClientId(),\n      AuthParameters: authParameters,\n      ClientMetadata: clientMetaData\n    };\n\n    if (this.getUserContextData(this.username)) {\n      jsonReq.UserContextData = this.getUserContextData(this.username);\n    } // USER_PASSWORD_AUTH happens in a single round-trip: client sends userName and password,\n    // Cognito UserPools verifies password and returns tokens.\n\n\n    this.client.request('InitiateAuth', jsonReq, function (err, authResult) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      return _this3.authenticateUserInternal(authResult, authenticationHelper, callback);\n    });\n  }\n  /**\n   * PRIVATE ONLY: This is an internal only method and should not\n   * be directly called by the consumers.\n   * @param {object} dataAuthenticate authentication data\n   * @param {object} authenticationHelper helper created\n   * @param {callback} callback passed on from caller\n   * @returns {void}\n   */\n  ;\n\n  _proto.authenticateUserInternal = function authenticateUserInternal(dataAuthenticate, authenticationHelper, callback) {\n    var _this4 = this;\n\n    var challengeName = dataAuthenticate.ChallengeName;\n    var challengeParameters = dataAuthenticate.ChallengeParameters;\n\n    if (challengeName === 'SMS_MFA') {\n      this.Session = dataAuthenticate.Session;\n      return callback.mfaRequired(challengeName, challengeParameters);\n    }\n\n    if (challengeName === 'SELECT_MFA_TYPE') {\n      this.Session = dataAuthenticate.Session;\n      return callback.selectMFAType(challengeName, challengeParameters);\n    }\n\n    if (challengeName === 'MFA_SETUP') {\n      this.Session = dataAuthenticate.Session;\n      return callback.mfaSetup(challengeName, challengeParameters);\n    }\n\n    if (challengeName === 'SOFTWARE_TOKEN_MFA') {\n      this.Session = dataAuthenticate.Session;\n      return callback.totpRequired(challengeName, challengeParameters);\n    }\n\n    if (challengeName === 'CUSTOM_CHALLENGE') {\n      this.Session = dataAuthenticate.Session;\n      return callback.customChallenge(challengeParameters);\n    }\n\n    if (challengeName === 'NEW_PASSWORD_REQUIRED') {\n      this.Session = dataAuthenticate.Session;\n      var userAttributes = null;\n      var rawRequiredAttributes = null;\n      var requiredAttributes = [];\n      var userAttributesPrefix = authenticationHelper.getNewPasswordRequiredChallengeUserAttributePrefix();\n\n      if (challengeParameters) {\n        userAttributes = JSON.parse(dataAuthenticate.ChallengeParameters.userAttributes);\n        rawRequiredAttributes = JSON.parse(dataAuthenticate.ChallengeParameters.requiredAttributes);\n      }\n\n      if (rawRequiredAttributes) {\n        for (var i = 0; i < rawRequiredAttributes.length; i++) {\n          requiredAttributes[i] = rawRequiredAttributes[i].substr(userAttributesPrefix.length);\n        }\n      }\n\n      return callback.newPasswordRequired(userAttributes, requiredAttributes);\n    }\n\n    if (challengeName === 'DEVICE_SRP_AUTH') {\n      this.getDeviceResponse(callback);\n      return undefined;\n    }\n\n    this.signInUserSession = this.getCognitoUserSession(dataAuthenticate.AuthenticationResult);\n    this.challengeName = challengeName;\n    this.cacheTokens();\n    var newDeviceMetadata = dataAuthenticate.AuthenticationResult.NewDeviceMetadata;\n\n    if (newDeviceMetadata == null) {\n      return callback.onSuccess(this.signInUserSession);\n    }\n\n    authenticationHelper.generateHashDevice(dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceGroupKey, dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey, function (errGenHash) {\n      if (errGenHash) {\n        return callback.onFailure(errGenHash);\n      }\n\n      var deviceSecretVerifierConfig = {\n        Salt: Buffer.from(authenticationHelper.getSaltDevices(), 'hex').toString('base64'),\n        PasswordVerifier: Buffer.from(authenticationHelper.getVerifierDevices(), 'hex').toString('base64')\n      };\n      _this4.verifierDevices = deviceSecretVerifierConfig.PasswordVerifier;\n      _this4.deviceGroupKey = newDeviceMetadata.DeviceGroupKey;\n      _this4.randomPassword = authenticationHelper.getRandomPassword();\n\n      _this4.client.request('ConfirmDevice', {\n        DeviceKey: newDeviceMetadata.DeviceKey,\n        AccessToken: _this4.signInUserSession.getAccessToken().getJwtToken(),\n        DeviceSecretVerifierConfig: deviceSecretVerifierConfig,\n        DeviceName: userAgent\n      }, function (errConfirm, dataConfirm) {\n        if (errConfirm) {\n          return callback.onFailure(errConfirm);\n        }\n\n        _this4.deviceKey = dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey;\n\n        _this4.cacheDeviceKeyAndPassword();\n\n        if (dataConfirm.UserConfirmationNecessary === true) {\n          return callback.onSuccess(_this4.signInUserSession, dataConfirm.UserConfirmationNecessary);\n        }\n\n        return callback.onSuccess(_this4.signInUserSession);\n      });\n\n      return undefined;\n    });\n    return undefined;\n  }\n  /**\n   * This method is user to complete the NEW_PASSWORD_REQUIRED challenge.\n   * Pass the new password with any new user attributes to be updated.\n   * User attribute keys must be of format userAttributes.<attribute_name>.\n   * @param {string} newPassword new password for this user\n   * @param {object} requiredAttributeData map with values for all required attributes\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {mfaRequired} callback.mfaRequired MFA code required to continue.\n   * @param {customChallenge} callback.customChallenge Custom challenge\n   *         response required to continue.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */\n  ;\n\n  _proto.completeNewPasswordChallenge = function completeNewPasswordChallenge(newPassword, requiredAttributeData, callback, clientMetadata) {\n    var _this5 = this;\n\n    if (!newPassword) {\n      return callback.onFailure(new Error('New password is required.'));\n    }\n\n    var authenticationHelper = new AuthenticationHelper(this.pool.getUserPoolId().split('_')[1]);\n    var userAttributesPrefix = authenticationHelper.getNewPasswordRequiredChallengeUserAttributePrefix();\n    var finalUserAttributes = {};\n\n    if (requiredAttributeData) {\n      Object.keys(requiredAttributeData).forEach(function (key) {\n        finalUserAttributes[userAttributesPrefix + key] = requiredAttributeData[key];\n      });\n    }\n\n    finalUserAttributes.NEW_PASSWORD = newPassword;\n    finalUserAttributes.USERNAME = this.username;\n    var jsonReq = {\n      ChallengeName: 'NEW_PASSWORD_REQUIRED',\n      ClientId: this.pool.getClientId(),\n      ChallengeResponses: finalUserAttributes,\n      Session: this.Session,\n      ClientMetadata: clientMetadata\n    };\n\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n\n    this.client.request('RespondToAuthChallenge', jsonReq, function (errAuthenticate, dataAuthenticate) {\n      if (errAuthenticate) {\n        return callback.onFailure(errAuthenticate);\n      }\n\n      return _this5.authenticateUserInternal(dataAuthenticate, authenticationHelper, callback);\n    });\n    return undefined;\n  }\n  /**\n   * This is used to get a session using device authentication. It is called at the end of user\n   * authentication\n   *\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   * @private\n   */\n  ;\n\n  _proto.getDeviceResponse = function getDeviceResponse(callback, clientMetadata) {\n    var _this6 = this;\n\n    var authenticationHelper = new AuthenticationHelper(this.deviceGroupKey);\n    var dateHelper = new DateHelper();\n    var authParameters = {};\n    authParameters.USERNAME = this.username;\n    authParameters.DEVICE_KEY = this.deviceKey;\n    authenticationHelper.getLargeAValue(function (errAValue, aValue) {\n      // getLargeAValue callback start\n      if (errAValue) {\n        callback.onFailure(errAValue);\n      }\n\n      authParameters.SRP_A = aValue.toString(16);\n      var jsonReq = {\n        ChallengeName: 'DEVICE_SRP_AUTH',\n        ClientId: _this6.pool.getClientId(),\n        ChallengeResponses: authParameters,\n        ClientMetadata: clientMetadata\n      };\n\n      if (_this6.getUserContextData()) {\n        jsonReq.UserContextData = _this6.getUserContextData();\n      }\n\n      _this6.client.request('RespondToAuthChallenge', jsonReq, function (err, data) {\n        if (err) {\n          return callback.onFailure(err);\n        }\n\n        var challengeParameters = data.ChallengeParameters;\n        var serverBValue = new BigInteger(challengeParameters.SRP_B, 16);\n        var salt = new BigInteger(challengeParameters.SALT, 16);\n        authenticationHelper.getPasswordAuthenticationKey(_this6.deviceKey, _this6.randomPassword, serverBValue, salt, function (errHkdf, hkdf) {\n          // getPasswordAuthenticationKey callback start\n          if (errHkdf) {\n            return callback.onFailure(errHkdf);\n          }\n\n          var dateNow = dateHelper.getNowString();\n          var message = CryptoJS.lib.WordArray.create(Buffer.concat([Buffer.from(_this6.deviceGroupKey, 'utf8'), Buffer.from(_this6.deviceKey, 'utf8'), Buffer.from(challengeParameters.SECRET_BLOCK, 'base64'), Buffer.from(dateNow, 'utf8')]));\n          var key = CryptoJS.lib.WordArray.create(hkdf);\n          var signatureString = Base64.stringify(HmacSHA256(message, key));\n          var challengeResponses = {};\n          challengeResponses.USERNAME = _this6.username;\n          challengeResponses.PASSWORD_CLAIM_SECRET_BLOCK = challengeParameters.SECRET_BLOCK;\n          challengeResponses.TIMESTAMP = dateNow;\n          challengeResponses.PASSWORD_CLAIM_SIGNATURE = signatureString;\n          challengeResponses.DEVICE_KEY = _this6.deviceKey;\n          var jsonReqResp = {\n            ChallengeName: 'DEVICE_PASSWORD_VERIFIER',\n            ClientId: _this6.pool.getClientId(),\n            ChallengeResponses: challengeResponses,\n            Session: data.Session\n          };\n\n          if (_this6.getUserContextData()) {\n            jsonReqResp.UserContextData = _this6.getUserContextData();\n          }\n\n          _this6.client.request('RespondToAuthChallenge', jsonReqResp, function (errAuthenticate, dataAuthenticate) {\n            if (errAuthenticate) {\n              return callback.onFailure(errAuthenticate);\n            }\n\n            _this6.signInUserSession = _this6.getCognitoUserSession(dataAuthenticate.AuthenticationResult);\n\n            _this6.cacheTokens();\n\n            return callback.onSuccess(_this6.signInUserSession);\n          });\n\n          return undefined; // getPasswordAuthenticationKey callback end\n        });\n        return undefined;\n      }); // getLargeAValue callback end\n\n    });\n  }\n  /**\n   * This is used for a certain user to confirm the registration by using a confirmation code\n   * @param {string} confirmationCode Code entered by user.\n   * @param {bool} forceAliasCreation Allow migrating from an existing email / phone number.\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */\n  ;\n\n  _proto.confirmRegistration = function confirmRegistration(confirmationCode, forceAliasCreation, callback, clientMetadata) {\n    var jsonReq = {\n      ClientId: this.pool.getClientId(),\n      ConfirmationCode: confirmationCode,\n      Username: this.username,\n      ForceAliasCreation: forceAliasCreation,\n      ClientMetadata: clientMetadata\n    };\n\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n\n    this.client.request('ConfirmSignUp', jsonReq, function (err) {\n      if (err) {\n        return callback(err, null);\n      }\n\n      return callback(null, 'SUCCESS');\n    });\n  }\n  /**\n   * This is used by the user once he has the responses to a custom challenge\n   * @param {string} answerChallenge The custom challenge answer.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {customChallenge} callback.customChallenge\n   *    Custom challenge response required to continue.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */\n  ;\n\n  _proto.sendCustomChallengeAnswer = function sendCustomChallengeAnswer(answerChallenge, callback, clientMetadata) {\n    var _this7 = this;\n\n    var challengeResponses = {};\n    challengeResponses.USERNAME = this.username;\n    challengeResponses.ANSWER = answerChallenge;\n    var authenticationHelper = new AuthenticationHelper(this.pool.getUserPoolId().split('_')[1]);\n    this.getCachedDeviceKeyAndPassword();\n\n    if (this.deviceKey != null) {\n      challengeResponses.DEVICE_KEY = this.deviceKey;\n    }\n\n    var jsonReq = {\n      ChallengeName: 'CUSTOM_CHALLENGE',\n      ChallengeResponses: challengeResponses,\n      ClientId: this.pool.getClientId(),\n      Session: this.Session,\n      ClientMetadata: clientMetadata\n    };\n\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n\n    this.client.request('RespondToAuthChallenge', jsonReq, function (err, data) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      return _this7.authenticateUserInternal(data, authenticationHelper, callback);\n    });\n  }\n  /**\n   * This is used by the user once he has an MFA code\n   * @param {string} confirmationCode The MFA code entered by the user.\n   * @param {object} callback Result callback map.\n   * @param {string} mfaType The mfa we are replying to.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */\n  ;\n\n  _proto.sendMFACode = function sendMFACode(confirmationCode, callback, mfaType, clientMetadata) {\n    var _this8 = this;\n\n    var challengeResponses = {};\n    challengeResponses.USERNAME = this.username;\n    challengeResponses.SMS_MFA_CODE = confirmationCode;\n    var mfaTypeSelection = mfaType || 'SMS_MFA';\n\n    if (mfaTypeSelection === 'SOFTWARE_TOKEN_MFA') {\n      challengeResponses.SOFTWARE_TOKEN_MFA_CODE = confirmationCode;\n    }\n\n    if (this.deviceKey != null) {\n      challengeResponses.DEVICE_KEY = this.deviceKey;\n    }\n\n    var jsonReq = {\n      ChallengeName: mfaTypeSelection,\n      ChallengeResponses: challengeResponses,\n      ClientId: this.pool.getClientId(),\n      Session: this.Session,\n      ClientMetadata: clientMetadata\n    };\n\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n\n    this.client.request('RespondToAuthChallenge', jsonReq, function (err, dataAuthenticate) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      var challengeName = dataAuthenticate.ChallengeName;\n\n      if (challengeName === 'DEVICE_SRP_AUTH') {\n        _this8.getDeviceResponse(callback);\n\n        return undefined;\n      }\n\n      _this8.signInUserSession = _this8.getCognitoUserSession(dataAuthenticate.AuthenticationResult);\n\n      _this8.cacheTokens();\n\n      if (dataAuthenticate.AuthenticationResult.NewDeviceMetadata == null) {\n        return callback.onSuccess(_this8.signInUserSession);\n      }\n\n      var authenticationHelper = new AuthenticationHelper(_this8.pool.getUserPoolId().split('_')[1]);\n      authenticationHelper.generateHashDevice(dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceGroupKey, dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey, function (errGenHash) {\n        if (errGenHash) {\n          return callback.onFailure(errGenHash);\n        }\n\n        var deviceSecretVerifierConfig = {\n          Salt: Buffer.from(authenticationHelper.getSaltDevices(), 'hex').toString('base64'),\n          PasswordVerifier: Buffer.from(authenticationHelper.getVerifierDevices(), 'hex').toString('base64')\n        };\n        _this8.verifierDevices = deviceSecretVerifierConfig.PasswordVerifier;\n        _this8.deviceGroupKey = dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceGroupKey;\n        _this8.randomPassword = authenticationHelper.getRandomPassword();\n\n        _this8.client.request('ConfirmDevice', {\n          DeviceKey: dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey,\n          AccessToken: _this8.signInUserSession.getAccessToken().getJwtToken(),\n          DeviceSecretVerifierConfig: deviceSecretVerifierConfig,\n          DeviceName: userAgent\n        }, function (errConfirm, dataConfirm) {\n          if (errConfirm) {\n            return callback.onFailure(errConfirm);\n          }\n\n          _this8.deviceKey = dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey;\n\n          _this8.cacheDeviceKeyAndPassword();\n\n          if (dataConfirm.UserConfirmationNecessary === true) {\n            return callback.onSuccess(_this8.signInUserSession, dataConfirm.UserConfirmationNecessary);\n          }\n\n          return callback.onSuccess(_this8.signInUserSession);\n        });\n\n        return undefined;\n      });\n      return undefined;\n    });\n  }\n  /**\n   * This is used by an authenticated user to change the current password\n   * @param {string} oldUserPassword The current password.\n   * @param {string} newUserPassword The requested new password.\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */\n  ;\n\n  _proto.changePassword = function changePassword(oldUserPassword, newUserPassword, callback, clientMetadata) {\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.request('ChangePassword', {\n      PreviousPassword: oldUserPassword,\n      ProposedPassword: newUserPassword,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      ClientMetadata: clientMetadata\n    }, function (err) {\n      if (err) {\n        return callback(err, null);\n      }\n\n      return callback(null, 'SUCCESS');\n    });\n    return undefined;\n  }\n  /**\n   * This is used by an authenticated user to enable MFA for itself\n   * @deprecated\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n  ;\n\n  _proto.enableMFA = function enableMFA(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    var mfaOptions = [];\n    var mfaEnabled = {\n      DeliveryMedium: 'SMS',\n      AttributeName: 'phone_number'\n    };\n    mfaOptions.push(mfaEnabled);\n    this.client.request('SetUserSettings', {\n      MFAOptions: mfaOptions,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err) {\n      if (err) {\n        return callback(err, null);\n      }\n\n      return callback(null, 'SUCCESS');\n    });\n    return undefined;\n  }\n  /**\n   * This is used by an authenticated user to enable MFA for itself\n   * @param {IMfaSettings} smsMfaSettings the sms mfa settings\n   * @param {IMFASettings} softwareTokenMfaSettings the software token mfa settings\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n  ;\n\n  _proto.setUserMfaPreference = function setUserMfaPreference(smsMfaSettings, softwareTokenMfaSettings, callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.request('SetUserMFAPreference', {\n      SMSMfaSettings: smsMfaSettings,\n      SoftwareTokenMfaSettings: softwareTokenMfaSettings,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err) {\n      if (err) {\n        return callback(err, null);\n      }\n\n      return callback(null, 'SUCCESS');\n    });\n    return undefined;\n  }\n  /**\n   * This is used by an authenticated user to disable MFA for itself\n   * @deprecated\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n  ;\n\n  _proto.disableMFA = function disableMFA(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    var mfaOptions = [];\n    this.client.request('SetUserSettings', {\n      MFAOptions: mfaOptions,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err) {\n      if (err) {\n        return callback(err, null);\n      }\n\n      return callback(null, 'SUCCESS');\n    });\n    return undefined;\n  }\n  /**\n   * This is used by an authenticated user to delete itself\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */\n  ;\n\n  _proto.deleteUser = function deleteUser(callback, clientMetadata) {\n    var _this9 = this;\n\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.request('DeleteUser', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      ClientMetadata: clientMetadata\n    }, function (err) {\n      if (err) {\n        return callback(err, null);\n      }\n\n      _this9.clearCachedUser();\n\n      return callback(null, 'SUCCESS');\n    });\n    return undefined;\n  }\n  /**\n   * @typedef {CognitoUserAttribute | { Name:string, Value:string }} AttributeArg\n   */\n\n  /**\n   * This is used by an authenticated user to change a list of attributes\n   * @param {AttributeArg[]} attributes A list of the new user attributes.\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */\n  ;\n\n  _proto.updateAttributes = function updateAttributes(attributes, callback, clientMetadata) {\n    var _this10 = this;\n\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.request('UpdateUserAttributes', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      UserAttributes: attributes,\n      ClientMetadata: clientMetadata\n    }, function (err) {\n      if (err) {\n        return callback(err, null);\n      } // update cached user\n\n\n      return _this10.getUserData(function () {\n        return callback(null, 'SUCCESS');\n      }, {\n        bypassCache: true\n      });\n    });\n    return undefined;\n  }\n  /**\n   * This is used by an authenticated user to get a list of attributes\n   * @param {nodeCallback<CognitoUserAttribute[]>} callback Called on success or error.\n   * @returns {void}\n   */\n  ;\n\n  _proto.getUserAttributes = function getUserAttributes(callback) {\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.request('GetUser', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err, userData) {\n      if (err) {\n        return callback(err, null);\n      }\n\n      var attributeList = [];\n\n      for (var i = 0; i < userData.UserAttributes.length; i++) {\n        var attribute = {\n          Name: userData.UserAttributes[i].Name,\n          Value: userData.UserAttributes[i].Value\n        };\n        var userAttribute = new CognitoUserAttribute(attribute);\n        attributeList.push(userAttribute);\n      }\n\n      return callback(null, attributeList);\n    });\n    return undefined;\n  }\n  /**\n   * This is used by an authenticated user to get the MFAOptions\n   * @param {nodeCallback<MFAOptions>} callback Called on success or error.\n   * @returns {void}\n   */\n  ;\n\n  _proto.getMFAOptions = function getMFAOptions(callback) {\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.request('GetUser', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err, userData) {\n      if (err) {\n        return callback(err, null);\n      }\n\n      return callback(null, userData.MFAOptions);\n    });\n    return undefined;\n  }\n  /**\n   * PRIVATE ONLY: This is an internal only method and should not\n   * be directly called by the consumers.\n   */\n  ;\n\n  _proto.createGetUserRequest = function createGetUserRequest() {\n    return this.client.promisifyRequest('GetUser', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    });\n  }\n  /**\n   * PRIVATE ONLY: This is an internal only method and should not\n   * be directly called by the consumers.\n   */\n  ;\n\n  _proto.refreshSessionIfPossible = function refreshSessionIfPossible() {\n    var _this11 = this;\n\n    // best effort, if not possible\n    return new Promise(function (resolve) {\n      var refresh = _this11.signInUserSession.getRefreshToken();\n\n      if (refresh && refresh.getToken()) {\n        _this11.refreshSession(refresh, resolve);\n      } else {\n        resolve();\n      }\n    });\n  }\n  /**\n   * This is used by an authenticated users to get the userData\n   * @param {nodeCallback<UserData>} callback Called on success or error.\n   * @param {GetUserDataOptions} params\n   * @returns {void}\n   */\n  ;\n\n  _proto.getUserData = function getUserData(callback, params) {\n    var _this12 = this;\n\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      this.clearCachedUserData();\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    var userData = this.getUserDataFromCache();\n\n    if (!userData) {\n      this.fetchUserData().then(function (data) {\n        callback(null, data);\n      })[\"catch\"](callback);\n      return;\n    }\n\n    if (this.isFetchUserDataAndTokenRequired(params)) {\n      this.fetchUserData().then(function (data) {\n        return _this12.refreshSessionIfPossible().then(function () {\n          return data;\n        });\n      }).then(function (data) {\n        return callback(null, data);\n      })[\"catch\"](callback);\n      return;\n    }\n\n    try {\n      callback(null, JSON.parse(userData));\n      return;\n    } catch (err) {\n      this.clearCachedUserData();\n      callback(err, null);\n      return;\n    }\n  }\n  /**\n   *\n   * PRIVATE ONLY: This is an internal only method and should not\n   * be directly called by the consumers.\n   */\n  ;\n\n  _proto.getUserDataFromCache = function getUserDataFromCache() {\n    var userData = this.storage.getItem(this.userDataKey);\n    return userData;\n  }\n  /**\n   *\n   * PRIVATE ONLY: This is an internal only method and should not\n   * be directly called by the consumers.\n   */\n  ;\n\n  _proto.isFetchUserDataAndTokenRequired = function isFetchUserDataAndTokenRequired(params) {\n    var _ref = params || {},\n        _ref$bypassCache = _ref.bypassCache,\n        bypassCache = _ref$bypassCache === void 0 ? false : _ref$bypassCache;\n\n    return bypassCache;\n  }\n  /**\n   *\n   * PRIVATE ONLY: This is an internal only method and should not\n   * be directly called by the consumers.\n   */\n  ;\n\n  _proto.fetchUserData = function fetchUserData() {\n    var _this13 = this;\n\n    return this.createGetUserRequest().then(function (data) {\n      _this13.cacheUserData(data);\n\n      return data;\n    });\n  }\n  /**\n   * This is used by an authenticated user to delete a list of attributes\n   * @param {string[]} attributeList Names of the attributes to delete.\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n  ;\n\n  _proto.deleteAttributes = function deleteAttributes(attributeList, callback) {\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.request('DeleteUserAttributes', {\n      UserAttributeNames: attributeList,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err) {\n      if (err) {\n        return callback(err, null);\n      }\n\n      return callback(null, 'SUCCESS');\n    });\n    return undefined;\n  }\n  /**\n   * This is used by a user to resend a confirmation code\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */\n  ;\n\n  _proto.resendConfirmationCode = function resendConfirmationCode(callback, clientMetadata) {\n    var jsonReq = {\n      ClientId: this.pool.getClientId(),\n      Username: this.username,\n      ClientMetadata: clientMetadata\n    };\n    this.client.request('ResendConfirmationCode', jsonReq, function (err, result) {\n      if (err) {\n        return callback(err, null);\n      }\n\n      return callback(null, result);\n    });\n  }\n  /**\n   * This is used to get a session, either from the session object\n   * or from  the local storage, or by using a refresh token\n   *\n   * @param {nodeCallback<CognitoUserSession>} callback Called on success or error.\n   * @returns {void}\n   */\n  ;\n\n  _proto.getSession = function getSession(callback) {\n    if (this.username == null) {\n      return callback(new Error('Username is null. Cannot retrieve a new session'), null);\n    }\n\n    if (this.signInUserSession != null && this.signInUserSession.isValid()) {\n      return callback(null, this.signInUserSession);\n    }\n\n    var keyPrefix = \"CognitoIdentityServiceProvider.\" + this.pool.getClientId() + \".\" + this.username;\n    var idTokenKey = keyPrefix + \".idToken\";\n    var accessTokenKey = keyPrefix + \".accessToken\";\n    var refreshTokenKey = keyPrefix + \".refreshToken\";\n    var clockDriftKey = keyPrefix + \".clockDrift\";\n\n    if (this.storage.getItem(idTokenKey)) {\n      var idToken = new CognitoIdToken({\n        IdToken: this.storage.getItem(idTokenKey)\n      });\n      var accessToken = new CognitoAccessToken({\n        AccessToken: this.storage.getItem(accessTokenKey)\n      });\n      var refreshToken = new CognitoRefreshToken({\n        RefreshToken: this.storage.getItem(refreshTokenKey)\n      });\n      var clockDrift = parseInt(this.storage.getItem(clockDriftKey), 0) || 0;\n      var sessionData = {\n        IdToken: idToken,\n        AccessToken: accessToken,\n        RefreshToken: refreshToken,\n        ClockDrift: clockDrift\n      };\n      var cachedSession = new CognitoUserSession(sessionData);\n\n      if (cachedSession.isValid()) {\n        this.signInUserSession = cachedSession;\n        return callback(null, this.signInUserSession);\n      }\n\n      if (!refreshToken.getToken()) {\n        return callback(new Error('Cannot retrieve a new session. Please authenticate.'), null);\n      }\n\n      this.refreshSession(refreshToken, callback);\n    } else {\n      callback(new Error('Local storage is missing an ID Token, Please authenticate'), null);\n    }\n\n    return undefined;\n  }\n  /**\n   * This uses the refreshToken to retrieve a new session\n   * @param {CognitoRefreshToken} refreshToken A previous session's refresh token.\n   * @param {nodeCallback<CognitoUserSession>} callback Called on success or error.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */\n  ;\n\n  _proto.refreshSession = function refreshSession(refreshToken, callback, clientMetadata) {\n    var _this14 = this;\n\n    var authParameters = {};\n    authParameters.REFRESH_TOKEN = refreshToken.getToken();\n    var keyPrefix = \"CognitoIdentityServiceProvider.\" + this.pool.getClientId();\n    var lastUserKey = keyPrefix + \".LastAuthUser\";\n\n    if (this.storage.getItem(lastUserKey)) {\n      this.username = this.storage.getItem(lastUserKey);\n      var deviceKeyKey = keyPrefix + \".\" + this.username + \".deviceKey\";\n      this.deviceKey = this.storage.getItem(deviceKeyKey);\n      authParameters.DEVICE_KEY = this.deviceKey;\n    }\n\n    var jsonReq = {\n      ClientId: this.pool.getClientId(),\n      AuthFlow: 'REFRESH_TOKEN_AUTH',\n      AuthParameters: authParameters,\n      ClientMetadata: clientMetadata\n    };\n\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n\n    this.client.request('InitiateAuth', jsonReq, function (err, authResult) {\n      if (err) {\n        if (err.code === 'NotAuthorizedException') {\n          _this14.clearCachedUser();\n        }\n\n        return callback(err, null);\n      }\n\n      if (authResult) {\n        var authenticationResult = authResult.AuthenticationResult;\n\n        if (!Object.prototype.hasOwnProperty.call(authenticationResult, 'RefreshToken')) {\n          authenticationResult.RefreshToken = refreshToken.getToken();\n        }\n\n        _this14.signInUserSession = _this14.getCognitoUserSession(authenticationResult);\n\n        _this14.cacheTokens();\n\n        return callback(null, _this14.signInUserSession);\n      }\n\n      return undefined;\n    });\n  }\n  /**\n   * This is used to save the session tokens to local storage\n   * @returns {void}\n   */\n  ;\n\n  _proto.cacheTokens = function cacheTokens() {\n    var keyPrefix = \"CognitoIdentityServiceProvider.\" + this.pool.getClientId();\n    var idTokenKey = keyPrefix + \".\" + this.username + \".idToken\";\n    var accessTokenKey = keyPrefix + \".\" + this.username + \".accessToken\";\n    var refreshTokenKey = keyPrefix + \".\" + this.username + \".refreshToken\";\n    var clockDriftKey = keyPrefix + \".\" + this.username + \".clockDrift\";\n    var lastUserKey = keyPrefix + \".LastAuthUser\";\n    this.storage.setItem(idTokenKey, this.signInUserSession.getIdToken().getJwtToken());\n    this.storage.setItem(accessTokenKey, this.signInUserSession.getAccessToken().getJwtToken());\n    this.storage.setItem(refreshTokenKey, this.signInUserSession.getRefreshToken().getToken());\n    this.storage.setItem(clockDriftKey, \"\" + this.signInUserSession.getClockDrift());\n    this.storage.setItem(lastUserKey, this.username);\n  }\n  /**\n   * This is to cache user data\n   */\n  ;\n\n  _proto.cacheUserData = function cacheUserData(userData) {\n    this.storage.setItem(this.userDataKey, JSON.stringify(userData));\n  }\n  /**\n   * This is to remove cached user data\n   */\n  ;\n\n  _proto.clearCachedUserData = function clearCachedUserData() {\n    this.storage.removeItem(this.userDataKey);\n  };\n\n  _proto.clearCachedUser = function clearCachedUser() {\n    this.clearCachedTokens();\n    this.clearCachedUserData();\n  }\n  /**\n   * This is used to cache the device key and device group and device password\n   * @returns {void}\n   */\n  ;\n\n  _proto.cacheDeviceKeyAndPassword = function cacheDeviceKeyAndPassword() {\n    var keyPrefix = \"CognitoIdentityServiceProvider.\" + this.pool.getClientId() + \".\" + this.username;\n    var deviceKeyKey = keyPrefix + \".deviceKey\";\n    var randomPasswordKey = keyPrefix + \".randomPasswordKey\";\n    var deviceGroupKeyKey = keyPrefix + \".deviceGroupKey\";\n    this.storage.setItem(deviceKeyKey, this.deviceKey);\n    this.storage.setItem(randomPasswordKey, this.randomPassword);\n    this.storage.setItem(deviceGroupKeyKey, this.deviceGroupKey);\n  }\n  /**\n   * This is used to get current device key and device group and device password\n   * @returns {void}\n   */\n  ;\n\n  _proto.getCachedDeviceKeyAndPassword = function getCachedDeviceKeyAndPassword() {\n    var keyPrefix = \"CognitoIdentityServiceProvider.\" + this.pool.getClientId() + \".\" + this.username;\n    var deviceKeyKey = keyPrefix + \".deviceKey\";\n    var randomPasswordKey = keyPrefix + \".randomPasswordKey\";\n    var deviceGroupKeyKey = keyPrefix + \".deviceGroupKey\";\n\n    if (this.storage.getItem(deviceKeyKey)) {\n      this.deviceKey = this.storage.getItem(deviceKeyKey);\n      this.randomPassword = this.storage.getItem(randomPasswordKey);\n      this.deviceGroupKey = this.storage.getItem(deviceGroupKeyKey);\n    }\n  }\n  /**\n   * This is used to clear the device key info from local storage\n   * @returns {void}\n   */\n  ;\n\n  _proto.clearCachedDeviceKeyAndPassword = function clearCachedDeviceKeyAndPassword() {\n    var keyPrefix = \"CognitoIdentityServiceProvider.\" + this.pool.getClientId() + \".\" + this.username;\n    var deviceKeyKey = keyPrefix + \".deviceKey\";\n    var randomPasswordKey = keyPrefix + \".randomPasswordKey\";\n    var deviceGroupKeyKey = keyPrefix + \".deviceGroupKey\";\n    this.storage.removeItem(deviceKeyKey);\n    this.storage.removeItem(randomPasswordKey);\n    this.storage.removeItem(deviceGroupKeyKey);\n  }\n  /**\n   * This is used to clear the session tokens from local storage\n   * @returns {void}\n   */\n  ;\n\n  _proto.clearCachedTokens = function clearCachedTokens() {\n    var keyPrefix = \"CognitoIdentityServiceProvider.\" + this.pool.getClientId();\n    var idTokenKey = keyPrefix + \".\" + this.username + \".idToken\";\n    var accessTokenKey = keyPrefix + \".\" + this.username + \".accessToken\";\n    var refreshTokenKey = keyPrefix + \".\" + this.username + \".refreshToken\";\n    var lastUserKey = keyPrefix + \".LastAuthUser\";\n    var clockDriftKey = keyPrefix + \".\" + this.username + \".clockDrift\";\n    this.storage.removeItem(idTokenKey);\n    this.storage.removeItem(accessTokenKey);\n    this.storage.removeItem(refreshTokenKey);\n    this.storage.removeItem(lastUserKey);\n    this.storage.removeItem(clockDriftKey);\n  }\n  /**\n   * This is used to build a user session from tokens retrieved in the authentication result\n   * @param {object} authResult Successful auth response from server.\n   * @returns {CognitoUserSession} The new user session.\n   * @private\n   */\n  ;\n\n  _proto.getCognitoUserSession = function getCognitoUserSession(authResult) {\n    var idToken = new CognitoIdToken(authResult);\n    var accessToken = new CognitoAccessToken(authResult);\n    var refreshToken = new CognitoRefreshToken(authResult);\n    var sessionData = {\n      IdToken: idToken,\n      AccessToken: accessToken,\n      RefreshToken: refreshToken\n    };\n    return new CognitoUserSession(sessionData);\n  }\n  /**\n   * This is used to initiate a forgot password request\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {inputVerificationCode?} callback.inputVerificationCode\n   *    Optional callback raised instead of onSuccess with response data.\n   * @param {onSuccess} callback.onSuccess Called on success.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */\n  ;\n\n  _proto.forgotPassword = function forgotPassword(callback, clientMetadata) {\n    var jsonReq = {\n      ClientId: this.pool.getClientId(),\n      Username: this.username,\n      ClientMetadata: clientMetadata\n    };\n\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n\n    this.client.request('ForgotPassword', jsonReq, function (err, data) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      if (typeof callback.inputVerificationCode === 'function') {\n        return callback.inputVerificationCode(data);\n      }\n\n      return callback.onSuccess(data);\n    });\n  }\n  /**\n   * This is used to confirm a new password using a confirmationCode\n   * @param {string} confirmationCode Code entered by user.\n   * @param {string} newPassword Confirm new password.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<void>} callback.onSuccess Called on success.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */\n  ;\n\n  _proto.confirmPassword = function confirmPassword(confirmationCode, newPassword, callback, clientMetadata) {\n    var jsonReq = {\n      ClientId: this.pool.getClientId(),\n      Username: this.username,\n      ConfirmationCode: confirmationCode,\n      Password: newPassword,\n      ClientMetadata: clientMetadata\n    };\n\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n\n    this.client.request('ConfirmForgotPassword', jsonReq, function (err) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      return callback.onSuccess();\n    });\n  }\n  /**\n   * This is used to initiate an attribute confirmation request\n   * @param {string} attributeName User attribute that needs confirmation.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {inputVerificationCode} callback.inputVerificationCode Called on success.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */\n  ;\n\n  _proto.getAttributeVerificationCode = function getAttributeVerificationCode(attributeName, callback, clientMetadata) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n\n    this.client.request('GetUserAttributeVerificationCode', {\n      AttributeName: attributeName,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      ClientMetadata: clientMetadata\n    }, function (err, data) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      if (typeof callback.inputVerificationCode === 'function') {\n        return callback.inputVerificationCode(data);\n      }\n\n      return callback.onSuccess();\n    });\n    return undefined;\n  }\n  /**\n   * This is used to confirm an attribute using a confirmation code\n   * @param {string} attributeName Attribute being confirmed.\n   * @param {string} confirmationCode Code entered by user.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n  ;\n\n  _proto.verifyAttribute = function verifyAttribute(attributeName, confirmationCode, callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n\n    this.client.request('VerifyUserAttribute', {\n      AttributeName: attributeName,\n      Code: confirmationCode,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      return callback.onSuccess('SUCCESS');\n    });\n    return undefined;\n  }\n  /**\n   * This is used to get the device information using the current device key\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<*>} callback.onSuccess Called on success with device data.\n   * @returns {void}\n   */\n  ;\n\n  _proto.getDevice = function getDevice(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n\n    this.client.request('GetDevice', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      DeviceKey: this.deviceKey\n    }, function (err, data) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      return callback.onSuccess(data);\n    });\n    return undefined;\n  }\n  /**\n   * This is used to forget a specific device\n   * @param {string} deviceKey Device key.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n  ;\n\n  _proto.forgetSpecificDevice = function forgetSpecificDevice(deviceKey, callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n\n    this.client.request('ForgetDevice', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      DeviceKey: deviceKey\n    }, function (err) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      return callback.onSuccess('SUCCESS');\n    });\n    return undefined;\n  }\n  /**\n   * This is used to forget the current device\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n  ;\n\n  _proto.forgetDevice = function forgetDevice(callback) {\n    var _this15 = this;\n\n    this.forgetSpecificDevice(this.deviceKey, {\n      onFailure: callback.onFailure,\n      onSuccess: function onSuccess(result) {\n        _this15.deviceKey = null;\n        _this15.deviceGroupKey = null;\n        _this15.randomPassword = null;\n\n        _this15.clearCachedDeviceKeyAndPassword();\n\n        return callback.onSuccess(result);\n      }\n    });\n  }\n  /**\n   * This is used to set the device status as remembered\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n  ;\n\n  _proto.setDeviceStatusRemembered = function setDeviceStatusRemembered(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n\n    this.client.request('UpdateDeviceStatus', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      DeviceKey: this.deviceKey,\n      DeviceRememberedStatus: 'remembered'\n    }, function (err) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      return callback.onSuccess('SUCCESS');\n    });\n    return undefined;\n  }\n  /**\n   * This is used to set the device status as not remembered\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n  ;\n\n  _proto.setDeviceStatusNotRemembered = function setDeviceStatusNotRemembered(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n\n    this.client.request('UpdateDeviceStatus', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      DeviceKey: this.deviceKey,\n      DeviceRememberedStatus: 'not_remembered'\n    }, function (err) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      return callback.onSuccess('SUCCESS');\n    });\n    return undefined;\n  }\n  /**\n   * This is used to list all devices for a user\n   *\n   * @param {int} limit the number of devices returned in a call\n   * @param {string | null} paginationToken the pagination token in case any was returned before\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<*>} callback.onSuccess Called on success with device list.\n   * @returns {void}\n   */\n  ;\n\n  _proto.listDevices = function listDevices(limit, paginationToken, callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n\n    var requestParams = {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      Limit: limit\n    };\n\n    if (paginationToken) {\n      requestParams.PaginationToken = paginationToken;\n    }\n\n    this.client.request('ListDevices', requestParams, function (err, data) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      return callback.onSuccess(data);\n    });\n    return undefined;\n  }\n  /**\n   * This is used to globally revoke all tokens issued to a user\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n  ;\n\n  _proto.globalSignOut = function globalSignOut(callback) {\n    var _this16 = this;\n\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n\n    this.client.request('GlobalSignOut', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      _this16.clearCachedUser();\n\n      return callback.onSuccess('SUCCESS');\n    });\n    return undefined;\n  }\n  /**\n   * This is used for the user to signOut of the application and clear the cached tokens.\n   * @returns {void}\n   */\n  ;\n\n  _proto.signOut = function signOut() {\n    this.signInUserSession = null;\n    this.clearCachedUser();\n  }\n  /**\n   * This is used by a user trying to select a given MFA\n   * @param {string} answerChallenge the mfa the user wants\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n  ;\n\n  _proto.sendMFASelectionAnswer = function sendMFASelectionAnswer(answerChallenge, callback) {\n    var _this17 = this;\n\n    var challengeResponses = {};\n    challengeResponses.USERNAME = this.username;\n    challengeResponses.ANSWER = answerChallenge;\n    var jsonReq = {\n      ChallengeName: 'SELECT_MFA_TYPE',\n      ChallengeResponses: challengeResponses,\n      ClientId: this.pool.getClientId(),\n      Session: this.Session\n    };\n\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n\n    this.client.request('RespondToAuthChallenge', jsonReq, function (err, data) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      _this17.Session = data.Session;\n\n      if (answerChallenge === 'SMS_MFA') {\n        return callback.mfaRequired(data.challengeName, data.challengeParameters);\n      }\n\n      if (answerChallenge === 'SOFTWARE_TOKEN_MFA') {\n        return callback.totpRequired(data.challengeName, data.challengeParameters);\n      }\n\n      return undefined;\n    });\n  }\n  /**\n   * This returns the user context data for advanced security feature.\n   * @returns {void}\n   */\n  ;\n\n  _proto.getUserContextData = function getUserContextData() {\n    var pool = this.pool;\n    return pool.getUserContextData(this.username);\n  }\n  /**\n   * This is used by an authenticated or a user trying to authenticate to associate a TOTP MFA\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n  ;\n\n  _proto.associateSoftwareToken = function associateSoftwareToken(callback) {\n    var _this18 = this;\n\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      this.client.request('AssociateSoftwareToken', {\n        Session: this.Session\n      }, function (err, data) {\n        if (err) {\n          return callback.onFailure(err);\n        }\n\n        _this18.Session = data.Session;\n        return callback.associateSecretCode(data.SecretCode);\n      });\n    } else {\n      this.client.request('AssociateSoftwareToken', {\n        AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n      }, function (err, data) {\n        if (err) {\n          return callback.onFailure(err);\n        }\n\n        return callback.associateSecretCode(data.SecretCode);\n      });\n    }\n  }\n  /**\n   * This is used by an authenticated or a user trying to authenticate to verify a TOTP MFA\n   * @param {string} totpCode The MFA code entered by the user.\n   * @param {string} friendlyDeviceName The device name we are assigning to the device.\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n  ;\n\n  _proto.verifySoftwareToken = function verifySoftwareToken(totpCode, friendlyDeviceName, callback) {\n    var _this19 = this;\n\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      this.client.request('VerifySoftwareToken', {\n        Session: this.Session,\n        UserCode: totpCode,\n        FriendlyDeviceName: friendlyDeviceName\n      }, function (err, data) {\n        if (err) {\n          return callback.onFailure(err);\n        }\n\n        _this19.Session = data.Session;\n        var challengeResponses = {};\n        challengeResponses.USERNAME = _this19.username;\n        var jsonReq = {\n          ChallengeName: 'MFA_SETUP',\n          ClientId: _this19.pool.getClientId(),\n          ChallengeResponses: challengeResponses,\n          Session: _this19.Session\n        };\n\n        if (_this19.getUserContextData()) {\n          jsonReq.UserContextData = _this19.getUserContextData();\n        }\n\n        _this19.client.request('RespondToAuthChallenge', jsonReq, function (errRespond, dataRespond) {\n          if (errRespond) {\n            return callback.onFailure(errRespond);\n          }\n\n          _this19.signInUserSession = _this19.getCognitoUserSession(dataRespond.AuthenticationResult);\n\n          _this19.cacheTokens();\n\n          return callback.onSuccess(_this19.signInUserSession);\n        });\n\n        return undefined;\n      });\n    } else {\n      this.client.request('VerifySoftwareToken', {\n        AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n        UserCode: totpCode,\n        FriendlyDeviceName: friendlyDeviceName\n      }, function (err, data) {\n        if (err) {\n          return callback.onFailure(err);\n        }\n\n        return callback.onSuccess(data);\n      });\n    }\n  };\n\n  return CognitoUser;\n}();\n\nexport { CognitoUser as default };","// constructor\nfunction UserAgent() {} // public\n\n\nUserAgent.prototype.userAgent = 'aws-amplify/0.1.x js';\nexport var appendToCognitoUserAgent = function appendToCognitoUserAgent(content) {\n  if (!content) {\n    return;\n  }\n\n  if (UserAgent.prototype.userAgent && !UserAgent.prototype.userAgent.includes(content)) {\n    UserAgent.prototype.userAgent = UserAgent.prototype.userAgent.concat(' ', content);\n  }\n\n  if (!UserAgent.prototype.userAgent || UserAgent.prototype.userAgent === '') {\n    UserAgent.prototype.userAgent = content;\n  }\n}; // class for defining the amzn user-agent\n\nexport default UserAgent;","function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport UserAgent from './UserAgent';\n\nvar CognitoError = /*#__PURE__*/function (_Error) {\n  _inheritsLoose(CognitoError, _Error);\n\n  function CognitoError(message, code, name, statusCode) {\n    var _this;\n\n    _this = _Error.call(this, message) || this;\n    _this.code = code;\n    _this.name = name;\n    _this.statusCode = statusCode;\n    return _this;\n  }\n\n  return CognitoError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/** @class */\n\n\nvar Client = /*#__PURE__*/function () {\n  /**\n   * Constructs a new AWS Cognito Identity Provider client object\n   * @param {string} region AWS region\n   * @param {string} endpoint endpoint\n   * @param {object} fetchOptions options for fetch API (only credentials is supported)\n   */\n  function Client(region, endpoint, fetchOptions) {\n    this.endpoint = endpoint || \"https://cognito-idp.\" + region + \".amazonaws.com/\";\n\n    var _ref = fetchOptions || {},\n        credentials = _ref.credentials;\n\n    this.fetchOptions = credentials ? {\n      credentials: credentials\n    } : {};\n  }\n  /**\n   * Makes an unauthenticated request on AWS Cognito Identity Provider API\n   * using fetch\n   * @param {string} operation API operation\n   * @param {object} params Input parameters\n   * @returns Promise<object>\n   */\n\n\n  var _proto = Client.prototype;\n\n  _proto.promisifyRequest = function promisifyRequest(operation, params) {\n    var _this2 = this;\n\n    return new Promise(function (resolve, reject) {\n      _this2.request(operation, params, function (err, data) {\n        if (err) {\n          reject(new CognitoError(err.message, err.code, err.name, err.statusCode));\n        } else {\n          resolve(data);\n        }\n      });\n    });\n  }\n  /**\n   * Makes an unauthenticated request on AWS Cognito Identity Provider API\n   * using fetch\n   * @param {string} operation API operation\n   * @param {object} params Input parameters\n   * @param {function} callback Callback called when a response is returned\n   * @returns {void}\n   */\n  ;\n\n  _proto.request = function request(operation, params, callback) {\n    var headers = {\n      'Content-Type': 'application/x-amz-json-1.1',\n      'X-Amz-Target': \"AWSCognitoIdentityProviderService.\" + operation,\n      'X-Amz-User-Agent': UserAgent.prototype.userAgent\n    };\n    var options = Object.assign({}, this.fetchOptions, {\n      headers: headers,\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      body: JSON.stringify(params)\n    });\n    var response;\n    var responseJsonData;\n    fetch(this.endpoint, options).then(function (resp) {\n      response = resp;\n      return resp;\n    }, function (err) {\n      // If error happens here, the request failed\n      // if it is TypeError throw network error\n      if (err instanceof TypeError) {\n        throw new Error('Network error');\n      }\n\n      throw err;\n    }).then(function (resp) {\n      return resp.json()[\"catch\"](function () {\n        return {};\n      });\n    }).then(function (data) {\n      // return parsed body stream\n      if (response.ok) return callback(null, data);\n      responseJsonData = data; // Taken from aws-sdk-js/lib/protocol/json.js\n      // eslint-disable-next-line no-underscore-dangle\n\n      var code = (data.__type || data.code).split('#').pop();\n      var error = {\n        code: code,\n        name: code,\n        message: data.message || data.Message || null\n      };\n      return callback(error);\n    })[\"catch\"](function (err) {\n      // first check if we have a service error\n      if (response && response.headers && response.headers.get('x-amzn-errortype')) {\n        try {\n          var code = response.headers.get('x-amzn-errortype').split(':')[0];\n          var error = {\n            code: code,\n            name: code,\n            statusCode: response.status,\n            message: response.status ? response.status.toString() : null\n          };\n          return callback(error);\n        } catch (ex) {\n          return callback(err);\n        } // otherwise check if error is Network error\n\n      } else if (err instanceof Error && err.message === 'Network error') {\n        var _error = {\n          code: 'NetworkError',\n          name: err.name,\n          message: err.message\n        };\n        return callback(_error);\n      } else {\n        return callback(err);\n      }\n    });\n  };\n\n  return Client;\n}();\n\nexport { Client as default };","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\nimport Client from './Client';\nimport CognitoUser from './CognitoUser';\nimport StorageHelper from './StorageHelper';\n/** @class */\n\nvar CognitoUserPool = /*#__PURE__*/function () {\n  /**\n   * Constructs a new CognitoUserPool object\n   * @param {object} data Creation options.\n   * @param {string} data.UserPoolId Cognito user pool id.\n   * @param {string} data.ClientId User pool application client id.\n   * @param {string} data.endpoint Optional custom service endpoint.\n   * @param {object} data.fetchOptions Optional options for fetch API.\n   *        (only credentials option is supported)\n   * @param {object} data.Storage Optional storage object.\n   * @param {boolean} data.AdvancedSecurityDataCollectionFlag Optional:\n   *        boolean flag indicating if the data collection is enabled\n   *        to support cognito advanced security features. By default, this\n   *        flag is set to true.\n   */\n  function CognitoUserPool(data) {\n    var _ref = data || {},\n        UserPoolId = _ref.UserPoolId,\n        ClientId = _ref.ClientId,\n        endpoint = _ref.endpoint,\n        fetchOptions = _ref.fetchOptions,\n        AdvancedSecurityDataCollectionFlag = _ref.AdvancedSecurityDataCollectionFlag;\n\n    if (!UserPoolId || !ClientId) {\n      throw new Error('Both UserPoolId and ClientId are required.');\n    }\n\n    if (!/^[\\w-]+_.+$/.test(UserPoolId)) {\n      throw new Error('Invalid UserPoolId format.');\n    }\n\n    var region = UserPoolId.split('_')[0];\n    this.userPoolId = UserPoolId;\n    this.clientId = ClientId;\n    this.client = new Client(region, endpoint, fetchOptions);\n    /**\n     * By default, AdvancedSecurityDataCollectionFlag is set to true,\n     * if no input value is provided.\n     */\n\n    this.advancedSecurityDataCollectionFlag = AdvancedSecurityDataCollectionFlag !== false;\n    this.storage = data.Storage || new StorageHelper().getStorage();\n  }\n  /**\n   * @returns {string} the user pool id\n   */\n\n\n  var _proto = CognitoUserPool.prototype;\n\n  _proto.getUserPoolId = function getUserPoolId() {\n    return this.userPoolId;\n  }\n  /**\n   * @returns {string} the client id\n   */\n  ;\n\n  _proto.getClientId = function getClientId() {\n    return this.clientId;\n  }\n  /**\n   * @typedef {object} SignUpResult\n   * @property {CognitoUser} user New user.\n   * @property {bool} userConfirmed If the user is already confirmed.\n   */\n\n  /**\n   * method for signing up a user\n   * @param {string} username User's username.\n   * @param {string} password Plain-text initial password entered by user.\n   * @param {(AttributeArg[])=} userAttributes New user attributes.\n   * @param {(AttributeArg[])=} validationData Application metadata.\n   * @param {(AttributeArg[])=} clientMetadata Client metadata.\n   * @param {nodeCallback<SignUpResult>} callback Called on error or with the new user.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */\n  ;\n\n  _proto.signUp = function signUp(username, password, userAttributes, validationData, callback, clientMetadata) {\n    var _this = this;\n\n    var jsonReq = {\n      ClientId: this.clientId,\n      Username: username,\n      Password: password,\n      UserAttributes: userAttributes,\n      ValidationData: validationData,\n      ClientMetadata: clientMetadata\n    };\n\n    if (this.getUserContextData(username)) {\n      jsonReq.UserContextData = this.getUserContextData(username);\n    }\n\n    this.client.request('SignUp', jsonReq, function (err, data) {\n      if (err) {\n        return callback(err, null);\n      }\n\n      var cognitoUser = {\n        Username: username,\n        Pool: _this,\n        Storage: _this.storage\n      };\n      var returnData = {\n        user: new CognitoUser(cognitoUser),\n        userConfirmed: data.UserConfirmed,\n        userSub: data.UserSub,\n        codeDeliveryDetails: data.CodeDeliveryDetails\n      };\n      return callback(null, returnData);\n    });\n  }\n  /**\n   * method for getting the current user of the application from the local storage\n   *\n   * @returns {CognitoUser} the user retrieved from storage\n   */\n  ;\n\n  _proto.getCurrentUser = function getCurrentUser() {\n    var lastUserKey = \"CognitoIdentityServiceProvider.\" + this.clientId + \".LastAuthUser\";\n    var lastAuthUser = this.storage.getItem(lastUserKey);\n\n    if (lastAuthUser) {\n      var cognitoUser = {\n        Username: lastAuthUser,\n        Pool: this,\n        Storage: this.storage\n      };\n      return new CognitoUser(cognitoUser);\n    }\n\n    return null;\n  }\n  /**\n   * This method returns the encoded data string used for cognito advanced security feature.\n   * This would be generated only when developer has included the JS used for collecting the\n   * data on their client. Please refer to documentation to know more about using AdvancedSecurity\n   * features\n   * @param {string} username the username for the context data\n   * @returns {string} the user context data\n   **/\n  ;\n\n  _proto.getUserContextData = function getUserContextData(username) {\n    if (typeof AmazonCognitoAdvancedSecurityData === 'undefined') {\n      return undefined;\n    }\n    /* eslint-disable */\n\n\n    var amazonCognitoAdvancedSecurityDataConst = AmazonCognitoAdvancedSecurityData;\n    /* eslint-enable */\n\n    if (this.advancedSecurityDataCollectionFlag) {\n      var advancedSecurityData = amazonCognitoAdvancedSecurityDataConst.getData(username, this.userPoolId, this.clientId);\n\n      if (advancedSecurityData) {\n        var userContextData = {\n          EncodedData: advancedSecurityData\n        };\n        return userContextData;\n      }\n    }\n\n    return {};\n  };\n\n  return CognitoUserPool;\n}();\n\nexport { CognitoUserPool as default };",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\t    /*\n\t     * Local polyfil of Object.create\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {};\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }())\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var i = 0; i < thatSigBytes; i += 4) {\n\t                    thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            var r = (function (m_w) {\n\t                var m_w = m_w;\n\t                var m_z = 0x3ade68b1;\n\t                var mask = 0xffffffff;\n\n\t                return function () {\n\t                    m_z = (0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10)) & mask;\n\t                    m_w = (0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10)) & mask;\n\t                    var result = ((m_z << 0x10) + m_w) & mask;\n\t                    result /= 0x100000000;\n\t                    result += 0.5;\n\t                    return result * (Math.random() > .5 ? 1 : -1);\n\t                }\n\t            });\n\n\t            for (var i = 0, rcache; i < nBytes; i += 4) {\n\t                var _r = r((rcache || Math.random()) * 0x100000000);\n\n\t                rcache = _r() * 0x3ade67b7;\n\t                words.push((_r() * 0x100000000) | 0);\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                var processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Check if typed arrays are supported\n\t    if (typeof ArrayBuffer != 'function') {\n\t        return;\n\t    }\n\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\n\t    // Reference original init\n\t    var superInit = WordArray.init;\n\n\t    // Augment WordArray.init to handle typed arrays\n\t    var subInit = WordArray.init = function (typedArray) {\n\t        // Convert buffers to uint8\n\t        if (typedArray instanceof ArrayBuffer) {\n\t            typedArray = new Uint8Array(typedArray);\n\t        }\n\n\t        // Convert other array views to uint8\n\t        if (\n\t            typedArray instanceof Int8Array ||\n\t            (typeof Uint8ClampedArray !== \"undefined\" && typedArray instanceof Uint8ClampedArray) ||\n\t            typedArray instanceof Int16Array ||\n\t            typedArray instanceof Uint16Array ||\n\t            typedArray instanceof Int32Array ||\n\t            typedArray instanceof Uint32Array ||\n\t            typedArray instanceof Float32Array ||\n\t            typedArray instanceof Float64Array\n\t        ) {\n\t            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n\t        }\n\n\t        // Handle Uint8Array\n\t        if (typedArray instanceof Uint8Array) {\n\t            // Shortcut\n\t            var typedArrayByteLength = typedArray.byteLength;\n\n\t            // Extract bytes\n\t            var words = [];\n\t            for (var i = 0; i < typedArrayByteLength; i++) {\n\t                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\n\t            }\n\n\t            // Initialize this word array\n\t            superInit.call(this, words, typedArrayByteLength);\n\t        } else {\n\t            // Else call normal init\n\t            superInit.apply(this, arguments);\n\t        }\n\t    };\n\n\t    subInit.prototype = WordArray;\n\t}());\n\n\n\treturn CryptoJS.lib.WordArray;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Initialization and round constants tables\n\t    var H = [];\n\t    var K = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        function isPrime(n) {\n\t            var sqrtN = Math.sqrt(n);\n\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t                if (!(n % factor)) {\n\t                    return false;\n\t                }\n\t            }\n\n\t            return true;\n\t        }\n\n\t        function getFractionalBits(n) {\n\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t        }\n\n\t        var n = 2;\n\t        var nPrime = 0;\n\t        while (nPrime < 64) {\n\t            if (isPrime(n)) {\n\t                if (nPrime < 8) {\n\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t                }\n\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n\t                nPrime++;\n\t            }\n\n\t            n++;\n\t        }\n\t    }());\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-256 hash algorithm.\n\t     */\n\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init(H.slice(0));\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\t            var f = H[5];\n\t            var g = H[6];\n\t            var h = H[7];\n\n\t            // Computation\n\t            for (var i = 0; i < 64; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var gamma0x = W[i - 15];\n\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t                                   (gamma0x >>> 3);\n\n\t                    var gamma1x = W[i - 2];\n\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t                                   (gamma1x >>> 10);\n\n\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t                }\n\n\t                var ch  = (e & f) ^ (~e & g);\n\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\n\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t                var t2 = sigma0 + maj;\n\n\t                h = g;\n\t                g = f;\n\t                f = e;\n\t                e = (d + t1) | 0;\n\t                d = c;\n\t                c = b;\n\t                b = a;\n\t                a = (t1 + t2) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t            H[5] = (H[5] + f) | 0;\n\t            H[6] = (H[6] + g) | 0;\n\t            H[7] = (H[7] + h) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA256('message');\n\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t     */\n\t    C.SHA256 = Hasher._createHelper(SHA256);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t     */\n\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA256;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha256\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha256\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\treturn CryptoJS.HmacSHA256;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * HMAC algorithm.\n\t     */\n\t    var HMAC = C_algo.HMAC = Base.extend({\n\t        /**\n\t         * Initializes a newly created HMAC.\n\t         *\n\t         * @param {Hasher} hasher The hash algorithm to use.\n\t         * @param {WordArray|string} key The secret key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n\t         */\n\t        init: function (hasher, key) {\n\t            // Init hasher\n\t            hasher = this._hasher = new hasher.init();\n\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof key == 'string') {\n\t                key = Utf8.parse(key);\n\t            }\n\n\t            // Shortcuts\n\t            var hasherBlockSize = hasher.blockSize;\n\t            var hasherBlockSizeBytes = hasherBlockSize * 4;\n\n\t            // Allow arbitrary length keys\n\t            if (key.sigBytes > hasherBlockSizeBytes) {\n\t                key = hasher.finalize(key);\n\t            }\n\n\t            // Clamp excess bits\n\t            key.clamp();\n\n\t            // Clone key for inner and outer pads\n\t            var oKey = this._oKey = key.clone();\n\t            var iKey = this._iKey = key.clone();\n\n\t            // Shortcuts\n\t            var oKeyWords = oKey.words;\n\t            var iKeyWords = iKey.words;\n\n\t            // XOR keys with pad constants\n\t            for (var i = 0; i < hasherBlockSize; i++) {\n\t                oKeyWords[i] ^= 0x5c5c5c5c;\n\t                iKeyWords[i] ^= 0x36363636;\n\t            }\n\t            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this HMAC to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Reset\n\t            hasher.reset();\n\t            hasher.update(this._iKey);\n\t        },\n\n\t        /**\n\t         * Updates this HMAC with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {HMAC} This HMAC instance.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.update('message');\n\t         *     hmacHasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            this._hasher.update(messageUpdate);\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the HMAC computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The HMAC.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmac = hmacHasher.finalize();\n\t         *     var hmac = hmacHasher.finalize('message');\n\t         *     var hmac = hmacHasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Compute HMAC\n\t            var innerHash = hasher.finalize(messageUpdate);\n\t            hasher.reset();\n\t            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n\t            return hmac;\n\t        }\n\t    });\n\t}());\n\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64 encoding strategy.\n\t     */\n\t    var Base64 = C_enc.Base64 = {\n\t        /**\n\t         * Converts a word array to a Base64 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Base64 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64 string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n\t         */\n\t        parse: function (base64Str) {\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                    reverseMap = this._reverseMap = [];\n\t                    for (var j = 0; j < map.length; j++) {\n\t                        reverseMap[map.charCodeAt(j)] = j;\n\t                    }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t      var words = [];\n\t      var nBytes = 0;\n\t      for (var i = 0; i < base64StrLength; i++) {\n\t          if (i % 4) {\n\t              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t              words[nBytes >>> 2] |= (bits1 | bits2) << (24 - (nBytes % 4) * 8);\n\t              nBytes++;\n\t          }\n\t      }\n\t      return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Base64;\n\n}));","/*!\n * JavaScript Cookie v2.2.1\n * https://github.com/js-cookie/js-cookie\n *\n * Copyright 2006, 2015 Klaus Hartl & Fagner Brack\n * Released under the MIT license\n */\n;(function (factory) {\n\tvar registeredInModuleLoader;\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (!registeredInModuleLoader) {\n\t\tvar OldCookies = window.Cookies;\n\t\tvar api = window.Cookies = factory();\n\t\tapi.noConflict = function () {\n\t\t\twindow.Cookies = OldCookies;\n\t\t\treturn api;\n\t\t};\n\t}\n}(function () {\n\tfunction extend () {\n\t\tvar i = 0;\n\t\tvar result = {};\n\t\tfor (; i < arguments.length; i++) {\n\t\t\tvar attributes = arguments[ i ];\n\t\t\tfor (var key in attributes) {\n\t\t\t\tresult[key] = attributes[key];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction decode (s) {\n\t\treturn s.replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent);\n\t}\n\n\tfunction init (converter) {\n\t\tfunction api() {}\n\n\t\tfunction set (key, value, attributes) {\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tattributes = extend({\n\t\t\t\tpath: '/'\n\t\t\t}, api.defaults, attributes);\n\n\t\t\tif (typeof attributes.expires === 'number') {\n\t\t\t\tattributes.expires = new Date(new Date() * 1 + attributes.expires * 864e+5);\n\t\t\t}\n\n\t\t\t// We're using \"expires\" because \"max-age\" is not supported by IE\n\t\t\tattributes.expires = attributes.expires ? attributes.expires.toUTCString() : '';\n\n\t\t\ttry {\n\t\t\t\tvar result = JSON.stringify(value);\n\t\t\t\tif (/^[\\{\\[]/.test(result)) {\n\t\t\t\t\tvalue = result;\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\n\t\t\tvalue = converter.write ?\n\t\t\t\tconverter.write(value, key) :\n\t\t\t\tencodeURIComponent(String(value))\n\t\t\t\t\t.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);\n\n\t\t\tkey = encodeURIComponent(String(key))\n\t\t\t\t.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent)\n\t\t\t\t.replace(/[\\(\\)]/g, escape);\n\n\t\t\tvar stringifiedAttributes = '';\n\t\t\tfor (var attributeName in attributes) {\n\t\t\t\tif (!attributes[attributeName]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tstringifiedAttributes += '; ' + attributeName;\n\t\t\t\tif (attributes[attributeName] === true) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Considers RFC 6265 section 5.2:\n\t\t\t\t// ...\n\t\t\t\t// 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n\t\t\t\t//     character:\n\t\t\t\t// Consume the characters of the unparsed-attributes up to,\n\t\t\t\t// not including, the first %x3B (\";\") character.\n\t\t\t\t// ...\n\t\t\t\tstringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n\t\t\t}\n\n\t\t\treturn (document.cookie = key + '=' + value + stringifiedAttributes);\n\t\t}\n\n\t\tfunction get (key, json) {\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar jar = {};\n\t\t\t// To prevent the for loop in the first place assign an empty array\n\t\t\t// in case there are no cookies at all.\n\t\t\tvar cookies = document.cookie ? document.cookie.split('; ') : [];\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < cookies.length; i++) {\n\t\t\t\tvar parts = cookies[i].split('=');\n\t\t\t\tvar cookie = parts.slice(1).join('=');\n\n\t\t\t\tif (!json && cookie.charAt(0) === '\"') {\n\t\t\t\t\tcookie = cookie.slice(1, -1);\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tvar name = decode(parts[0]);\n\t\t\t\t\tcookie = (converter.read || converter)(cookie, name) ||\n\t\t\t\t\t\tdecode(cookie);\n\n\t\t\t\t\tif (json) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tcookie = JSON.parse(cookie);\n\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t}\n\n\t\t\t\t\tjar[name] = cookie;\n\n\t\t\t\t\tif (key === name) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\t\t\t}\n\n\t\t\treturn key ? jar[key] : jar;\n\t\t}\n\n\t\tapi.set = set;\n\t\tapi.get = function (key) {\n\t\t\treturn get(key, false /* read as raw */);\n\t\t};\n\t\tapi.getJSON = function (key) {\n\t\t\treturn get(key, true /* read as json */);\n\t\t};\n\t\tapi.remove = function (key, attributes) {\n\t\t\tset(key, '', extend(attributes, {\n\t\t\t\texpires: -1\n\t\t\t}));\n\t\t};\n\n\t\tapi.defaults = {};\n\n\t\tapi.withConverter = init;\n\n\t\treturn api;\n\t}\n\n\treturn init(function () {});\n}));\n"],"sourceRoot":""}