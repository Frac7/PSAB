{"version":3,"sources":["features/sign-in/components/SignInForm.js","features/sign-in/values/index.js","features/sign-in/containers/SignInFormContainer.js","features/sign-in/index.js"],"names":["SignInForm","values","touched","errors","isSubmitting","handleSubmit","handleChange","Form","onSubmit","noValidate","FormGroup","Label","for","Input","valid","email","type","name","id","placeholder","onChange","value","FormText","color","password","disabled","initialValues","validationSchema","object","shape","string","required","dispatchToProps","requestLogin","loggedIn","connect","state","user","Selector","getUser","history","data","isLoading","useEffect","Auth","currentUserInfo","then","catch","error","console","useCallback","setSubmitting","setErrors","signIn","result","log","push","PROFILE","message","to","Container","fluid","Row","className","Col","md","size","offset","props","SignIn","SignInFormContainer"],"mappings":"8OA+BeA,EAzBI,SAAC,GAAD,IACfC,EADe,EACfA,OACAC,EAFe,EAEfA,QACAC,EAHe,EAGfA,OACAC,EAJe,EAIfA,aACAC,EALe,EAKfA,aACAC,EANe,EAMfA,aANe,OAQf,kBAACC,EAAA,EAAD,CAAMC,SAAUH,EAAcI,YAAU,GACpC,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,IAAI,SAAX,UACA,kBAACC,EAAA,EAAD,CAAOC,MAAOZ,EAAQa,QAAUZ,EAAOY,MAAOC,KAAK,QAAQC,KAAK,QAAQC,GAAG,QAAQC,YAAY,mBAAmBC,SAAUd,EAAce,MAAOpB,EAAOc,QACtJZ,EAAOY,OAAS,kBAACO,EAAA,EAAD,CAAUC,MAAM,UAAUpB,EAAOY,QAEvD,kBAACL,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,IAAI,YAAX,YACA,kBAACC,EAAA,EAAD,CAAOC,MAAOZ,EAAQa,QAAUZ,EAAOqB,SAAUR,KAAK,WAAWC,KAAK,WAAWC,GAAG,WAAWE,SAAUd,EAAce,MAAOpB,EAAOuB,WACnIrB,EAAOqB,UAAY,kBAACF,EAAA,EAAD,CAAUC,MAAM,UAAUpB,EAAOqB,WAE1D,kBAAC,IAAD,CAAoBR,KAAK,SAASS,SAAUrB,GAA5C,Y,SCvBFsB,EAAgB,CAClBX,MAAO,GACPS,SAAU,IAERG,EAAmBC,cAASC,MAAO,CACrCd,MAAOe,cAASf,MAAM,qBAAqBgB,SAAS,qBACpDP,SAAUM,cAASC,SAAS,0B,yBCuE1BC,EAAkB,CACpBC,iBACAC,cAGWC,eATS,SAACC,GAAD,MAAY,CAChCC,KAAMC,IAASC,QAAQH,MAQaJ,EAAzBG,EAnEA,SAAC,GAAoE,IAAlEK,EAAiE,EAAjEA,QAASP,EAAwD,EAAxDA,aAAcC,EAA0C,EAA1CA,SAA0C,IAAhCG,KAAQI,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,UAC7DC,qBAAU,WACDF,GACDG,IAAKC,kBACAC,MAAK,SAACT,GACHH,EAAS,CAACO,KAAMJ,OAEnBU,OAAM,SAACC,GAAD,OAAWC,QAAQD,MAAMA,QAGzC,CAACP,EAAMP,IAEV,IAAM1B,EAAW0C,uBAAY,cAAwD,IAArDnC,EAAoD,EAApDA,MAAOS,EAA6C,EAA7CA,SAAc2B,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAChER,IAAKS,OAAOtC,EAAOS,GACdsB,MAAK,SAACQ,GACHL,QAAQM,IAAID,GACZrB,IACAkB,GAAc,GACdX,EAAQgB,KAAKC,QAEhBV,OAAM,SAACC,GACJC,QAAQD,MAAMA,GACdG,GAAc,GACdC,EAAU,CAAE5B,SAAUwB,EAAMU,eAErC,CAAClB,EAASP,IAEb,OAAIQ,EACO,kBAAC,IAAD,CAAUkB,GAAIF,MAGrBf,EAEI,kBAACkB,EAAA,EAAD,CAAWC,OAAK,GACZ,kBAACC,EAAA,EAAD,CAAKC,UAAU,kEACX,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACL,kBAAC,IAAD,CAAeC,KAAK,aAQpC,kBAACJ,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,IACxB,kBAAC,IAAD,CACIzC,cAAeA,EACfC,iBAAkBA,EAClBnB,SAAUA,IAET,SAAA4D,GAAK,OAAI,kBAAC,EAAeA,WC9D/BC,UAFA,SAAC,GAAD,IAAG7B,EAAH,EAAGA,QAAH,OAAiB,kBAAC8B,EAAD,CAAqB9B,QAASA","file":"static/js/12.6a7e88d0.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Form, FormGroup, Label, Input, FormText } from 'reactstrap';\n\nimport { StyledFilledButton } from '../../../shared/styled';\n\nconst SignInForm = ({\n    values,\n    touched,\n    errors,\n    isSubmitting,\n    handleSubmit,\n    handleChange\n}) => (\n    <Form onSubmit={handleSubmit} noValidate>\n        <FormGroup>\n            <Label for=\"email\">E-mail</Label>\n            <Input valid={touched.email && !errors.email} type=\"email\" name=\"email\" id=\"email\" placeholder=\"user@example.com\" onChange={handleChange} value={values.email}/>\n            { errors.email && <FormText color=\"danger\">{errors.email}</FormText>}\n        </FormGroup>\n        <FormGroup>\n            <Label for=\"password\">Password</Label>\n            <Input valid={touched.email && !errors.password} type=\"password\" name=\"password\" id=\"password\" onChange={handleChange} value={values.password}/>\n            { errors.password && <FormText color=\"danger\">{errors.password}</FormText>}\n        </FormGroup>\n        <StyledFilledButton type=\"submit\" disabled={isSubmitting}>\n            Accedi\n        </StyledFilledButton>\n    </Form>\n)\n\nexport default SignInForm;\n","import { object, string } from 'yup';\n\nconst initialValues = {\n    email: '',\n    password: ''\n};\nconst validationSchema = object().shape(({\n    email: string().email('E-mail non valida').required('Inserire l\\'e-mail'),\n    password: string().required('Inserire la password')\n}));\n\nexport { initialValues, validationSchema };\n","import React, { useCallback, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Auth from '@aws-amplify/auth';\nimport { Formik } from 'formik';\nimport { Row, Col, Container } from 'reactstrap';\n\nimport SignInForm from '../components';\nimport { StyledSpinner } from '../../../shared/styled';\n\nimport { initialValues, validationSchema } from '../values';\nimport { PROFILE } from '../../../config/routes';\n\nimport { requestLogin, loggedIn } from '../../../store/user/action';\nimport { Selector } from '../../../store/user/reducer';\n\nconst SignIn = ({ history, requestLogin, loggedIn, user: { data, isLoading } }) => {\n    useEffect(() => {\n        if (!data) {\n            Auth.currentUserInfo()\n                .then((user) => {\n                    loggedIn({data: user});\n                })\n                .catch((error) => console.error(error));\n        }\n        // eslint-disable-next-line\n    }, [data, loggedIn]);\n\n    const onSubmit = useCallback(({ email, password }, { setSubmitting, setErrors }) => {\n        Auth.signIn(email, password)\n            .then((result) => {\n                console.log(result);\n                requestLogin();\n                setSubmitting(false);\n                history.push(PROFILE);\n            })\n            .catch((error) => {\n                console.error(error);\n                setSubmitting(false);\n                setErrors({ password: error.message });\n            });\n    }, [history, requestLogin]);\n\n    if (data) {\n        return <Redirect to={PROFILE} />\n    }\n\n    if (isLoading) {\n        return (\n            <Container fluid>\n                <Row className=\"justify-content-center align-content-center align-items-center\">\n                    <Col md={1}>\n                        <StyledSpinner size=\"large\"/>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n\n    return (\n        <Row>\n            <Col md={{ size: 6, offset: 3 }}>\n                <Formik\n                    initialValues={initialValues}\n                    validationSchema={validationSchema}\n                    onSubmit={onSubmit}\n                >\n                    {props => <SignInForm {...props}/>}\n                </Formik>\n            </Col>\n        </Row>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    user: Selector.getUser(state)\n});\n\nconst dispatchToProps = {\n    requestLogin,\n    loggedIn\n}\n\nexport default connect(mapStateToProps, dispatchToProps)(SignIn);\n","import React from 'react';\n\nimport SignInFormContainer from './containers'\n\nconst SignIn = ({ history }) => <SignInFormContainer history={history} />\n\nexport default SignIn;\n"],"sourceRoot":""}