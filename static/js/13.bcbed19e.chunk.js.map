{"version":3,"sources":["features/discover/containers/ElementListContainer.js","features/discover/map/index.js","features/discover/containers/DiscoverContainer.js","features/discover/index.js","shared/element-dropdown/ElementSelector.js"],"names":["ElementListContainer","ElementWrapper","elements","Row","className","Col","xl","sm","ListGroup","flush","map","props","index","ListGroupItem","key","elementWrappers","LAND","PORTION","PRODUCT","element","PROD_ACTIVITIES","MAINTENANCE_ACTIVITIES","connect","state","user","Selector","getUser","useState","currentElement","setCurrentElement","setElements","fetchErrors","setFetchErrors","isLoading","setIsLoading","useEffect","userAddress","contractInstance","window","web3","eth","Contract","contracts","ABI","address","methods","getTotal","call","from","then","total","parseInt","i","getById","result","push","id","catch","error","handleFetching","data","username","Container","fluid","type","size","Alert","color","length","withAuthentication","DISCOVER","ElementSelector","isOpen","setIsOpen","toggle","useCallback","onClick","value","choices","useMemo","DropdownItem","disabled","Dropdown","DropdownToggle","caret","block","DropdownMenu"],"mappings":"oMAsCeA,EAzBc,SAAC,GAAD,IAAGC,EAAH,EAAGA,eAAgBC,EAAnB,EAAmBA,SAAnB,OAC5B,kBAACC,EAAA,EAAD,CAAKC,UAAU,QACd,kBAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,IAChB,kBAACC,EAAA,EAAD,CAAWC,OAAK,GACfP,EAASQ,KAAI,SAACC,EAAOC,GAAR,OACb,kBAACC,EAAA,EAAD,CAAeC,IAAKF,GACnB,kBAACX,EAAmBU,W,qDCHnBI,GAAe,mBACnBC,KAAO,SAACL,GAAD,OAAW,kBAAC,IAAiBA,MADjB,cAEnBM,KAAU,SAACN,GAAD,OAAW,kBAAC,IAAoBA,MAFvB,cAGnBO,KAAU,SAACP,GAAD,OAAW,kBAAC,IAAD,iBAA6BA,EAA7B,CAAoCQ,QAASD,UAH/C,cAInBE,KAAkB,SAACT,GAAD,OAAW,kBAAC,IAAD,iBAA6BA,EAA7B,CAAoCQ,QAASC,UAJvD,cAKnBC,KAAyB,SAACV,GAAD,OAAW,kBAAC,IAAD,iBAA6BA,EAA7B,CAAoCQ,QAASE,UAL9D,G,kBCgGNC,eAJS,SAACC,GAAD,MAAY,CACnCC,KAAMC,IAASC,QAAQH,MAGTD,EAnFW,SAAC,GAAc,IAAZE,EAAW,EAAXA,KAAW,EACKG,mBAASX,KADd,mBAChCY,EADgC,KAChBC,EADgB,OAGPF,mBAAS,IAHF,mBAGhCzB,EAHgC,KAGtB4B,EAHsB,OAIDH,oBAAS,GAJR,mBAIhCI,EAJgC,KAInBC,EAJmB,OAKLL,oBAAS,GALJ,mBAKhCM,EALgC,KAKrBC,EALqB,KAYvC,OALAC,qBAAU,WACTL,EAAY,IDbS,SAACM,EAAaN,EAAaE,EAAgBE,EAAcf,GAC/Ee,GAAa,GACb,IAAMhC,EAAW,GAEXmC,EAAmB,IAAIC,OAAOC,KAAKC,IAAIC,SAASC,IAAUvB,GAASwB,IAAKD,IAAUvB,GAASyB,SACjGP,EAAiBQ,QAAQC,WACvBC,KAAK,CAAEC,KAAOZ,IACda,MAAK,SAACC,GAEN,KADAA,EAAQC,SAASD,IAKhB,OAHApB,EAAY5B,GACZ8B,GAAe,QACfE,GAAa,GAId,IATgB,eASPkB,GACRf,EAAiBQ,QAAQQ,QAAQD,GAC/BL,KAAK,CAAEC,KAAMZ,IACba,MAAK,SAACK,GACNpD,EAASqD,KAAT,2BACID,GADJ,IAECE,GAAIJ,KAGDA,IAAMF,EAAQ,IACjBpB,EAAY5B,GACZ8B,GAAe,GACfE,GAAa,OAGduB,OAAM,SAACC,GACP1B,GAAe,GACfE,GAAa,OAjBPkB,EAAI,EAAGA,EAAIF,EAAOE,IAAM,EAAxBA,MAsBTK,OAAM,SAACC,GACP1B,GAAe,GACfE,GAAa,MC1BdyB,CAAenC,EAAKoC,KAAKC,SAAU/B,EAAaE,EAAgBE,EAAcN,KAC5E,CAACA,EAAgBJ,EAAMM,IAGzB,kBAACgC,EAAA,EAAD,CAAWC,OAAK,GACf,kBAAC5D,EAAA,EAAD,CAAKC,UAAU,8CACd,kBAACC,EAAA,EAAD,KACC,uCAAauB,IAEd,kBAACvB,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GAAIH,UAAU,0BAC7B,kBAAC,IAAD,CACCF,SAAU,CACT,CACC8D,KAAMhD,KAEP,CACCgD,KAAM/C,KAEP,CACC+C,KAAM5C,KAEP,CACC4C,KAAM9C,KAEP,CACC8C,KAAM3C,MAGRO,eAAgBA,EAChBC,kBAAmBA,MAIrBI,GACA,kBAAC9B,EAAA,EAAD,CAAKC,UAAU,uEACd,kBAACC,EAAA,EAAD,CAAKC,GAAG,OAAOC,GAAG,QACjB,kBAAC,IAAD,CAAe0D,KAAK,YAItBlC,GACA,kBAAC5B,EAAA,EAAD,CAAKC,UAAU,kEACd,kBAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,IAChB,kBAAC2D,EAAA,EAAD,CAAOC,MAAM,SAAS/D,UAAU,QAAhC,kEAIDF,EAASkE,SAAWnC,IAAcF,GACnC,kBAAC5B,EAAA,EAAD,CAAKC,UAAU,kEACd,kBAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,IAChB,kBAAC2D,EAAA,EAAD,CAAOC,MAAM,OAAO/D,UAAU,QAA9B,iCAIH,kBAAC,EAAD,CACCF,SAAUA,EACVD,eAAgBc,EAAgBa,S,iBCtFrByC,uBAFE,kBAAM,kBAAC,EAAD,QAEqBC,M,oICyB7BC,EA7BS,SAAC,GAAqD,IAAnDrE,EAAkD,EAAlDA,SAAU0B,EAAwC,EAAxCA,eAAgBC,EAAwB,EAAxBA,kBAAwB,EAChDF,oBAAS,GADuC,mBACrE6C,EADqE,KAC7DC,EAD6D,KAGtEC,EAASC,uBAAY,kBAAMF,GAAU,SAACD,GAAD,OAAaA,OAAS,CAACC,IAC5DG,EAAUD,uBAAY,SAACE,GAAD,OAAW,WACtChD,EAAkBgD,MAChB,CAAChD,IAEEiD,EAAUC,mBAAQ,WACvB,OAAO7E,EAASQ,KAAI,SAACmE,EAAOjE,GAAR,OACnB,kBAACoE,EAAA,EAAD,CAAcC,SAAUJ,EAAMI,SAAUL,QAASA,EAAQC,EAAMb,MAAOlD,IAAKF,GAAQiE,EAAMb,WAExF,CAACY,EAAS1E,IAEb,OACC,kBAACgF,EAAA,EAAD,CACCV,OAAQA,EACRE,OAAQA,GAER,kBAACS,EAAA,EAAD,CAAgBC,OAAK,EAACC,OAAK,GACzBzD,GAEF,kBAAC0D,EAAA,EAAD,KACER","file":"static/js/13.bcbed19e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col, ListGroup, ListGroupItem } from 'reactstrap';\n\n/**\n * Container for the list of element (products, lands, ...).\n *\n * @param ElementWrapper\n * @param elements\n * @returns {JSX.Element}\n * @constructor\n * @component\n */\nconst ElementListContainer = ({ ElementWrapper, elements }) => (\n\t<Row className=\"my-3\">\n\t\t<Col xl={12} sm={12}>\n\t\t\t<ListGroup flush>\n\t\t\t{elements.map((props, index) => (\n\t\t\t\t<ListGroupItem key={index}>\n\t\t\t\t\t<ElementWrapper {...props} />\n\t\t\t\t</ListGroupItem>\n\t\t\t))}\n\t\t\t</ListGroup>\n\t\t</Col>\n\t</Row>\n);\n\nElementListContainer.propTypes = {\n\t/**\n\t * Wrapper that shows element information\n\t */\n\tElementWrapper: PropTypes.func,\n\t/**\n\t * List of elements to show\n\t */\n\telements: PropTypes.array\n}\n\nexport default ElementListContainer;\n","import React from 'react';\nimport {\n\tDiscoverLand,\n\tDiscoverPortion,\n\tDiscoverActivityProduct,\n} from '../../../shared/views';\n\nimport {\n\tLAND,\n\tPORTION,\n\tPRODUCT,\n\tPROD_ACTIVITIES,\n\tMAINTENANCE_ACTIVITIES\n} from '../../../shared/values';\nimport contracts from '../../../shared/contracts';\n\nconst elementWrappers = {\n\t[LAND]: (props) => <DiscoverLand {...props} />,\n\t[PORTION]: (props) => <DiscoverPortion {...props} />,\n\t[PRODUCT]: (props) => <DiscoverActivityProduct {...props} element={PRODUCT}/>,\n\t[PROD_ACTIVITIES]: (props) => <DiscoverActivityProduct {...props} element={PROD_ACTIVITIES} />,\n\t[MAINTENANCE_ACTIVITIES]: (props) => <DiscoverActivityProduct {...props} element={MAINTENANCE_ACTIVITIES} />\n}\n\nconst handleFetching = (userAddress, setElements, setFetchErrors, setIsLoading, element) => {\n\tsetIsLoading(true);\n\tconst elements = [];\n\n\tconst contractInstance = new window.web3.eth.Contract(contracts[element].ABI, contracts[element].address);\n\tcontractInstance.methods.getTotal()\n\t\t.call({ from : userAddress })\n\t\t.then((total) => {\n\t\t\ttotal = parseInt(total);\n\t\t\tif (!total) {\n\t\t\t\tsetElements(elements);\n\t\t\t\tsetFetchErrors(false);\n\t\t\t\tsetIsLoading(false);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < total; i++) {\n\t\t\t\tcontractInstance.methods.getById(i)\n\t\t\t\t\t.call({ from: userAddress })\n\t\t\t\t\t.then((result) => {\n\t\t\t\t\t\telements.push({\n\t\t\t\t\t\t\t...result,\n\t\t\t\t\t\t\tid: i\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (i === total - 1) {\n\t\t\t\t\t\t\tsetElements(elements);\n\t\t\t\t\t\t\tsetFetchErrors(false);\n\t\t\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tsetFetchErrors(true);\n\t\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t})\n\t\t.catch((error) => {\n\t\t\tsetFetchErrors(true);\n\t\t\tsetIsLoading(false);\n\t\t});\n};\n\nexport { elementWrappers, handleFetching };\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Row, Col, Alert } from 'reactstrap';\nimport { connect } from 'react-redux';\n\nimport ElementListContainer from './ElementListContainer';\nimport { ElementSelector } from '../../../shared/element-dropdown';\n\nimport {\n\tLAND,\n\tPORTION,\n\tPROD_ACTIVITIES,\n\tPRODUCT,\n\tMAINTENANCE_ACTIVITIES\n} from '../../../shared/values';\n\nimport { elementWrappers, handleFetching } from '../map';\n\nimport { Selector } from '../../../store/user/reducer';\nimport { StyledSpinner } from '../../../shared/styled';\n\n/**\n * Discover section, containers for elements details.\n *\n * @param user\n * @returns {JSX.Element}\n * @constructor\n * @component\n */\nconst DiscoverContainer = ({ user }) => {\n\tconst [currentElement, setCurrentElement] = useState(LAND);\n\n\tconst [elements, setElements] = useState([]);\n\tconst [fetchErrors, setFetchErrors] = useState(false);\n\tconst [isLoading, setIsLoading] = useState(true);\n\n\tuseEffect(() => {\n\t\tsetElements([]);\n\t\thandleFetching(user.data.username, setElements, setFetchErrors, setIsLoading, currentElement);\n\t}, [currentElement, user, setElements]);\n\n\treturn (\n\t\t<Container fluid>\n\t\t\t<Row className=\"justify-content-between align-items-center\">\n\t\t\t\t<Col>\n\t\t\t\t\t<h1>Esplora {currentElement}</h1>\n\t\t\t\t</Col>\n\t\t\t\t<Col xl={5} sm={12} className=\"justify-content-center\">\n\t\t\t\t\t<ElementSelector\n\t\t\t\t\t\telements={[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: LAND\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: PORTION\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: PROD_ACTIVITIES\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: PRODUCT\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: MAINTENANCE_ACTIVITIES\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]}\n\t\t\t\t\t\tcurrentElement={currentElement}\n\t\t\t\t\t\tsetCurrentElement={setCurrentElement}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t{isLoading && (\n\t\t\t\t<Row className=\"my-3 justify-content-center align-content-center align-items-center\">\n\t\t\t\t\t<Col xl=\"auto\" sm=\"auto\">\n\t\t\t\t\t\t<StyledSpinner size=\"large\"/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t)}\n\t\t\t{fetchErrors && (\n\t\t\t\t<Row className=\"justify-content-center align-content-center align-items-center\">\n\t\t\t\t\t<Col xl={12} sm={12}>\n\t\t\t\t\t\t<Alert color=\"danger\" className=\"my-3\">Si Ã¨ verificato un errore nel caricamento degli elementi</Alert>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t)}\n\t\t\t{!elements.length && !isLoading && !fetchErrors && (\n\t\t\t\t<Row className=\"justify-content-center align-content-center align-items-center\">\n\t\t\t\t\t<Col xl={12} sm={12}>\n\t\t\t\t\t\t<Alert color=\"info\" className=\"my-3\">Nessun elemento disponibile</Alert>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t)}\n\t\t\t<ElementListContainer\n\t\t\t\telements={elements}\n\t\t\t\tElementWrapper={elementWrappers[currentElement]}\n\t\t\t/>\n\t\t</Container>\n\t)\n\n};\n\nDiscoverContainer.propTypes = {\n\t/**\n\t * Logged in user\n\t */\n\tuser: PropTypes.object\n};\n\nconst mapStateToProps = (state) => ({\n\tuser: Selector.getUser(state)\n});\n\nexport default connect(mapStateToProps)(DiscoverContainer);\n","import React from 'react';\n\nimport DiscoverContainer from './containers';\nimport { DISCOVER } from '../../config/routes';\nimport withAuthentication from '../../shared/auth';\n\nconst Discover = () => <DiscoverContainer />;\n\nexport default withAuthentication(Discover, DISCOVER);\n","import React, { useState, useCallback, useMemo } from 'react';\n\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nconst ElementSelector = ({ elements, currentElement, setCurrentElement }) => {\n\tconst [isOpen, setIsOpen] = useState(false);\n\n\tconst toggle = useCallback(() => setIsOpen((isOpen) => !isOpen), [setIsOpen]);\n\tconst onClick = useCallback((value) => () => {\n\t\tsetCurrentElement(value);\n\t}, [setCurrentElement]);\n\n\tconst choices = useMemo(() => {\n\t\treturn elements.map((value, index) =>\n\t\t\t<DropdownItem disabled={value.disabled} onClick={onClick(value.type)} key={index}>{value.type}</DropdownItem>\n\t\t)\n\t}, [onClick, elements]);\n\n\treturn (\n\t\t<Dropdown\n\t\t\tisOpen={isOpen}\n\t\t\ttoggle={toggle}\n\t\t>\n\t\t\t<DropdownToggle caret block>\n\t\t\t\t{currentElement}\n\t\t\t</DropdownToggle>\n\t\t\t<DropdownMenu>\n\t\t\t\t{choices}\n\t\t\t</DropdownMenu>\n\t\t</Dropdown>\n\t)\n};\n\nexport default ElementSelector;\n"],"sourceRoot":""}